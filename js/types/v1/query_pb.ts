// @generated by protoc-gen-es v2.10.0 with parameter "target=ts,import_extension=none"
// @generated from file types/v1/query.proto (package types.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Val } from "./types_pb";
import { file_types_v1_types } from "./types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file types/v1/query.proto.
 */
export const file_types_v1_query: GenFile = /*@__PURE__*/
  fileDesc("ChR0eXBlcy92MS9xdWVyeS5wcm90bxIIdHlwZXMudjEieAoFUXVlcnkSJgoJdGltZXJhbmdlGAEgASgLMhMudHlwZXMudjEuVGltZXJhbmdlEiIKB2NvbnRleHQYAiABKAsyES50eXBlcy52MS5Db250ZXh0EiMKBXF1ZXJ5GAMgASgLMhQudHlwZXMudjEuU3RhdGVtZW50cyJRCglUaW1lcmFuZ2USHAoEZnJvbRgBIAEoCzIOLnR5cGVzLnYxLkV4cHISHwoCdG8YAiABKAsyDi50eXBlcy52MS5FeHBySACIAQFCBQoDX3RvIs0BCgdDb250ZXh0EjEKFHJlc291cmNlX2ZpbmdlcnByaW50GGUgASgLMg4udHlwZXMudjEuRXhwckgAiAEBEi4KEXNjb3BlX2ZpbmdlcnByaW50GGYgASgLMg4udHlwZXMudjEuRXhwckgBiAEBEiQKB2RhdGFzZXQYZyABKAsyDi50eXBlcy52MS5FeHBySAKIAQFCFwoVX3Jlc291cmNlX2ZpbmdlcnByaW50QhQKEl9zY29wZV9maW5nZXJwcmludEIKCghfZGF0YXNldCJgCgpTdGF0ZW1lbnRzEicKCnN0YXRlbWVudHMYASADKAsyEy50eXBlcy52MS5TdGF0ZW1lbnQSKQoGcmVuZGVyGAIgASgLMhkudHlwZXMudjEuUmVuZGVyU3RhdGVtZW50IpcFCglTdGF0ZW1lbnQSKgoGZmlsdGVyGAEgASgLMhgudHlwZXMudjEuRmlsdGVyT3BlcmF0b3JIABIwCglzdW1tYXJpemUYAiABKAsyGy50eXBlcy52MS5TdW1tYXJpemVPcGVyYXRvckgAEi0KB3Byb2plY3QYrAIgASgLMhkudHlwZXMudjEuUHJvamVjdE9wZXJhdG9ySAASNgoMcHJvamVjdF9hd2F5GK0CIAEoCzIdLnR5cGVzLnYxLlByb2plY3RBd2F5T3BlcmF0b3JIABI2Cgxwcm9qZWN0X2tlZXAYrgIgASgLMh0udHlwZXMudjEuUHJvamVjdEtlZXBPcGVyYXRvckgAEioKBmV4dGVuZBgEIAEoCzIYLnR5cGVzLnYxLkV4dGVuZE9wZXJhdG9ySAASKAoFY291bnQYBSABKAsyFy50eXBlcy52MS5Db3VudE9wZXJhdG9ySAASLgoIZGlzdGluY3QYBiABKAsyGi50eXBlcy52MS5EaXN0aW5jdE9wZXJhdG9ySAASKgoGc2FtcGxlGAcgASgLMhgudHlwZXMudjEuU2FtcGxlT3BlcmF0b3JIABIqCgZzZWFyY2gYCCABKAsyGC50eXBlcy52MS5TZWFyY2hPcGVyYXRvckgAEiYKBHNvcnQYCSABKAsyFi50eXBlcy52MS5Tb3J0T3BlcmF0b3JIABImCgR0YWtlGAogASgLMhYudHlwZXMudjEuVGFrZU9wZXJhdG9ySAASJAoDdG9wGAsgASgLMhUudHlwZXMudjEuVG9wT3BlcmF0b3JIABIxCgpnZXRfc2NoZW1hGAwgASgLMhsudHlwZXMudjEuR2V0U2NoZW1hT3BlcmF0b3JIAEIGCgRzdG10Ii4KDkZpbHRlck9wZXJhdG9yEhwKBGV4cHIYASABKAsyDi50eXBlcy52MS5FeHByIrcEChFTdW1tYXJpemVPcGVyYXRvchI6CgpwYXJhbWV0ZXJzGAEgASgLMiYudHlwZXMudjEuU3VtbWFyaXplT3BlcmF0b3IuUGFyYW1ldGVycxJRChRieV9ncm91cF9leHByZXNzaW9ucxgCIAEoCzIuLnR5cGVzLnYxLlN1bW1hcml6ZU9wZXJhdG9yLkJ5R3JvdXBFeHByZXNzaW9uc0gAiAEBGkcKClBhcmFtZXRlcnMSOQoKcGFyYW1ldGVycxgBIAMoCzIlLnR5cGVzLnYxLlN1bW1hcml6ZU9wZXJhdG9yLlBhcmFtZXRlchpxCglQYXJhbWV0ZXISKQoGY29sdW1uGAEgASgLMhQudHlwZXMudjEuSWRlbnRpZmllckgAiAEBEi4KEmFnZ3JlZ2F0ZV9mdW5jdGlvbhgCIAEoCzISLnR5cGVzLnYxLkZ1bmNDYWxsQgkKB19jb2x1bW4aUwoSQnlHcm91cEV4cHJlc3Npb25zEj0KBmdyb3VwcxgCIAMoCzItLnR5cGVzLnYxLlN1bW1hcml6ZU9wZXJhdG9yLkJ5R3JvdXBFeHByZXNzaW9uGmkKEUJ5R3JvdXBFeHByZXNzaW9uEikKBmNvbHVtbhgBIAEoCzIULnR5cGVzLnYxLklkZW50aWZpZXJIAIgBARIeCgZzY2FsYXIYAiABKAsyDi50eXBlcy52MS5FeHByQgkKB19jb2x1bW5CFwoVX2J5X2dyb3VwX2V4cHJlc3Npb25zIq4BCg9Qcm9qZWN0T3BlcmF0b3ISOQoLcHJvamVjdGlvbnMYASADKAsyJC50eXBlcy52MS5Qcm9qZWN0T3BlcmF0b3IuUHJvamVjdGlvbhpgCgpQcm9qZWN0aW9uEiQKBmNvbHVtbhgBIAEoCzIULnR5cGVzLnYxLklkZW50aWZpZXISIgoFdmFsdWUYAiABKAsyDi50eXBlcy52MS5FeHBySACIAQFCCAoGX3ZhbHVlIogBChNQcm9qZWN0QXdheU9wZXJhdG9yEj0KC3Byb2plY3Rpb25zGAEgAygLMigudHlwZXMudjEuUHJvamVjdEF3YXlPcGVyYXRvci5Qcm9qZWN0aW9uGjIKClByb2plY3Rpb24SJAoGY29sdW1uGAEgASgLMhQudHlwZXMudjEuSWRlbnRpZmllciKIAQoTUHJvamVjdEtlZXBPcGVyYXRvchI9Cgtwcm9qZWN0aW9ucxgBIAMoCzIoLnR5cGVzLnYxLlByb2plY3RLZWVwT3BlcmF0b3IuUHJvamVjdGlvbhoyCgpQcm9qZWN0aW9uEiQKBmNvbHVtbhgBIAEoCzIULnR5cGVzLnYxLklkZW50aWZpZXIinQEKDkV4dGVuZE9wZXJhdG9yEjgKC3Byb2plY3Rpb25zGAEgAygLMiMudHlwZXMudjEuRXh0ZW5kT3BlcmF0b3IuUHJvamVjdGlvbhpRCgpQcm9qZWN0aW9uEiQKBmNvbHVtbhgBIAEoCzIULnR5cGVzLnYxLklkZW50aWZpZXISHQoFdmFsdWUYAiABKAsyDi50eXBlcy52MS5FeHByIg8KDUNvdW50T3BlcmF0b3IiOAoQRGlzdGluY3RPcGVyYXRvchIkCgZmaWVsZHMYASADKAsyFC50eXBlcy52MS5JZGVudGlmaWVyIh8KDlNhbXBsZU9wZXJhdG9yEg0KBWNvdW50GAEgASgDIvcDCg5TZWFyY2hPcGVyYXRvchIRCgdsaXRlcmFsGGUgASgJSAASNQoFZmllbGQYZiABKAsyJC50eXBlcy52MS5TZWFyY2hPcGVyYXRvci5GaWVsZFNlYXJjaEgAEjUKBWV4YWN0GGcgASgLMiQudHlwZXMudjEuU2VhcmNoT3BlcmF0b3IuRXhhY3RTZWFyY2hIABI1CgVyZWdleBhoIAEoCzIkLnR5cGVzLnYxLlNlYXJjaE9wZXJhdG9yLlJlZ2V4U2VhcmNoSAASMAoEa2luZBgCIAEoDjIdLnR5cGVzLnYxLlNlYXJjaE9wZXJhdG9yLktpbmRIAYgBARoaCgdMaXRlcmFsEg8KB2xpdGVyYWwYASABKAkaLgoLRmllbGRTZWFyY2gSDgoGY29sdW1uGAEgASgJEg8KB2xpdGVyYWwYAiABKAkaLgoLRXhhY3RTZWFyY2gSDgoGY29sdW1uGAEgASgJEg8KB2xpdGVyYWwYAiABKAkaLAoLUmVnZXhTZWFyY2gSDgoGY29sdW1uGAEgASgJEg0KBXJlZ2V4GAIgASgJIjsKBEtpbmQSCwoHRGVmYXVsdBAAEhMKD0Nhc2VJbnNlbnNpdGl2ZRABEhEKDUNhc2VTZW5zaXRpdmUQAkILCglwcmVkaWNhdGVCBwoFX2tpbmQizQEKDFNvcnRPcGVyYXRvchIzCgpieV9jb2x1bW5zGAEgAygLMh8udHlwZXMudjEuU29ydE9wZXJhdG9yLkJ5Q29sdW1uGmwKCEJ5Q29sdW1uEiQKBmNvbHVtbhgBIAEoCzIULnR5cGVzLnYxLklkZW50aWZpZXISMAoFb3JkZXIYAiABKA4yHC50eXBlcy52MS5Tb3J0T3BlcmF0b3IuT3JkZXJIAIgBAUIICgZfb3JkZXIiGgoFT3JkZXISCAoERGVzYxAAEgcKA0FzYxABIh0KDFRha2VPcGVyYXRvchINCgVjb3VudBgBIAEoAyLlAQoLVG9wT3BlcmF0b3ISDQoFY291bnQYASABKAMSNgoJYnlfY29sdW1uGAIgASgLMh4udHlwZXMudjEuVG9wT3BlcmF0b3IuQnlDb2x1bW5IAIgBARplCghCeUNvbHVtbhIeCgZzY2FsYXIYASABKAsyDi50eXBlcy52MS5FeHByEi8KBW9yZGVyGAIgASgOMhsudHlwZXMudjEuVG9wT3BlcmF0b3IuT3JkZXJIAIgBAUIICgZfb3JkZXIiGgoFT3JkZXISCAoERGVzYxAAEgcKA0FzYxABQgwKCl9ieV9jb2x1bW4iEwoRR2V0U2NoZW1hT3BlcmF0b3IiQwoPUmVuZGVyU3RhdGVtZW50EigKBXNwbGl0GAEgASgLMhcudHlwZXMudjEuU3BsaXRPcGVyYXRvckgAQgYKBHN0bXQibgoNU3BsaXRPcGVyYXRvchIuCgJieRgCIAEoCzIiLnR5cGVzLnYxLlNwbGl0T3BlcmF0b3IuQnlPcGVyYXRvchotCgpCeU9wZXJhdG9yEh8KB3NjYWxhcnMYASADKAsyDi50eXBlcy52MS5FeHByIvUBCgRFeHByEiAKB2xpdGVyYWwYZSABKAsyDS50eXBlcy52MS5WYWxIABIiCgV1bmFyeRhmIAEoCzIRLnR5cGVzLnYxLlVuYXJ5T3BIABIkCgZiaW5hcnkYZyABKAsyEi50eXBlcy52MS5CaW5hcnlPcEgAEicKCWZ1bmNfY2FsbBhoIAEoCzISLnR5cGVzLnYxLkZ1bmNDYWxsSAASKgoKaWRlbnRpZmllchhpIAEoCzIULnR5cGVzLnYxLklkZW50aWZpZXJIABIkCgdpbmRleG9yGGogASgLMhEudHlwZXMudjEuSW5kZXhvckgAQgYKBGV4cHIieQoHVW5hcnlPcBImCgJvcBgBIAEoDjIaLnR5cGVzLnYxLlVuYXJ5T3AuT3BlcmF0b3ISGwoDYXJnGAIgASgLMg4udHlwZXMudjEuRXhwciIpCghPcGVyYXRvchILCgdJTlZBTElEEAASBwoDTk9UEAESBwoDTkVHEAIi5AYKCEJpbmFyeU9wEhsKA2xocxgBIAEoCzIOLnR5cGVzLnYxLkV4cHISJwoCb3AYAiABKA4yGy50eXBlcy52MS5CaW5hcnlPcC5PcGVyYXRvchIbCgNyaHMYAyABKAsyDi50eXBlcy52MS5FeHByIvQFCghPcGVyYXRvchILCgdJTlZBTElEEAASCwoHTE9HX0FORBBlEgoKBkxPR19PUhBmEgwKB05VTV9BREQQyQESDAoHTlVNX1NVQhDKARIMCgdOVU1fRElWEMsBEgwKB05VTV9NVUwQzAESDAoHTlVNX01PRBDNARILCgZDTVBfRVEQrQISDgoJQ01QX05PVEVREK4CEgsKBkNNUF9HVBCvAhIMCgdDTVBfR1RFELACEgsKBkNNUF9MVBCxAhIMCgdDTVBfTFRFELICEgsKBlNFVF9JThCRAxIOCglTRVRfTk9USU4QkgMSEAoLU1RSX0VRX05PQ1MQ9QMSEwoOU1RSX05PVEVRX05PQ1MQ9gMSEQoMU1RSX0NPTlRBSU5TEPcDEhUKEFNUUl9OT1RfQ09OVEFJTlMQ+AMSFAoPU1RSX0NPTlRBSU5TX0NTEPkDEhgKE1NUUl9OT1RfQ09OVEFJTlNfQ1MQ+gMSEwoOU1RSX1NUQVJUU1dJVEgQ+wMSFwoSU1RSX05PVF9TVEFSVFNXSVRIEPwDEhYKEVNUUl9TVEFSVFNXSVRIX0NTEP0DEhoKFVNUUl9OT1RfU1RBUlRTV0lUSF9DUxD+AxIRCgxTVFJfRU5EU1dJVEgQ/wMSFQoQU1RSX05PVF9FTkRTV0lUSBCABBIUCg9TVFJfRU5EU1dJVEhfQ1MQgQQSGAoTU1RSX05PVF9FTkRTV0lUSF9DUxCCBBIQCgtTVFJfSU5fTk9DUxCDBBIUCg9TVFJfTk9UX0lOX05PQ1MQhAQSGgoVU1RSX05PVF9NQVRDSEVTX1JFR0VYEIUEEhYKEVNUUl9NQVRDSEVTX1JFR0VYEIYEEgwKB1NUUl9IQVMQhwQSDwoKU1RSX0hBU19DUxCIBBISCg1TVFJfSEFTU1VGRklYEIkEEhUKEFNUUl9IQVNTVUZGSVhfQ1MQigQSEgoNU1RSX0hBU1BSRUZJWBCLBBIVChBTVFJfSEFTUFJFRklYX0NTEIwEIjYKCEZ1bmNDYWxsEgwKBG5hbWUYASABKAkSHAoEYXJncxgCIAMoCzIOLnR5cGVzLnYxLkV4cHIiGgoKSWRlbnRpZmllchIMCgRuYW1lGAEgASgJIkMKB0luZGV4b3ISGQoBeBgBIAEoCzIOLnR5cGVzLnYxLkV4cHISHQoFaW5kZXgYAiABKAsyDi50eXBlcy52MS5FeHByQooBCgxjb20udHlwZXMudjFCClF1ZXJ5UHJvdG9QAVotZ2l0aHViLmNvbS9odW1hbmxvZ2lvL2FwaS9nby90eXBlcy92MTt0eXBlc3YxogIDVFhYqgIIVHlwZXMuVjHKAghUeXBlc1xWMeICFFR5cGVzXFYxXEdQQk1ldGFkYXRh6gIJVHlwZXM6OlYxYgZwcm90bzM", [file_google_protobuf_timestamp, file_types_v1_types]);

/**
 * @generated from message types.v1.Query
 */
export type Query = Message<"types.v1.Query"> & {
  /**
   * @generated from field: types.v1.Timerange timerange = 1;
   */
  timerange?: Timerange;

  /**
   * @generated from field: types.v1.Context context = 2;
   */
  context?: Context;

  /**
   * @generated from field: types.v1.Statements query = 3;
   */
  query?: Statements;
};

/**
 * Describes the message types.v1.Query.
 * Use `create(QuerySchema)` to create a new message.
 */
export const QuerySchema: GenMessage<Query> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 0);

/**
 * @generated from message types.v1.Timerange
 */
export type Timerange = Message<"types.v1.Timerange"> & {
  /**
   * @generated from field: types.v1.Expr from = 1;
   */
  from?: Expr;

  /**
   * @generated from field: optional types.v1.Expr to = 2;
   */
  to?: Expr;
};

/**
 * Describes the message types.v1.Timerange.
 * Use `create(TimerangeSchema)` to create a new message.
 */
export const TimerangeSchema: GenMessage<Timerange> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 1);

/**
 * @generated from message types.v1.Context
 */
export type Context = Message<"types.v1.Context"> & {
  /**
   * @generated from field: optional types.v1.Expr resource_fingerprint = 101;
   */
  resourceFingerprint?: Expr;

  /**
   * @generated from field: optional types.v1.Expr scope_fingerprint = 102;
   */
  scopeFingerprint?: Expr;

  /**
   * @generated from field: optional types.v1.Expr dataset = 103;
   */
  dataset?: Expr;
};

/**
 * Describes the message types.v1.Context.
 * Use `create(ContextSchema)` to create a new message.
 */
export const ContextSchema: GenMessage<Context> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 2);

/**
 * @generated from message types.v1.Statements
 */
export type Statements = Message<"types.v1.Statements"> & {
  /**
   * statements are `|` separated
   *
   * @generated from field: repeated types.v1.Statement statements = 1;
   */
  statements: Statement[];

  /**
   * @generated from field: types.v1.RenderStatement render = 2;
   */
  render?: RenderStatement;
};

/**
 * Describes the message types.v1.Statements.
 * Use `create(StatementsSchema)` to create a new message.
 */
export const StatementsSchema: GenMessage<Statements> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 3);

/**
 * @generated from message types.v1.Statement
 */
export type Statement = Message<"types.v1.Statement"> & {
  /**
   * @generated from oneof types.v1.Statement.stmt
   */
  stmt: {
    /**
     * @generated from field: types.v1.FilterOperator filter = 1;
     */
    value: FilterOperator;
    case: "filter";
  } | {
    /**
     * @generated from field: types.v1.SummarizeOperator summarize = 2;
     */
    value: SummarizeOperator;
    case: "summarize";
  } | {
    /**
     * @generated from field: types.v1.ProjectOperator project = 300;
     */
    value: ProjectOperator;
    case: "project";
  } | {
    /**
     * @generated from field: types.v1.ProjectAwayOperator project_away = 301;
     */
    value: ProjectAwayOperator;
    case: "projectAway";
  } | {
    /**
     * @generated from field: types.v1.ProjectKeepOperator project_keep = 302;
     */
    value: ProjectKeepOperator;
    case: "projectKeep";
  } | {
    /**
     * @generated from field: types.v1.ExtendOperator extend = 4;
     */
    value: ExtendOperator;
    case: "extend";
  } | {
    /**
     * @generated from field: types.v1.CountOperator count = 5;
     */
    value: CountOperator;
    case: "count";
  } | {
    /**
     * @generated from field: types.v1.DistinctOperator distinct = 6;
     */
    value: DistinctOperator;
    case: "distinct";
  } | {
    /**
     * @generated from field: types.v1.SampleOperator sample = 7;
     */
    value: SampleOperator;
    case: "sample";
  } | {
    /**
     * @generated from field: types.v1.SearchOperator search = 8;
     */
    value: SearchOperator;
    case: "search";
  } | {
    /**
     * @generated from field: types.v1.SortOperator sort = 9;
     */
    value: SortOperator;
    case: "sort";
  } | {
    /**
     * @generated from field: types.v1.TakeOperator take = 10;
     */
    value: TakeOperator;
    case: "take";
  } | {
    /**
     * @generated from field: types.v1.TopOperator top = 11;
     */
    value: TopOperator;
    case: "top";
  } | {
    /**
     * @generated from field: types.v1.GetSchemaOperator get_schema = 12;
     */
    value: GetSchemaOperator;
    case: "getSchema";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message types.v1.Statement.
 * Use `create(StatementSchema)` to create a new message.
 */
export const StatementSchema: GenMessage<Statement> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 4);

/**
 * @generated from message types.v1.FilterOperator
 */
export type FilterOperator = Message<"types.v1.FilterOperator"> & {
  /**
   * @generated from field: types.v1.Expr expr = 1;
   */
  expr?: Expr;
};

/**
 * Describes the message types.v1.FilterOperator.
 * Use `create(FilterOperatorSchema)` to create a new message.
 */
export const FilterOperatorSchema: GenMessage<FilterOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 5);

/**
 * @generated from message types.v1.SummarizeOperator
 */
export type SummarizeOperator = Message<"types.v1.SummarizeOperator"> & {
  /**
   * @generated from field: types.v1.SummarizeOperator.Parameters parameters = 1;
   */
  parameters?: SummarizeOperator_Parameters;

  /**
   * @generated from field: optional types.v1.SummarizeOperator.ByGroupExpressions by_group_expressions = 2;
   */
  byGroupExpressions?: SummarizeOperator_ByGroupExpressions;
};

/**
 * Describes the message types.v1.SummarizeOperator.
 * Use `create(SummarizeOperatorSchema)` to create a new message.
 */
export const SummarizeOperatorSchema: GenMessage<SummarizeOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 6);

/**
 * @generated from message types.v1.SummarizeOperator.Parameters
 */
export type SummarizeOperator_Parameters = Message<"types.v1.SummarizeOperator.Parameters"> & {
  /**
   * @generated from field: repeated types.v1.SummarizeOperator.Parameter parameters = 1;
   */
  parameters: SummarizeOperator_Parameter[];
};

/**
 * Describes the message types.v1.SummarizeOperator.Parameters.
 * Use `create(SummarizeOperator_ParametersSchema)` to create a new message.
 */
export const SummarizeOperator_ParametersSchema: GenMessage<SummarizeOperator_Parameters> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 6, 0);

/**
 * @generated from message types.v1.SummarizeOperator.Parameter
 */
export type SummarizeOperator_Parameter = Message<"types.v1.SummarizeOperator.Parameter"> & {
  /**
   * @generated from field: optional types.v1.Identifier column = 1;
   */
  column?: Identifier;

  /**
   * @generated from field: types.v1.FuncCall aggregate_function = 2;
   */
  aggregateFunction?: FuncCall;
};

/**
 * Describes the message types.v1.SummarizeOperator.Parameter.
 * Use `create(SummarizeOperator_ParameterSchema)` to create a new message.
 */
export const SummarizeOperator_ParameterSchema: GenMessage<SummarizeOperator_Parameter> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 6, 1);

/**
 * @generated from message types.v1.SummarizeOperator.ByGroupExpressions
 */
export type SummarizeOperator_ByGroupExpressions = Message<"types.v1.SummarizeOperator.ByGroupExpressions"> & {
  /**
   * @generated from field: repeated types.v1.SummarizeOperator.ByGroupExpression groups = 2;
   */
  groups: SummarizeOperator_ByGroupExpression[];
};

/**
 * Describes the message types.v1.SummarizeOperator.ByGroupExpressions.
 * Use `create(SummarizeOperator_ByGroupExpressionsSchema)` to create a new message.
 */
export const SummarizeOperator_ByGroupExpressionsSchema: GenMessage<SummarizeOperator_ByGroupExpressions> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 6, 2);

/**
 * @generated from message types.v1.SummarizeOperator.ByGroupExpression
 */
export type SummarizeOperator_ByGroupExpression = Message<"types.v1.SummarizeOperator.ByGroupExpression"> & {
  /**
   * @generated from field: optional types.v1.Identifier column = 1;
   */
  column?: Identifier;

  /**
   * @generated from field: types.v1.Expr scalar = 2;
   */
  scalar?: Expr;
};

/**
 * Describes the message types.v1.SummarizeOperator.ByGroupExpression.
 * Use `create(SummarizeOperator_ByGroupExpressionSchema)` to create a new message.
 */
export const SummarizeOperator_ByGroupExpressionSchema: GenMessage<SummarizeOperator_ByGroupExpression> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 6, 3);

/**
 * @generated from message types.v1.ProjectOperator
 */
export type ProjectOperator = Message<"types.v1.ProjectOperator"> & {
  /**
   * @generated from field: repeated types.v1.ProjectOperator.Projection projections = 1;
   */
  projections: ProjectOperator_Projection[];
};

/**
 * Describes the message types.v1.ProjectOperator.
 * Use `create(ProjectOperatorSchema)` to create a new message.
 */
export const ProjectOperatorSchema: GenMessage<ProjectOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 7);

/**
 * @generated from message types.v1.ProjectOperator.Projection
 */
export type ProjectOperator_Projection = Message<"types.v1.ProjectOperator.Projection"> & {
  /**
   * @generated from field: types.v1.Identifier column = 1;
   */
  column?: Identifier;

  /**
   * @generated from field: optional types.v1.Expr value = 2;
   */
  value?: Expr;
};

/**
 * Describes the message types.v1.ProjectOperator.Projection.
 * Use `create(ProjectOperator_ProjectionSchema)` to create a new message.
 */
export const ProjectOperator_ProjectionSchema: GenMessage<ProjectOperator_Projection> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 7, 0);

/**
 * @generated from message types.v1.ProjectAwayOperator
 */
export type ProjectAwayOperator = Message<"types.v1.ProjectAwayOperator"> & {
  /**
   * @generated from field: repeated types.v1.ProjectAwayOperator.Projection projections = 1;
   */
  projections: ProjectAwayOperator_Projection[];
};

/**
 * Describes the message types.v1.ProjectAwayOperator.
 * Use `create(ProjectAwayOperatorSchema)` to create a new message.
 */
export const ProjectAwayOperatorSchema: GenMessage<ProjectAwayOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 8);

/**
 * @generated from message types.v1.ProjectAwayOperator.Projection
 */
export type ProjectAwayOperator_Projection = Message<"types.v1.ProjectAwayOperator.Projection"> & {
  /**
   * @generated from field: types.v1.Identifier column = 1;
   */
  column?: Identifier;
};

/**
 * Describes the message types.v1.ProjectAwayOperator.Projection.
 * Use `create(ProjectAwayOperator_ProjectionSchema)` to create a new message.
 */
export const ProjectAwayOperator_ProjectionSchema: GenMessage<ProjectAwayOperator_Projection> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 8, 0);

/**
 * @generated from message types.v1.ProjectKeepOperator
 */
export type ProjectKeepOperator = Message<"types.v1.ProjectKeepOperator"> & {
  /**
   * @generated from field: repeated types.v1.ProjectKeepOperator.Projection projections = 1;
   */
  projections: ProjectKeepOperator_Projection[];
};

/**
 * Describes the message types.v1.ProjectKeepOperator.
 * Use `create(ProjectKeepOperatorSchema)` to create a new message.
 */
export const ProjectKeepOperatorSchema: GenMessage<ProjectKeepOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 9);

/**
 * @generated from message types.v1.ProjectKeepOperator.Projection
 */
export type ProjectKeepOperator_Projection = Message<"types.v1.ProjectKeepOperator.Projection"> & {
  /**
   * @generated from field: types.v1.Identifier column = 1;
   */
  column?: Identifier;
};

/**
 * Describes the message types.v1.ProjectKeepOperator.Projection.
 * Use `create(ProjectKeepOperator_ProjectionSchema)` to create a new message.
 */
export const ProjectKeepOperator_ProjectionSchema: GenMessage<ProjectKeepOperator_Projection> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 9, 0);

/**
 * @generated from message types.v1.ExtendOperator
 */
export type ExtendOperator = Message<"types.v1.ExtendOperator"> & {
  /**
   * @generated from field: repeated types.v1.ExtendOperator.Projection projections = 1;
   */
  projections: ExtendOperator_Projection[];
};

/**
 * Describes the message types.v1.ExtendOperator.
 * Use `create(ExtendOperatorSchema)` to create a new message.
 */
export const ExtendOperatorSchema: GenMessage<ExtendOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 10);

/**
 * @generated from message types.v1.ExtendOperator.Projection
 */
export type ExtendOperator_Projection = Message<"types.v1.ExtendOperator.Projection"> & {
  /**
   * @generated from field: types.v1.Identifier column = 1;
   */
  column?: Identifier;

  /**
   * @generated from field: types.v1.Expr value = 2;
   */
  value?: Expr;
};

/**
 * Describes the message types.v1.ExtendOperator.Projection.
 * Use `create(ExtendOperator_ProjectionSchema)` to create a new message.
 */
export const ExtendOperator_ProjectionSchema: GenMessage<ExtendOperator_Projection> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 10, 0);

/**
 * @generated from message types.v1.CountOperator
 */
export type CountOperator = Message<"types.v1.CountOperator"> & {
};

/**
 * Describes the message types.v1.CountOperator.
 * Use `create(CountOperatorSchema)` to create a new message.
 */
export const CountOperatorSchema: GenMessage<CountOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 11);

/**
 * @generated from message types.v1.DistinctOperator
 */
export type DistinctOperator = Message<"types.v1.DistinctOperator"> & {
  /**
   * @generated from field: repeated types.v1.Identifier fields = 1;
   */
  fields: Identifier[];
};

/**
 * Describes the message types.v1.DistinctOperator.
 * Use `create(DistinctOperatorSchema)` to create a new message.
 */
export const DistinctOperatorSchema: GenMessage<DistinctOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 12);

/**
 * @generated from message types.v1.SampleOperator
 */
export type SampleOperator = Message<"types.v1.SampleOperator"> & {
  /**
   * @generated from field: int64 count = 1;
   */
  count: bigint;
};

/**
 * Describes the message types.v1.SampleOperator.
 * Use `create(SampleOperatorSchema)` to create a new message.
 */
export const SampleOperatorSchema: GenMessage<SampleOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 13);

/**
 * @generated from message types.v1.SearchOperator
 */
export type SearchOperator = Message<"types.v1.SearchOperator"> & {
  /**
   * @generated from oneof types.v1.SearchOperator.predicate
   */
  predicate: {
    /**
     * @generated from field: string literal = 101;
     */
    value: string;
    case: "literal";
  } | {
    /**
     * @generated from field: types.v1.SearchOperator.FieldSearch field = 102;
     */
    value: SearchOperator_FieldSearch;
    case: "field";
  } | {
    /**
     * @generated from field: types.v1.SearchOperator.ExactSearch exact = 103;
     */
    value: SearchOperator_ExactSearch;
    case: "exact";
  } | {
    /**
     * @generated from field: types.v1.SearchOperator.RegexSearch regex = 104;
     */
    value: SearchOperator_RegexSearch;
    case: "regex";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional types.v1.SearchOperator.Kind kind = 2;
   */
  kind?: SearchOperator_Kind;
};

/**
 * Describes the message types.v1.SearchOperator.
 * Use `create(SearchOperatorSchema)` to create a new message.
 */
export const SearchOperatorSchema: GenMessage<SearchOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 14);

/**
 * @generated from message types.v1.SearchOperator.Literal
 */
export type SearchOperator_Literal = Message<"types.v1.SearchOperator.Literal"> & {
  /**
   * @generated from field: string literal = 1;
   */
  literal: string;
};

/**
 * Describes the message types.v1.SearchOperator.Literal.
 * Use `create(SearchOperator_LiteralSchema)` to create a new message.
 */
export const SearchOperator_LiteralSchema: GenMessage<SearchOperator_Literal> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 14, 0);

/**
 * @generated from message types.v1.SearchOperator.FieldSearch
 */
export type SearchOperator_FieldSearch = Message<"types.v1.SearchOperator.FieldSearch"> & {
  /**
   * @generated from field: string column = 1;
   */
  column: string;

  /**
   * @generated from field: string literal = 2;
   */
  literal: string;
};

/**
 * Describes the message types.v1.SearchOperator.FieldSearch.
 * Use `create(SearchOperator_FieldSearchSchema)` to create a new message.
 */
export const SearchOperator_FieldSearchSchema: GenMessage<SearchOperator_FieldSearch> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 14, 1);

/**
 * @generated from message types.v1.SearchOperator.ExactSearch
 */
export type SearchOperator_ExactSearch = Message<"types.v1.SearchOperator.ExactSearch"> & {
  /**
   * @generated from field: string column = 1;
   */
  column: string;

  /**
   * @generated from field: string literal = 2;
   */
  literal: string;
};

/**
 * Describes the message types.v1.SearchOperator.ExactSearch.
 * Use `create(SearchOperator_ExactSearchSchema)` to create a new message.
 */
export const SearchOperator_ExactSearchSchema: GenMessage<SearchOperator_ExactSearch> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 14, 2);

/**
 * @generated from message types.v1.SearchOperator.RegexSearch
 */
export type SearchOperator_RegexSearch = Message<"types.v1.SearchOperator.RegexSearch"> & {
  /**
   * @generated from field: string column = 1;
   */
  column: string;

  /**
   * @generated from field: string regex = 2;
   */
  regex: string;
};

/**
 * Describes the message types.v1.SearchOperator.RegexSearch.
 * Use `create(SearchOperator_RegexSearchSchema)` to create a new message.
 */
export const SearchOperator_RegexSearchSchema: GenMessage<SearchOperator_RegexSearch> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 14, 3);

/**
 * @generated from enum types.v1.SearchOperator.Kind
 */
export enum SearchOperator_Kind {
  /**
   * @generated from enum value: Default = 0;
   */
  Default = 0,

  /**
   * @generated from enum value: CaseInsensitive = 1;
   */
  CaseInsensitive = 1,

  /**
   * @generated from enum value: CaseSensitive = 2;
   */
  CaseSensitive = 2,
}

/**
 * Describes the enum types.v1.SearchOperator.Kind.
 */
export const SearchOperator_KindSchema: GenEnum<SearchOperator_Kind> = /*@__PURE__*/
  enumDesc(file_types_v1_query, 14, 0);

/**
 * @generated from message types.v1.SortOperator
 */
export type SortOperator = Message<"types.v1.SortOperator"> & {
  /**
   * @generated from field: repeated types.v1.SortOperator.ByColumn by_columns = 1;
   */
  byColumns: SortOperator_ByColumn[];
};

/**
 * Describes the message types.v1.SortOperator.
 * Use `create(SortOperatorSchema)` to create a new message.
 */
export const SortOperatorSchema: GenMessage<SortOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 15);

/**
 * @generated from message types.v1.SortOperator.ByColumn
 */
export type SortOperator_ByColumn = Message<"types.v1.SortOperator.ByColumn"> & {
  /**
   * @generated from field: types.v1.Identifier column = 1;
   */
  column?: Identifier;

  /**
   * @generated from field: optional types.v1.SortOperator.Order order = 2;
   */
  order?: SortOperator_Order;
};

/**
 * Describes the message types.v1.SortOperator.ByColumn.
 * Use `create(SortOperator_ByColumnSchema)` to create a new message.
 */
export const SortOperator_ByColumnSchema: GenMessage<SortOperator_ByColumn> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 15, 0);

/**
 * @generated from enum types.v1.SortOperator.Order
 */
export enum SortOperator_Order {
  /**
   * @generated from enum value: Desc = 0;
   */
  Desc = 0,

  /**
   * @generated from enum value: Asc = 1;
   */
  Asc = 1,
}

/**
 * Describes the enum types.v1.SortOperator.Order.
 */
export const SortOperator_OrderSchema: GenEnum<SortOperator_Order> = /*@__PURE__*/
  enumDesc(file_types_v1_query, 15, 0);

/**
 * @generated from message types.v1.TakeOperator
 */
export type TakeOperator = Message<"types.v1.TakeOperator"> & {
  /**
   * @generated from field: int64 count = 1;
   */
  count: bigint;
};

/**
 * Describes the message types.v1.TakeOperator.
 * Use `create(TakeOperatorSchema)` to create a new message.
 */
export const TakeOperatorSchema: GenMessage<TakeOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 16);

/**
 * @generated from message types.v1.TopOperator
 */
export type TopOperator = Message<"types.v1.TopOperator"> & {
  /**
   * @generated from field: int64 count = 1;
   */
  count: bigint;

  /**
   * @generated from field: optional types.v1.TopOperator.ByColumn by_column = 2;
   */
  byColumn?: TopOperator_ByColumn;
};

/**
 * Describes the message types.v1.TopOperator.
 * Use `create(TopOperatorSchema)` to create a new message.
 */
export const TopOperatorSchema: GenMessage<TopOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 17);

/**
 * @generated from message types.v1.TopOperator.ByColumn
 */
export type TopOperator_ByColumn = Message<"types.v1.TopOperator.ByColumn"> & {
  /**
   * @generated from field: types.v1.Expr scalar = 1;
   */
  scalar?: Expr;

  /**
   * @generated from field: optional types.v1.TopOperator.Order order = 2;
   */
  order?: TopOperator_Order;
};

/**
 * Describes the message types.v1.TopOperator.ByColumn.
 * Use `create(TopOperator_ByColumnSchema)` to create a new message.
 */
export const TopOperator_ByColumnSchema: GenMessage<TopOperator_ByColumn> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 17, 0);

/**
 * @generated from enum types.v1.TopOperator.Order
 */
export enum TopOperator_Order {
  /**
   * @generated from enum value: Desc = 0;
   */
  Desc = 0,

  /**
   * @generated from enum value: Asc = 1;
   */
  Asc = 1,
}

/**
 * Describes the enum types.v1.TopOperator.Order.
 */
export const TopOperator_OrderSchema: GenEnum<TopOperator_Order> = /*@__PURE__*/
  enumDesc(file_types_v1_query, 17, 0);

/**
 * @generated from message types.v1.GetSchemaOperator
 */
export type GetSchemaOperator = Message<"types.v1.GetSchemaOperator"> & {
};

/**
 * Describes the message types.v1.GetSchemaOperator.
 * Use `create(GetSchemaOperatorSchema)` to create a new message.
 */
export const GetSchemaOperatorSchema: GenMessage<GetSchemaOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 18);

/**
 * @generated from message types.v1.RenderStatement
 */
export type RenderStatement = Message<"types.v1.RenderStatement"> & {
  /**
   * @generated from oneof types.v1.RenderStatement.stmt
   */
  stmt: {
    /**
     * @generated from field: types.v1.SplitOperator split = 1;
     */
    value: SplitOperator;
    case: "split";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message types.v1.RenderStatement.
 * Use `create(RenderStatementSchema)` to create a new message.
 */
export const RenderStatementSchema: GenMessage<RenderStatement> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 19);

/**
 * @generated from message types.v1.SplitOperator
 */
export type SplitOperator = Message<"types.v1.SplitOperator"> & {
  /**
   * @generated from field: types.v1.SplitOperator.ByOperator by = 2;
   */
  by?: SplitOperator_ByOperator;
};

/**
 * Describes the message types.v1.SplitOperator.
 * Use `create(SplitOperatorSchema)` to create a new message.
 */
export const SplitOperatorSchema: GenMessage<SplitOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 20);

/**
 * @generated from message types.v1.SplitOperator.ByOperator
 */
export type SplitOperator_ByOperator = Message<"types.v1.SplitOperator.ByOperator"> & {
  /**
   * @generated from field: repeated types.v1.Expr scalars = 1;
   */
  scalars: Expr[];
};

/**
 * Describes the message types.v1.SplitOperator.ByOperator.
 * Use `create(SplitOperator_ByOperatorSchema)` to create a new message.
 */
export const SplitOperator_ByOperatorSchema: GenMessage<SplitOperator_ByOperator> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 20, 0);

/**
 * @generated from message types.v1.Expr
 */
export type Expr = Message<"types.v1.Expr"> & {
  /**
   * @generated from oneof types.v1.Expr.expr
   */
  expr: {
    /**
     * @generated from field: types.v1.Val literal = 101;
     */
    value: Val;
    case: "literal";
  } | {
    /**
     * @generated from field: types.v1.UnaryOp unary = 102;
     */
    value: UnaryOp;
    case: "unary";
  } | {
    /**
     * @generated from field: types.v1.BinaryOp binary = 103;
     */
    value: BinaryOp;
    case: "binary";
  } | {
    /**
     * @generated from field: types.v1.FuncCall func_call = 104;
     */
    value: FuncCall;
    case: "funcCall";
  } | {
    /**
     * @generated from field: types.v1.Identifier identifier = 105;
     */
    value: Identifier;
    case: "identifier";
  } | {
    /**
     * kvs['hello']
     *
     * @generated from field: types.v1.Indexor indexor = 106;
     */
    value: Indexor;
    case: "indexor";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message types.v1.Expr.
 * Use `create(ExprSchema)` to create a new message.
 */
export const ExprSchema: GenMessage<Expr> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 21);

/**
 * @generated from message types.v1.UnaryOp
 */
export type UnaryOp = Message<"types.v1.UnaryOp"> & {
  /**
   * @generated from field: types.v1.UnaryOp.Operator op = 1;
   */
  op: UnaryOp_Operator;

  /**
   * @generated from field: types.v1.Expr arg = 2;
   */
  arg?: Expr;
};

/**
 * Describes the message types.v1.UnaryOp.
 * Use `create(UnaryOpSchema)` to create a new message.
 */
export const UnaryOpSchema: GenMessage<UnaryOp> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 22);

/**
 * @generated from enum types.v1.UnaryOp.Operator
 */
export enum UnaryOp_Operator {
  /**
   * @generated from enum value: INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: NOT = 1;
   */
  NOT = 1,

  /**
   * @generated from enum value: NEG = 2;
   */
  NEG = 2,
}

/**
 * Describes the enum types.v1.UnaryOp.Operator.
 */
export const UnaryOp_OperatorSchema: GenEnum<UnaryOp_Operator> = /*@__PURE__*/
  enumDesc(file_types_v1_query, 22, 0);

/**
 * @generated from message types.v1.BinaryOp
 */
export type BinaryOp = Message<"types.v1.BinaryOp"> & {
  /**
   * @generated from field: types.v1.Expr lhs = 1;
   */
  lhs?: Expr;

  /**
   * @generated from field: types.v1.BinaryOp.Operator op = 2;
   */
  op: BinaryOp_Operator;

  /**
   * @generated from field: types.v1.Expr rhs = 3;
   */
  rhs?: Expr;
};

/**
 * Describes the message types.v1.BinaryOp.
 * Use `create(BinaryOpSchema)` to create a new message.
 */
export const BinaryOpSchema: GenMessage<BinaryOp> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 23);

/**
 * @generated from enum types.v1.BinaryOp.Operator
 */
export enum BinaryOp_Operator {
  /**
   * @generated from enum value: INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: LOG_AND = 101;
   */
  LOG_AND = 101,

  /**
   * @generated from enum value: LOG_OR = 102;
   */
  LOG_OR = 102,

  /**
   * @generated from enum value: NUM_ADD = 201;
   */
  NUM_ADD = 201,

  /**
   * @generated from enum value: NUM_SUB = 202;
   */
  NUM_SUB = 202,

  /**
   * @generated from enum value: NUM_DIV = 203;
   */
  NUM_DIV = 203,

  /**
   * @generated from enum value: NUM_MUL = 204;
   */
  NUM_MUL = 204,

  /**
   * @generated from enum value: NUM_MOD = 205;
   */
  NUM_MOD = 205,

  /**
   * @generated from enum value: CMP_EQ = 301;
   */
  CMP_EQ = 301,

  /**
   * @generated from enum value: CMP_NOTEQ = 302;
   */
  CMP_NOTEQ = 302,

  /**
   * @generated from enum value: CMP_GT = 303;
   */
  CMP_GT = 303,

  /**
   * @generated from enum value: CMP_GTE = 304;
   */
  CMP_GTE = 304,

  /**
   * @generated from enum value: CMP_LT = 305;
   */
  CMP_LT = 305,

  /**
   * @generated from enum value: CMP_LTE = 306;
   */
  CMP_LTE = 306,

  /**
   * @generated from enum value: SET_IN = 401;
   */
  SET_IN = 401,

  /**
   * @generated from enum value: SET_NOTIN = 402;
   */
  SET_NOTIN = 402,

  /**
   * @generated from enum value: STR_EQ_NOCS = 501;
   */
  STR_EQ_NOCS = 501,

  /**
   * @generated from enum value: STR_NOTEQ_NOCS = 502;
   */
  STR_NOTEQ_NOCS = 502,

  /**
   * @generated from enum value: STR_CONTAINS = 503;
   */
  STR_CONTAINS = 503,

  /**
   * @generated from enum value: STR_NOT_CONTAINS = 504;
   */
  STR_NOT_CONTAINS = 504,

  /**
   * @generated from enum value: STR_CONTAINS_CS = 505;
   */
  STR_CONTAINS_CS = 505,

  /**
   * @generated from enum value: STR_NOT_CONTAINS_CS = 506;
   */
  STR_NOT_CONTAINS_CS = 506,

  /**
   * @generated from enum value: STR_STARTSWITH = 507;
   */
  STR_STARTSWITH = 507,

  /**
   * @generated from enum value: STR_NOT_STARTSWITH = 508;
   */
  STR_NOT_STARTSWITH = 508,

  /**
   * @generated from enum value: STR_STARTSWITH_CS = 509;
   */
  STR_STARTSWITH_CS = 509,

  /**
   * @generated from enum value: STR_NOT_STARTSWITH_CS = 510;
   */
  STR_NOT_STARTSWITH_CS = 510,

  /**
   * @generated from enum value: STR_ENDSWITH = 511;
   */
  STR_ENDSWITH = 511,

  /**
   * @generated from enum value: STR_NOT_ENDSWITH = 512;
   */
  STR_NOT_ENDSWITH = 512,

  /**
   * @generated from enum value: STR_ENDSWITH_CS = 513;
   */
  STR_ENDSWITH_CS = 513,

  /**
   * @generated from enum value: STR_NOT_ENDSWITH_CS = 514;
   */
  STR_NOT_ENDSWITH_CS = 514,

  /**
   * @generated from enum value: STR_IN_NOCS = 515;
   */
  STR_IN_NOCS = 515,

  /**
   * @generated from enum value: STR_NOT_IN_NOCS = 516;
   */
  STR_NOT_IN_NOCS = 516,

  /**
   * @generated from enum value: STR_NOT_MATCHES_REGEX = 517;
   */
  STR_NOT_MATCHES_REGEX = 517,

  /**
   * @generated from enum value: STR_MATCHES_REGEX = 518;
   */
  STR_MATCHES_REGEX = 518,

  /**
   * @generated from enum value: STR_HAS = 519;
   */
  STR_HAS = 519,

  /**
   * @generated from enum value: STR_HAS_CS = 520;
   */
  STR_HAS_CS = 520,

  /**
   * @generated from enum value: STR_HASSUFFIX = 521;
   */
  STR_HASSUFFIX = 521,

  /**
   * @generated from enum value: STR_HASSUFFIX_CS = 522;
   */
  STR_HASSUFFIX_CS = 522,

  /**
   * @generated from enum value: STR_HASPREFIX = 523;
   */
  STR_HASPREFIX = 523,

  /**
   * @generated from enum value: STR_HASPREFIX_CS = 524;
   */
  STR_HASPREFIX_CS = 524,
}

/**
 * Describes the enum types.v1.BinaryOp.Operator.
 */
export const BinaryOp_OperatorSchema: GenEnum<BinaryOp_Operator> = /*@__PURE__*/
  enumDesc(file_types_v1_query, 23, 0);

/**
 * @generated from message types.v1.FuncCall
 */
export type FuncCall = Message<"types.v1.FuncCall"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated types.v1.Expr args = 2;
   */
  args: Expr[];
};

/**
 * Describes the message types.v1.FuncCall.
 * Use `create(FuncCallSchema)` to create a new message.
 */
export const FuncCallSchema: GenMessage<FuncCall> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 24);

/**
 * @generated from message types.v1.Identifier
 */
export type Identifier = Message<"types.v1.Identifier"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message types.v1.Identifier.
 * Use `create(IdentifierSchema)` to create a new message.
 */
export const IdentifierSchema: GenMessage<Identifier> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 25);

/**
 * @generated from message types.v1.Indexor
 */
export type Indexor = Message<"types.v1.Indexor"> & {
  /**
   * @generated from field: types.v1.Expr x = 1;
   */
  x?: Expr;

  /**
   * @generated from field: types.v1.Expr index = 2;
   */
  index?: Expr;
};

/**
 * Describes the message types.v1.Indexor.
 * Use `create(IndexorSchema)` to create a new message.
 */
export const IndexorSchema: GenMessage<Indexor> = /*@__PURE__*/
  messageDesc(file_types_v1_query, 26);

