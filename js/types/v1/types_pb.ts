// @generated by protoc-gen-es v2.8.0 with parameter "target=ts,import_extension=none"
// @generated from file types/v1/types.proto (package types.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { ULID } from "./ulid_pb";
import { file_types_v1_ulid } from "./ulid_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file types/v1/types.proto.
 */
export const file_types_v1_types: GenFile = /*@__PURE__*/
  fileDesc("ChR0eXBlcy92MS90eXBlcy5wcm90bxIIdHlwZXMudjEi7gMKB1ZhclR5cGUSJgoGc2NhbGFyGAEgASgOMhQudHlwZXMudjEuU2NhbGFyVHlwZUgAEiwKBWFycmF5GAIgASgLMhsudHlwZXMudjEuVmFyVHlwZS5BcnJheVR5cGVIABIuCgZvYmplY3QYAyABKAsyHC50eXBlcy52MS5WYXJUeXBlLk9iamVjdFR5cGVIABIoCgNtYXAYBCABKAsyGS50eXBlcy52MS5WYXJUeXBlLk1hcFR5cGVIABImCgRudWxsGAUgASgLMhYudHlwZXMudjEuVmFyVHlwZS5OdWxsSAAaLQoJQXJyYXlUeXBlEiAKBWl0ZW1zGAEgASgLMhEudHlwZXMudjEuVmFyVHlwZRp/CgpPYmplY3RUeXBlEjIKA2t2cxgBIAMoCzIlLnR5cGVzLnYxLlZhclR5cGUuT2JqZWN0VHlwZS5LdnNFbnRyeRo9CghLdnNFbnRyeRILCgNrZXkYASABKAkSIAoFdmFsdWUYAiABKAsyES50eXBlcy52MS5WYXJUeXBlOgI4ARpLCgdNYXBUeXBlEh4KA2tleRgBIAEoCzIRLnR5cGVzLnYxLlZhclR5cGUSIAoFdmFsdWUYAiABKAsyES50eXBlcy52MS5WYXJUeXBlGgYKBE51bGxCBgoEdHlwZSIvCgJLVhILCgNrZXkYASABKAkSHAoFdmFsdWUYAiABKAsyDS50eXBlcy52MS5WYWwi1gMKA1ZhbBIfCgR0eXBlGGQgASgLMhEudHlwZXMudjEuVmFyVHlwZRIOCgNzdHIYyQEgASgJSAASDgoDZjY0GMoBIAEoAUgAEg4KA2k2NBjLASABKANIABIRCgZoYXNoNjQY1AEgASgESAASDwoEYm9vbBjMASABKAhIABIpCgJ0cxjNASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAASKQoDZHVyGM4BIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkgAEg8KBGJsb2IY0wEgASgMSAASJgoIdHJhY2VfaWQY1QEgASgLMhEudHlwZXMudjEuVHJhY2VJREgAEiQKB3NwYW5faWQY1gEgASgLMhAudHlwZXMudjEuU3BhbklESAASHwoEdWxpZBjXASABKAsyDi50eXBlcy52MS5VTElESAASHQoDYXJyGM8BIAEoCzINLnR5cGVzLnYxLkFyckgAEh0KA29iahjQASABKAsyDS50eXBlcy52MS5PYmpIABIdCgNtYXAY0QEgASgLMg0udHlwZXMudjEuTWFwSAASHwoEbnVsbBjSASABKAsyDi50eXBlcy52MS5OdWxsSABCBgoEa2luZCIgCgNPYmoSGQoDa3ZzGAEgAygLMgwudHlwZXMudjEuS1YiIwoDQXJyEhwKBWl0ZW1zGAEgAygLMg0udHlwZXMudjEuVmFsIm4KA01hcBIkCgdlbnRyaWVzGAEgAygLMhMudHlwZXMudjEuTWFwLkVudHJ5GkEKBUVudHJ5EhoKA2tleRgBIAEoCzINLnR5cGVzLnYxLlZhbBIcCgV2YWx1ZRgCIAEoCzINLnR5cGVzLnYxLlZhbCIGCgROdWxsIsoCCgZTY2FsYXISHwoEdHlwZRhkIAEoCzIRLnR5cGVzLnYxLlZhclR5cGUSDgoDc3RyGMkBIAEoCUgAEg4KA2Y2NBjKASABKAFIABIOCgNpNjQYywEgASgDSAASEQoGaGFzaDY0GM0BIAEoBEgAEg8KBGJvb2wYzAEgASgISAASKQoCdHMYzwEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAEikKA2R1chjQASABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25IABImCgh0cmFjZV9pZBjRASABKAsyES50eXBlcy52MS5UcmFjZUlESAASJAoHc3Bhbl9pZBjSASABKAsyEC50eXBlcy52MS5TcGFuSURIABIfCgR1bGlkGNMBIAEoCzIOLnR5cGVzLnYxLlVMSURIAEIGCgRraW5kIjYKBkZsYXRLVhILCgNrZXkYASABKAkSHwoFdmFsdWUYAiABKAsyEC50eXBlcy52MS5TY2FsYXIiKgoHRmxhdEFychIfCgVpdGVtcxgBIAMoCzIQLnR5cGVzLnYxLlNjYWxhciJxCglUYWJsZVR5cGUSKwoHY29sdW1ucxgBIAMoCzIaLnR5cGVzLnYxLlRhYmxlVHlwZS5Db2x1bW4aNwoGQ29sdW1uEgwKBG5hbWUYASABKAkSHwoEdHlwZRgCIAEoCzIRLnR5cGVzLnYxLlZhclR5cGUiRwoFVGFibGUSIQoEdHlwZRgBIAEoCzITLnR5cGVzLnYxLlRhYmxlVHlwZRIbCgRyb3dzGAIgAygLMg0udHlwZXMudjEuQXJyIrwCCg5EYXRhU3RyZWFtVHlwZRI9CgVtdWx0aRgBIAEoCzIsLnR5cGVzLnYxLkRhdGFTdHJlYW1UeXBlLk11bHRpRGF0YVN0cmVhbVR5cGVIABIkCgV0YWJsZRgCIAEoCzITLnR5cGVzLnYxLlRhYmxlVHlwZUgAEjAKBGxvZ3MYAyABKAsyIC50eXBlcy52MS5EYXRhU3RyZWFtVHlwZS5Mb2dUeXBlSAASMgoFc3BhbnMYBCABKAsyIS50eXBlcy52MS5EYXRhU3RyZWFtVHlwZS5TcGFuVHlwZUgAGkAKE011bHRpRGF0YVN0cmVhbVR5cGUSKQoHc3RyZWFtcxgBIAEoCzIYLnR5cGVzLnYxLkRhdGFTdHJlYW1UeXBlGgkKB0xvZ1R5cGUaCgoIU3BhblR5cGVCBgoEdHlwZSIWCgdUcmFjZUlEEgsKA3JhdxgBIAEoDCIVCgZTcGFuSUQSCwoDcmF3GAEgASgMKooBCgpTY2FsYXJUeXBlEgsKB3Vua25vd24QABIHCgNzdHIQARIHCgNmNjQQAhIHCgNpNjQQAxIKCgZoYXNoNjQQHxIICgRib29sEAQSBgoCdHMQBRIHCgNkdXIQBhIICgRibG9iEAgSDAoIdHJhY2VfaWQQWhILCgdzcGFuX2lkEFsSCAoEdWxpZBBcQooBCgxjb20udHlwZXMudjFCClR5cGVzUHJvdG9QAVotZ2l0aHViLmNvbS9odW1hbmxvZ2lvL2FwaS9nby90eXBlcy92MTt0eXBlc3YxogIDVFhYqgIIVHlwZXMuVjHKAghUeXBlc1xWMeICFFR5cGVzXFYxXEdQQk1ldGFkYXRh6gIJVHlwZXM6OlYxYgZwcm90bzM", [file_google_protobuf_duration, file_google_protobuf_timestamp, file_types_v1_ulid]);

/**
 * @generated from message types.v1.VarType
 */
export type VarType = Message<"types.v1.VarType"> & {
  /**
   * @generated from oneof types.v1.VarType.type
   */
  type: {
    /**
     * @generated from field: types.v1.ScalarType scalar = 1;
     */
    value: ScalarType;
    case: "scalar";
  } | {
    /**
     * @generated from field: types.v1.VarType.ArrayType array = 2;
     */
    value: VarType_ArrayType;
    case: "array";
  } | {
    /**
     * @generated from field: types.v1.VarType.ObjectType object = 3;
     */
    value: VarType_ObjectType;
    case: "object";
  } | {
    /**
     * @generated from field: types.v1.VarType.MapType map = 4;
     */
    value: VarType_MapType;
    case: "map";
  } | {
    /**
     * @generated from field: types.v1.VarType.Null null = 5;
     */
    value: VarType_Null;
    case: "null";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message types.v1.VarType.
 * Use `create(VarTypeSchema)` to create a new message.
 */
export const VarTypeSchema: GenMessage<VarType> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 0);

/**
 * @generated from message types.v1.VarType.ArrayType
 */
export type VarType_ArrayType = Message<"types.v1.VarType.ArrayType"> & {
  /**
   * @generated from field: types.v1.VarType items = 1;
   */
  items?: VarType;
};

/**
 * Describes the message types.v1.VarType.ArrayType.
 * Use `create(VarType_ArrayTypeSchema)` to create a new message.
 */
export const VarType_ArrayTypeSchema: GenMessage<VarType_ArrayType> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 0, 0);

/**
 * @generated from message types.v1.VarType.ObjectType
 */
export type VarType_ObjectType = Message<"types.v1.VarType.ObjectType"> & {
  /**
   * @generated from field: map<string, types.v1.VarType> kvs = 1;
   */
  kvs: { [key: string]: VarType };
};

/**
 * Describes the message types.v1.VarType.ObjectType.
 * Use `create(VarType_ObjectTypeSchema)` to create a new message.
 */
export const VarType_ObjectTypeSchema: GenMessage<VarType_ObjectType> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 0, 1);

/**
 * @generated from message types.v1.VarType.MapType
 */
export type VarType_MapType = Message<"types.v1.VarType.MapType"> & {
  /**
   * @generated from field: types.v1.VarType key = 1;
   */
  key?: VarType;

  /**
   * @generated from field: types.v1.VarType value = 2;
   */
  value?: VarType;
};

/**
 * Describes the message types.v1.VarType.MapType.
 * Use `create(VarType_MapTypeSchema)` to create a new message.
 */
export const VarType_MapTypeSchema: GenMessage<VarType_MapType> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 0, 2);

/**
 * @generated from message types.v1.VarType.Null
 */
export type VarType_Null = Message<"types.v1.VarType.Null"> & {
};

/**
 * Describes the message types.v1.VarType.Null.
 * Use `create(VarType_NullSchema)` to create a new message.
 */
export const VarType_NullSchema: GenMessage<VarType_Null> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 0, 3);

/**
 * @generated from message types.v1.KV
 */
export type KV = Message<"types.v1.KV"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: types.v1.Val value = 2;
   */
  value?: Val;
};

/**
 * Describes the message types.v1.KV.
 * Use `create(KVSchema)` to create a new message.
 */
export const KVSchema: GenMessage<KV> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 1);

/**
 * @generated from message types.v1.Val
 */
export type Val = Message<"types.v1.Val"> & {
  /**
   * @generated from field: types.v1.VarType type = 100;
   */
  type?: VarType;

  /**
   * @generated from oneof types.v1.Val.kind
   */
  kind: {
    /**
     * @generated from field: string str = 201;
     */
    value: string;
    case: "str";
  } | {
    /**
     * @generated from field: double f64 = 202;
     */
    value: number;
    case: "f64";
  } | {
    /**
     * @generated from field: int64 i64 = 203;
     */
    value: bigint;
    case: "i64";
  } | {
    /**
     * @generated from field: uint64 hash64 = 212;
     */
    value: bigint;
    case: "hash64";
  } | {
    /**
     * @generated from field: bool bool = 204;
     */
    value: boolean;
    case: "bool";
  } | {
    /**
     * @generated from field: google.protobuf.Timestamp ts = 205;
     */
    value: Timestamp;
    case: "ts";
  } | {
    /**
     * @generated from field: google.protobuf.Duration dur = 206;
     */
    value: Duration;
    case: "dur";
  } | {
    /**
     * @generated from field: bytes blob = 211;
     */
    value: Uint8Array;
    case: "blob";
  } | {
    /**
     * @generated from field: types.v1.TraceID trace_id = 213;
     */
    value: TraceID;
    case: "traceId";
  } | {
    /**
     * @generated from field: types.v1.SpanID span_id = 214;
     */
    value: SpanID;
    case: "spanId";
  } | {
    /**
     * @generated from field: types.v1.ULID ulid = 215;
     */
    value: ULID;
    case: "ulid";
  } | {
    /**
     * @generated from field: types.v1.Arr arr = 207;
     */
    value: Arr;
    case: "arr";
  } | {
    /**
     * @generated from field: types.v1.Obj obj = 208;
     */
    value: Obj;
    case: "obj";
  } | {
    /**
     * @generated from field: types.v1.Map map = 209;
     */
    value: Map;
    case: "map";
  } | {
    /**
     * @generated from field: types.v1.Null null = 210;
     */
    value: Null;
    case: "null";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message types.v1.Val.
 * Use `create(ValSchema)` to create a new message.
 */
export const ValSchema: GenMessage<Val> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 2);

/**
 * @generated from message types.v1.Obj
 */
export type Obj = Message<"types.v1.Obj"> & {
  /**
   * @generated from field: repeated types.v1.KV kvs = 1;
   */
  kvs: KV[];
};

/**
 * Describes the message types.v1.Obj.
 * Use `create(ObjSchema)` to create a new message.
 */
export const ObjSchema: GenMessage<Obj> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 3);

/**
 * @generated from message types.v1.Arr
 */
export type Arr = Message<"types.v1.Arr"> & {
  /**
   * @generated from field: repeated types.v1.Val items = 1;
   */
  items: Val[];
};

/**
 * Describes the message types.v1.Arr.
 * Use `create(ArrSchema)` to create a new message.
 */
export const ArrSchema: GenMessage<Arr> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 4);

/**
 * @generated from message types.v1.Map
 */
export type Map = Message<"types.v1.Map"> & {
  /**
   * @generated from field: repeated types.v1.Map.Entry entries = 1;
   */
  entries: Map_Entry[];
};

/**
 * Describes the message types.v1.Map.
 * Use `create(MapSchema)` to create a new message.
 */
export const MapSchema: GenMessage<Map> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 5);

/**
 * @generated from message types.v1.Map.Entry
 */
export type Map_Entry = Message<"types.v1.Map.Entry"> & {
  /**
   * @generated from field: types.v1.Val key = 1;
   */
  key?: Val;

  /**
   * @generated from field: types.v1.Val value = 2;
   */
  value?: Val;
};

/**
 * Describes the message types.v1.Map.Entry.
 * Use `create(Map_EntrySchema)` to create a new message.
 */
export const Map_EntrySchema: GenMessage<Map_Entry> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 5, 0);

/**
 * @generated from message types.v1.Null
 */
export type Null = Message<"types.v1.Null"> & {
};

/**
 * Describes the message types.v1.Null.
 * Use `create(NullSchema)` to create a new message.
 */
export const NullSchema: GenMessage<Null> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 6);

/**
 * @generated from message types.v1.Scalar
 */
export type Scalar = Message<"types.v1.Scalar"> & {
  /**
   * @generated from field: types.v1.VarType type = 100;
   */
  type?: VarType;

  /**
   * @generated from oneof types.v1.Scalar.kind
   */
  kind: {
    /**
     * @generated from field: string str = 201;
     */
    value: string;
    case: "str";
  } | {
    /**
     * @generated from field: double f64 = 202;
     */
    value: number;
    case: "f64";
  } | {
    /**
     * @generated from field: int64 i64 = 203;
     */
    value: bigint;
    case: "i64";
  } | {
    /**
     * @generated from field: uint64 hash64 = 205;
     */
    value: bigint;
    case: "hash64";
  } | {
    /**
     * @generated from field: bool bool = 204;
     */
    value: boolean;
    case: "bool";
  } | {
    /**
     * @generated from field: google.protobuf.Timestamp ts = 207;
     */
    value: Timestamp;
    case: "ts";
  } | {
    /**
     * @generated from field: google.protobuf.Duration dur = 208;
     */
    value: Duration;
    case: "dur";
  } | {
    /**
     * @generated from field: types.v1.TraceID trace_id = 209;
     */
    value: TraceID;
    case: "traceId";
  } | {
    /**
     * @generated from field: types.v1.SpanID span_id = 210;
     */
    value: SpanID;
    case: "spanId";
  } | {
    /**
     * @generated from field: types.v1.ULID ulid = 211;
     */
    value: ULID;
    case: "ulid";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message types.v1.Scalar.
 * Use `create(ScalarSchema)` to create a new message.
 */
export const ScalarSchema: GenMessage<Scalar> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 7);

/**
 * @generated from message types.v1.FlatKV
 */
export type FlatKV = Message<"types.v1.FlatKV"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: types.v1.Scalar value = 2;
   */
  value?: Scalar;
};

/**
 * Describes the message types.v1.FlatKV.
 * Use `create(FlatKVSchema)` to create a new message.
 */
export const FlatKVSchema: GenMessage<FlatKV> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 8);

/**
 * @generated from message types.v1.FlatArr
 */
export type FlatArr = Message<"types.v1.FlatArr"> & {
  /**
   * @generated from field: repeated types.v1.Scalar items = 1;
   */
  items: Scalar[];
};

/**
 * Describes the message types.v1.FlatArr.
 * Use `create(FlatArrSchema)` to create a new message.
 */
export const FlatArrSchema: GenMessage<FlatArr> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 9);

/**
 * @generated from message types.v1.TableType
 */
export type TableType = Message<"types.v1.TableType"> & {
  /**
   * @generated from field: repeated types.v1.TableType.Column columns = 1;
   */
  columns: TableType_Column[];
};

/**
 * Describes the message types.v1.TableType.
 * Use `create(TableTypeSchema)` to create a new message.
 */
export const TableTypeSchema: GenMessage<TableType> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 10);

/**
 * @generated from message types.v1.TableType.Column
 */
export type TableType_Column = Message<"types.v1.TableType.Column"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: types.v1.VarType type = 2;
   */
  type?: VarType;
};

/**
 * Describes the message types.v1.TableType.Column.
 * Use `create(TableType_ColumnSchema)` to create a new message.
 */
export const TableType_ColumnSchema: GenMessage<TableType_Column> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 10, 0);

/**
 * @generated from message types.v1.Table
 */
export type Table = Message<"types.v1.Table"> & {
  /**
   * @generated from field: types.v1.TableType type = 1;
   */
  type?: TableType;

  /**
   * @generated from field: repeated types.v1.Arr rows = 2;
   */
  rows: Arr[];
};

/**
 * Describes the message types.v1.Table.
 * Use `create(TableSchema)` to create a new message.
 */
export const TableSchema: GenMessage<Table> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 11);

/**
 * @generated from message types.v1.DataStreamType
 */
export type DataStreamType = Message<"types.v1.DataStreamType"> & {
  /**
   * @generated from oneof types.v1.DataStreamType.type
   */
  type: {
    /**
     * @generated from field: types.v1.DataStreamType.MultiDataStreamType multi = 1;
     */
    value: DataStreamType_MultiDataStreamType;
    case: "multi";
  } | {
    /**
     * @generated from field: types.v1.TableType table = 2;
     */
    value: TableType;
    case: "table";
  } | {
    /**
     * @generated from field: types.v1.DataStreamType.LogType logs = 3;
     */
    value: DataStreamType_LogType;
    case: "logs";
  } | {
    /**
     * @generated from field: types.v1.DataStreamType.SpanType spans = 4;
     */
    value: DataStreamType_SpanType;
    case: "spans";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message types.v1.DataStreamType.
 * Use `create(DataStreamTypeSchema)` to create a new message.
 */
export const DataStreamTypeSchema: GenMessage<DataStreamType> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 12);

/**
 * @generated from message types.v1.DataStreamType.MultiDataStreamType
 */
export type DataStreamType_MultiDataStreamType = Message<"types.v1.DataStreamType.MultiDataStreamType"> & {
  /**
   * @generated from field: types.v1.DataStreamType streams = 1;
   */
  streams?: DataStreamType;
};

/**
 * Describes the message types.v1.DataStreamType.MultiDataStreamType.
 * Use `create(DataStreamType_MultiDataStreamTypeSchema)` to create a new message.
 */
export const DataStreamType_MultiDataStreamTypeSchema: GenMessage<DataStreamType_MultiDataStreamType> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 12, 0);

/**
 * @generated from message types.v1.DataStreamType.LogType
 */
export type DataStreamType_LogType = Message<"types.v1.DataStreamType.LogType"> & {
};

/**
 * Describes the message types.v1.DataStreamType.LogType.
 * Use `create(DataStreamType_LogTypeSchema)` to create a new message.
 */
export const DataStreamType_LogTypeSchema: GenMessage<DataStreamType_LogType> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 12, 1);

/**
 * @generated from message types.v1.DataStreamType.SpanType
 */
export type DataStreamType_SpanType = Message<"types.v1.DataStreamType.SpanType"> & {
};

/**
 * Describes the message types.v1.DataStreamType.SpanType.
 * Use `create(DataStreamType_SpanTypeSchema)` to create a new message.
 */
export const DataStreamType_SpanTypeSchema: GenMessage<DataStreamType_SpanType> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 12, 2);

/**
 * @generated from message types.v1.TraceID
 */
export type TraceID = Message<"types.v1.TraceID"> & {
  /**
   * @generated from field: bytes raw = 1;
   */
  raw: Uint8Array;
};

/**
 * Describes the message types.v1.TraceID.
 * Use `create(TraceIDSchema)` to create a new message.
 */
export const TraceIDSchema: GenMessage<TraceID> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 13);

/**
 * @generated from message types.v1.SpanID
 */
export type SpanID = Message<"types.v1.SpanID"> & {
  /**
   * @generated from field: bytes raw = 1;
   */
  raw: Uint8Array;
};

/**
 * Describes the message types.v1.SpanID.
 * Use `create(SpanIDSchema)` to create a new message.
 */
export const SpanIDSchema: GenMessage<SpanID> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 14);

/**
 * @generated from enum types.v1.ScalarType
 */
export enum ScalarType {
  /**
   * @generated from enum value: unknown = 0;
   */
  unknown = 0,

  /**
   * @generated from enum value: str = 1;
   */
  str = 1,

  /**
   * @generated from enum value: f64 = 2;
   */
  f64 = 2,

  /**
   * @generated from enum value: i64 = 3;
   */
  i64 = 3,

  /**
   * @generated from enum value: hash64 = 31;
   */
  hash64 = 31,

  /**
   * @generated from enum value: bool = 4;
   */
  bool = 4,

  /**
   * @generated from enum value: ts = 5;
   */
  ts = 5,

  /**
   * @generated from enum value: dur = 6;
   */
  dur = 6,

  /**
   * @generated from enum value: blob = 8;
   */
  blob = 8,

  /**
   * @generated from enum value: trace_id = 90;
   */
  trace_id = 90,

  /**
   * @generated from enum value: span_id = 91;
   */
  span_id = 91,

  /**
   * @generated from enum value: ulid = 92;
   */
  ulid = 92,
}

/**
 * Describes the enum types.v1.ScalarType.
 */
export const ScalarTypeSchema: GenEnum<ScalarType> = /*@__PURE__*/
  enumDesc(file_types_v1_types, 0);

