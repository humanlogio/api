// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file types/v1/dashboard.proto (package types.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message types.v1.Dashboard
 */
export class Dashboard extends Message<Dashboard> {
  /**
   * @generated from field: string id = 100;
   */
  id = "";

  /**
   * @generated from field: string name = 200;
   */
  name = "";

  /**
   * @generated from field: string description = 201;
   */
  description = "";

  /**
   * @generated from field: bool is_readonly = 202;
   */
  isReadonly = false;

  /**
   * @generated from oneof types.v1.Dashboard.source
   */
  source: {
    /**
     * @generated from field: string file = 203;
     */
    value: string;
    case: "file";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: bytes perses_json = 300;
   */
  persesJson = new Uint8Array(0);

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 400;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 401;
   */
  updatedAt?: Timestamp;

  constructor(data?: PartialMessage<Dashboard>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "types.v1.Dashboard";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 100, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 200, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 201, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 202, name: "is_readonly", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 203, name: "file", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "source" },
    { no: 300, name: "perses_json", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 400, name: "created_at", kind: "message", T: Timestamp },
    { no: 401, name: "updated_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Dashboard {
    return new Dashboard().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Dashboard {
    return new Dashboard().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Dashboard {
    return new Dashboard().fromJsonString(jsonString, options);
  }

  static equals(a: Dashboard | PlainMessage<Dashboard> | undefined, b: Dashboard | PlainMessage<Dashboard> | undefined): boolean {
    return proto3.util.equals(Dashboard, a, b);
  }
}

