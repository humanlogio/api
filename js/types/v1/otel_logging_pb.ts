// @generated by protoc-gen-es v1.10.1 with parameter "target=ts,import_extension=none"
// @generated from file types/v1/otel_logging.proto (package types.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { ULID } from "./ulid_pb";
import { SpanID, TraceID } from "./otel_tracing_pb";
import { Resource } from "./otel_resource_pb";
import { Scope } from "./otel_scope_pb";
import { KV } from "./types_pb";

/**
 * @generated from message types.v1.Log
 */
export class Log extends Message<Log> {
  /**
   * @generated from field: types.v1.ULID ulid = 100;
   */
  ulid?: ULID;

  /**
   * @generated from field: google.protobuf.Timestamp observed_timestamp = 101;
   */
  observedTimestamp?: Timestamp;

  /**
   * @generated from field: bytes raw = 102;
   */
  raw = new Uint8Array(0);

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 2;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: optional types.v1.TraceID trace_id = 3;
   */
  traceId?: TraceID;

  /**
   * @generated from field: optional types.v1.SpanID span_id = 4;
   */
  spanId?: SpanID;

  /**
   * @generated from field: uint32 trace_flags = 5;
   */
  traceFlags = 0;

  /**
   * @generated from field: string severity_text = 6;
   */
  severityText = "";

  /**
   * @generated from field: uint32 severity_number = 7;
   */
  severityNumber = 0;

  /**
   * @generated from field: string service_name = 8;
   */
  serviceName = "";

  /**
   * @generated from field: string body = 9;
   */
  body = "";

  /**
   * @generated from field: types.v1.Resource resource = 10;
   */
  resource?: Resource;

  /**
   * @generated from field: types.v1.Scope scope = 11;
   */
  scope?: Scope;

  /**
   * @generated from field: repeated types.v1.KV attributes = 22;
   */
  attributes: KV[] = [];

  constructor(data?: PartialMessage<Log>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "types.v1.Log";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 100, name: "ulid", kind: "message", T: ULID },
    { no: 101, name: "observed_timestamp", kind: "message", T: Timestamp },
    { no: 102, name: "raw", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "timestamp", kind: "message", T: Timestamp },
    { no: 3, name: "trace_id", kind: "message", T: TraceID, opt: true },
    { no: 4, name: "span_id", kind: "message", T: SpanID, opt: true },
    { no: 5, name: "trace_flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "severity_text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "severity_number", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 8, name: "service_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "body", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "resource", kind: "message", T: Resource },
    { no: 11, name: "scope", kind: "message", T: Scope },
    { no: 22, name: "attributes", kind: "message", T: KV, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Log {
    return new Log().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Log {
    return new Log().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Log {
    return new Log().fromJsonString(jsonString, options);
  }

  static equals(a: Log | PlainMessage<Log> | undefined, b: Log | PlainMessage<Log> | undefined): boolean {
    return proto3.util.equals(Log, a, b);
  }
}

