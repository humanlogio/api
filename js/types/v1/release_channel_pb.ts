// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file types/v1/release_channel.proto (package types.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message types.v1.ReleaseChannel
 */
export class ReleaseChannel extends Message<ReleaseChannel> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: int32 priority = 2;
   */
  priority = 0;

  constructor(data?: PartialMessage<ReleaseChannel>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "types.v1.ReleaseChannel";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "priority", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReleaseChannel {
    return new ReleaseChannel().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReleaseChannel {
    return new ReleaseChannel().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReleaseChannel {
    return new ReleaseChannel().fromJsonString(jsonString, options);
  }

  static equals(a: ReleaseChannel | PlainMessage<ReleaseChannel> | undefined, b: ReleaseChannel | PlainMessage<ReleaseChannel> | undefined): boolean {
    return proto3.util.equals(ReleaseChannel, a, b);
  }
}

