// @generated by protoc-gen-es v1.10.0 with parameter "target=ts,import_extension=none"
// @generated from file types/v1/query_history_entry.proto (package types.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";
import { Query } from "./query_pb";

/**
 * @generated from message types.v1.QueryHistoryEntry
 */
export class QueryHistoryEntry extends Message<QueryHistoryEntry> {
  /**
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: string raw_query = 2;
   */
  rawQuery = "";

  /**
   * @generated from field: types.v1.Query query = 3;
   */
  query?: Query;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  constructor(data?: PartialMessage<QueryHistoryEntry>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "types.v1.QueryHistoryEntry";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "raw_query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "query", kind: "message", T: Query },
    { no: 4, name: "created_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryHistoryEntry {
    return new QueryHistoryEntry().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryHistoryEntry {
    return new QueryHistoryEntry().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryHistoryEntry {
    return new QueryHistoryEntry().fromJsonString(jsonString, options);
  }

  static equals(a: QueryHistoryEntry | PlainMessage<QueryHistoryEntry> | undefined, b: QueryHistoryEntry | PlainMessage<QueryHistoryEntry> | undefined): boolean {
    return proto3.util.equals(QueryHistoryEntry, a, b);
  }
}

