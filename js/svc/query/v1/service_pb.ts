// @generated by protoc-gen-es v2.9.0 with parameter "target=ts,import_extension=none"
// @generated from file svc/query/v1/service.proto (package svc.query.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Cursor } from "../../../types/v1/cursor_pb";
import { file_types_v1_cursor } from "../../../types/v1/cursor_pb";
import type { Data } from "../../../types/v1/data_pb";
import { file_types_v1_data } from "../../../types/v1/data_pb";
import type { Query } from "../../../types/v1/query_pb";
import { file_types_v1_query } from "../../../types/v1/query_pb";
import type { QueryMetrics } from "../../../types/v1/query_metrics_pb";
import { file_types_v1_query_metrics } from "../../../types/v1/query_metrics_pb";
import { file_types_v1_session } from "../../../types/v1/session_pb";
import type { Symbol } from "../../../types/v1/symbol_pb";
import { file_types_v1_symbol } from "../../../types/v1/symbol_pb";
import type { DataStreamType } from "../../../types/v1/types_pb";
import { file_types_v1_types } from "../../../types/v1/types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file svc/query/v1/service.proto.
 */
export const file_svc_query_v1_service: GenFile = /*@__PURE__*/
  fileDesc("ChpzdmMvcXVlcnkvdjEvc2VydmljZS5wcm90bxIMc3ZjLnF1ZXJ5LnYxIrIBChZTdW1tYXJpemVFdmVudHNSZXF1ZXN0EhYKDmVudmlyb25tZW50X2lkGAEgASgDEi0KBGZyb20YAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSACIAQESKwoCdG8YAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAGIAQESFAoMYnVja2V0X2NvdW50GAQgASgNQgcKBV9mcm9tQgUKA190byLQAQoXU3VtbWFyaXplRXZlbnRzUmVzcG9uc2USLwoMYnVja2V0X3dpZHRoGAEgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEj0KB2J1Y2tldHMYAiADKAsyLC5zdmMucXVlcnkudjEuU3VtbWFyaXplRXZlbnRzUmVzcG9uc2UuQnVja2V0GkUKBkJ1Y2tldBImCgJ0cxgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEwoLZXZlbnRfY291bnQYAiABKAQiTQoMUGFyc2VSZXF1ZXN0Eg0KBXF1ZXJ5GAEgASgJEhsKDmVudmlyb25tZW50X2lkGAIgASgDSACIAQFCEQoPX2Vudmlyb25tZW50X2lkIm8KDVBhcnNlUmVzcG9uc2USHgoFcXVlcnkYASABKAsyDy50eXBlcy52MS5RdWVyeRIwCglkYXRhX3R5cGUYAiABKAsyGC50eXBlcy52MS5EYXRhU3RyZWFtVHlwZUgAiAEBQgwKCl9kYXRhX3R5cGUiSgoNRm9ybWF0UmVxdWVzdBINCgNyYXcYASABKAlIABIhCgZwYXJzZWQYAiABKAsyDy50eXBlcy52MS5RdWVyeUgAQgcKBXF1ZXJ5IiMKDkZvcm1hdFJlc3BvbnNlEhEKCWZvcm1hdHRlZBgBIAEoCSLAAQoMUXVlcnlSZXF1ZXN0EhYKDmVudmlyb25tZW50X2lkGGUgASgDEiAKBmN1cnNvchhmIAEoCzIQLnR5cGVzLnYxLkN1cnNvchINCgVsaW1pdBhnIAEoBRIeCgVxdWVyeRgCIAEoCzIPLnR5cGVzLnYxLlF1ZXJ5EigKGmluY2x1ZGVfZGV0YWlsZWRfcHJvZmlsaW5nGLACIAEoCEgAiAEBQh0KG19pbmNsdWRlX2RldGFpbGVkX3Byb2ZpbGluZyJ4Cg1RdWVyeVJlc3BvbnNlEh4KBG5leHQYZCABKAsyEC50eXBlcy52MS5DdXJzb3ISHQoEZGF0YRjIASABKAsyDi50eXBlcy52MS5EYXRhEigKB21ldHJpY3MYrAIgASgLMhYudHlwZXMudjEuUXVlcnlNZXRyaWNzIpYBCg1TdHJlYW1SZXF1ZXN0EhYKDmVudmlyb25tZW50X2lkGGUgASgDEh4KBXF1ZXJ5GAIgASgLMg8udHlwZXMudjEuUXVlcnkSFwoObWF4X2JhdGNoX3NpemUYrAIgASgDEjQKEG1heF9iYXRjaGluZ19mb3IYrQIgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uIi4KDlN0cmVhbVJlc3BvbnNlEhwKBGRhdGEYZCABKAsyDi50eXBlcy52MS5EYXRhIl0KEkxpc3RTeW1ib2xzUmVxdWVzdBIWCg5lbnZpcm9ubWVudF9pZBhlIAEoAxIgCgZjdXJzb3IYZiABKAsyEC50eXBlcy52MS5DdXJzb3ISDQoFbGltaXQYZyABKAUinwEKE0xpc3RTeW1ib2xzUmVzcG9uc2USHgoEbmV4dBhkIAEoCzIQLnR5cGVzLnYxLkN1cnNvchI6CgVpdGVtcxjIASADKAsyKi5zdmMucXVlcnkudjEuTGlzdFN5bWJvbHNSZXNwb25zZS5MaXN0SXRlbRosCghMaXN0SXRlbRIgCgZzeW1ib2wYAiABKAsyEC50eXBlcy52MS5TeW1ib2wy0gMKDFF1ZXJ5U2VydmljZRJeCg9TdW1tYXJpemVFdmVudHMSJC5zdmMucXVlcnkudjEuU3VtbWFyaXplRXZlbnRzUmVxdWVzdBolLnN2Yy5xdWVyeS52MS5TdW1tYXJpemVFdmVudHNSZXNwb25zZRJACgVQYXJzZRIaLnN2Yy5xdWVyeS52MS5QYXJzZVJlcXVlc3QaGy5zdmMucXVlcnkudjEuUGFyc2VSZXNwb25zZRJDCgZGb3JtYXQSGy5zdmMucXVlcnkudjEuRm9ybWF0UmVxdWVzdBocLnN2Yy5xdWVyeS52MS5Gb3JtYXRSZXNwb25zZRJACgVRdWVyeRIaLnN2Yy5xdWVyeS52MS5RdWVyeVJlcXVlc3QaGy5zdmMucXVlcnkudjEuUXVlcnlSZXNwb25zZRJFCgZTdHJlYW0SGy5zdmMucXVlcnkudjEuU3RyZWFtUmVxdWVzdBocLnN2Yy5xdWVyeS52MS5TdHJlYW1SZXNwb25zZTABElIKC0xpc3RTeW1ib2xzEiAuc3ZjLnF1ZXJ5LnYxLkxpc3RTeW1ib2xzUmVxdWVzdBohLnN2Yy5xdWVyeS52MS5MaXN0U3ltYm9sc1Jlc3BvbnNlQqUBChBjb20uc3ZjLnF1ZXJ5LnYxQgxTZXJ2aWNlUHJvdG9QAVoxZ2l0aHViLmNvbS9odW1hbmxvZ2lvL2FwaS9nby9zdmMvcXVlcnkvdjE7cXVlcnl2MaICA1NRWKoCDFN2Yy5RdWVyeS5WMcoCDFN2Y1xRdWVyeVxWMeICGFN2Y1xRdWVyeVxWMVxHUEJNZXRhZGF0YeoCDlN2Yzo6UXVlcnk6OlYxYgZwcm90bzM", [file_google_protobuf_duration, file_google_protobuf_timestamp, file_types_v1_cursor, file_types_v1_data, file_types_v1_query, file_types_v1_query_metrics, file_types_v1_session, file_types_v1_symbol, file_types_v1_types]);

/**
 * @generated from message svc.query.v1.SummarizeEventsRequest
 */
export type SummarizeEventsRequest = Message<"svc.query.v1.SummarizeEventsRequest"> & {
  /**
   * @generated from field: int64 environment_id = 1;
   */
  environmentId: bigint;

  /**
   * @generated from field: optional google.protobuf.Timestamp from = 2;
   */
  from?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp to = 3;
   */
  to?: Timestamp;

  /**
   * @generated from field: uint32 bucket_count = 4;
   */
  bucketCount: number;
};

/**
 * Describes the message svc.query.v1.SummarizeEventsRequest.
 * Use `create(SummarizeEventsRequestSchema)` to create a new message.
 */
export const SummarizeEventsRequestSchema: GenMessage<SummarizeEventsRequest> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 0);

/**
 * @generated from message svc.query.v1.SummarizeEventsResponse
 */
export type SummarizeEventsResponse = Message<"svc.query.v1.SummarizeEventsResponse"> & {
  /**
   * @generated from field: google.protobuf.Duration bucket_width = 1;
   */
  bucketWidth?: Duration;

  /**
   * @generated from field: repeated svc.query.v1.SummarizeEventsResponse.Bucket buckets = 2;
   */
  buckets: SummarizeEventsResponse_Bucket[];
};

/**
 * Describes the message svc.query.v1.SummarizeEventsResponse.
 * Use `create(SummarizeEventsResponseSchema)` to create a new message.
 */
export const SummarizeEventsResponseSchema: GenMessage<SummarizeEventsResponse> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 1);

/**
 * @generated from message svc.query.v1.SummarizeEventsResponse.Bucket
 */
export type SummarizeEventsResponse_Bucket = Message<"svc.query.v1.SummarizeEventsResponse.Bucket"> & {
  /**
   * @generated from field: google.protobuf.Timestamp ts = 1;
   */
  ts?: Timestamp;

  /**
   * @generated from field: uint64 event_count = 2;
   */
  eventCount: bigint;
};

/**
 * Describes the message svc.query.v1.SummarizeEventsResponse.Bucket.
 * Use `create(SummarizeEventsResponse_BucketSchema)` to create a new message.
 */
export const SummarizeEventsResponse_BucketSchema: GenMessage<SummarizeEventsResponse_Bucket> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 1, 0);

/**
 * @generated from message svc.query.v1.ParseRequest
 */
export type ParseRequest = Message<"svc.query.v1.ParseRequest"> & {
  /**
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * if provided, the query's data type will be evaluated for the environment
   * this requires looking up the environment, so the user must be logged in
   * and have access to the environment to request this information
   *
   * @generated from field: optional int64 environment_id = 2;
   */
  environmentId?: bigint;
};

/**
 * Describes the message svc.query.v1.ParseRequest.
 * Use `create(ParseRequestSchema)` to create a new message.
 */
export const ParseRequestSchema: GenMessage<ParseRequest> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 2);

/**
 * @generated from message svc.query.v1.ParseResponse
 */
export type ParseResponse = Message<"svc.query.v1.ParseResponse"> & {
  /**
   * @generated from field: types.v1.Query query = 1;
   */
  query?: Query;

  /**
   * will be populated if user is logged in and `environment_id` is specified
   *
   * @generated from field: optional types.v1.DataStreamType data_type = 2;
   */
  dataType?: DataStreamType;
};

/**
 * Describes the message svc.query.v1.ParseResponse.
 * Use `create(ParseResponseSchema)` to create a new message.
 */
export const ParseResponseSchema: GenMessage<ParseResponse> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 3);

/**
 * @generated from message svc.query.v1.FormatRequest
 */
export type FormatRequest = Message<"svc.query.v1.FormatRequest"> & {
  /**
   * @generated from oneof svc.query.v1.FormatRequest.query
   */
  query: {
    /**
     * @generated from field: string raw = 1;
     */
    value: string;
    case: "raw";
  } | {
    /**
     * @generated from field: types.v1.Query parsed = 2;
     */
    value: Query;
    case: "parsed";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message svc.query.v1.FormatRequest.
 * Use `create(FormatRequestSchema)` to create a new message.
 */
export const FormatRequestSchema: GenMessage<FormatRequest> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 4);

/**
 * @generated from message svc.query.v1.FormatResponse
 */
export type FormatResponse = Message<"svc.query.v1.FormatResponse"> & {
  /**
   * @generated from field: string formatted = 1;
   */
  formatted: string;
};

/**
 * Describes the message svc.query.v1.FormatResponse.
 * Use `create(FormatResponseSchema)` to create a new message.
 */
export const FormatResponseSchema: GenMessage<FormatResponse> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 5);

/**
 * @generated from message svc.query.v1.QueryRequest
 */
export type QueryRequest = Message<"svc.query.v1.QueryRequest"> & {
  /**
   * @generated from field: int64 environment_id = 101;
   */
  environmentId: bigint;

  /**
   * @generated from field: types.v1.Cursor cursor = 102;
   */
  cursor?: Cursor;

  /**
   * @generated from field: int32 limit = 103;
   */
  limit: number;

  /**
   * @generated from field: types.v1.Query query = 2;
   */
  query?: Query;

  /**
   * @generated from field: optional bool include_detailed_profiling = 304;
   */
  includeDetailedProfiling?: boolean;
};

/**
 * Describes the message svc.query.v1.QueryRequest.
 * Use `create(QueryRequestSchema)` to create a new message.
 */
export const QueryRequestSchema: GenMessage<QueryRequest> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 6);

/**
 * @generated from message svc.query.v1.QueryResponse
 */
export type QueryResponse = Message<"svc.query.v1.QueryResponse"> & {
  /**
   * @generated from field: types.v1.Cursor next = 100;
   */
  next?: Cursor;

  /**
   * @generated from field: types.v1.Data data = 200;
   */
  data?: Data;

  /**
   * @generated from field: types.v1.QueryMetrics metrics = 300;
   */
  metrics?: QueryMetrics;
};

/**
 * Describes the message svc.query.v1.QueryResponse.
 * Use `create(QueryResponseSchema)` to create a new message.
 */
export const QueryResponseSchema: GenMessage<QueryResponse> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 7);

/**
 * @generated from message svc.query.v1.StreamRequest
 */
export type StreamRequest = Message<"svc.query.v1.StreamRequest"> & {
  /**
   * @generated from field: int64 environment_id = 101;
   */
  environmentId: bigint;

  /**
   * @generated from field: types.v1.Query query = 2;
   */
  query?: Query;

  /**
   * max_batch_size is how many objects to batch per individual response
   * - min: 1
   * - max: 1000
   *
   * @generated from field: int64 max_batch_size = 300;
   */
  maxBatchSize: bigint;

  /**
   * max_batching_for is how long to wait before sending whatever response
   * have been batched so far, regardless of the `max_batch_size`. 0 means
   * wait indefinitely
   * - min: 16ms
   *
   * @generated from field: google.protobuf.Duration max_batching_for = 301;
   */
  maxBatchingFor?: Duration;
};

/**
 * Describes the message svc.query.v1.StreamRequest.
 * Use `create(StreamRequestSchema)` to create a new message.
 */
export const StreamRequestSchema: GenMessage<StreamRequest> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 8);

/**
 * @generated from message svc.query.v1.StreamResponse
 */
export type StreamResponse = Message<"svc.query.v1.StreamResponse"> & {
  /**
   * @generated from field: types.v1.Data data = 100;
   */
  data?: Data;
};

/**
 * Describes the message svc.query.v1.StreamResponse.
 * Use `create(StreamResponseSchema)` to create a new message.
 */
export const StreamResponseSchema: GenMessage<StreamResponse> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 9);

/**
 * @generated from message svc.query.v1.ListSymbolsRequest
 */
export type ListSymbolsRequest = Message<"svc.query.v1.ListSymbolsRequest"> & {
  /**
   * @generated from field: int64 environment_id = 101;
   */
  environmentId: bigint;

  /**
   * @generated from field: types.v1.Cursor cursor = 102;
   */
  cursor?: Cursor;

  /**
   * @generated from field: int32 limit = 103;
   */
  limit: number;
};

/**
 * Describes the message svc.query.v1.ListSymbolsRequest.
 * Use `create(ListSymbolsRequestSchema)` to create a new message.
 */
export const ListSymbolsRequestSchema: GenMessage<ListSymbolsRequest> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 10);

/**
 * @generated from message svc.query.v1.ListSymbolsResponse
 */
export type ListSymbolsResponse = Message<"svc.query.v1.ListSymbolsResponse"> & {
  /**
   * @generated from field: types.v1.Cursor next = 100;
   */
  next?: Cursor;

  /**
   * @generated from field: repeated svc.query.v1.ListSymbolsResponse.ListItem items = 200;
   */
  items: ListSymbolsResponse_ListItem[];
};

/**
 * Describes the message svc.query.v1.ListSymbolsResponse.
 * Use `create(ListSymbolsResponseSchema)` to create a new message.
 */
export const ListSymbolsResponseSchema: GenMessage<ListSymbolsResponse> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 11);

/**
 * @generated from message svc.query.v1.ListSymbolsResponse.ListItem
 */
export type ListSymbolsResponse_ListItem = Message<"svc.query.v1.ListSymbolsResponse.ListItem"> & {
  /**
   * @generated from field: types.v1.Symbol symbol = 2;
   */
  symbol?: Symbol;
};

/**
 * Describes the message svc.query.v1.ListSymbolsResponse.ListItem.
 * Use `create(ListSymbolsResponse_ListItemSchema)` to create a new message.
 */
export const ListSymbolsResponse_ListItemSchema: GenMessage<ListSymbolsResponse_ListItem> = /*@__PURE__*/
  messageDesc(file_svc_query_v1_service, 11, 0);

/**
 * @generated from service svc.query.v1.QueryService
 */
export const QueryService: GenService<{
  /**
   * @generated from rpc svc.query.v1.QueryService.SummarizeEvents
   */
  summarizeEvents: {
    methodKind: "unary";
    input: typeof SummarizeEventsRequestSchema;
    output: typeof SummarizeEventsResponseSchema;
  },
  /**
   * @generated from rpc svc.query.v1.QueryService.Parse
   */
  parse: {
    methodKind: "unary";
    input: typeof ParseRequestSchema;
    output: typeof ParseResponseSchema;
  },
  /**
   * @generated from rpc svc.query.v1.QueryService.Format
   */
  format: {
    methodKind: "unary";
    input: typeof FormatRequestSchema;
    output: typeof FormatResponseSchema;
  },
  /**
   * @generated from rpc svc.query.v1.QueryService.Query
   */
  query: {
    methodKind: "unary";
    input: typeof QueryRequestSchema;
    output: typeof QueryResponseSchema;
  },
  /**
   * @generated from rpc svc.query.v1.QueryService.Stream
   */
  stream: {
    methodKind: "server_streaming";
    input: typeof StreamRequestSchema;
    output: typeof StreamResponseSchema;
  },
  /**
   * @generated from rpc svc.query.v1.QueryService.ListSymbols
   */
  listSymbols: {
    methodKind: "unary";
    input: typeof ListSymbolsRequestSchema;
    output: typeof ListSymbolsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_svc_query_v1_service, 0);

