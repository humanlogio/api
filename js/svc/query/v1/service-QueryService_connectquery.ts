// @generated by protoc-gen-connect-query v1.4.1 with parameter "target=ts,import_extension=none"
// @generated from file svc/query/v1/service.proto (package svc.query.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { FormatRequest, FormatResponse, ListSymbolsRequest, ListSymbolsResponse, ParseRequest, ParseResponse, QueryRequest, QueryResponse, SummarizeEventsRequest, SummarizeEventsResponse } from "./service_pb";

/**
 * @generated from rpc svc.query.v1.QueryService.SummarizeEvents
 */
export const summarizeEvents = {
  localName: "summarizeEvents",
  name: "SummarizeEvents",
  kind: MethodKind.Unary,
  I: SummarizeEventsRequest,
  O: SummarizeEventsResponse,
  service: {
    typeName: "svc.query.v1.QueryService"
  }
} as const;

/**
 * @generated from rpc svc.query.v1.QueryService.Parse
 */
export const parse = {
  localName: "parse",
  name: "Parse",
  kind: MethodKind.Unary,
  I: ParseRequest,
  O: ParseResponse,
  service: {
    typeName: "svc.query.v1.QueryService"
  }
} as const;

/**
 * @generated from rpc svc.query.v1.QueryService.Format
 */
export const format = {
  localName: "format",
  name: "Format",
  kind: MethodKind.Unary,
  I: FormatRequest,
  O: FormatResponse,
  service: {
    typeName: "svc.query.v1.QueryService"
  }
} as const;

/**
 * @generated from rpc svc.query.v1.QueryService.Query
 */
export const query = {
  localName: "query",
  name: "Query",
  kind: MethodKind.Unary,
  I: QueryRequest,
  O: QueryResponse,
  service: {
    typeName: "svc.query.v1.QueryService"
  }
} as const;

/**
 * @generated from rpc svc.query.v1.QueryService.ListSymbols
 */
export const listSymbols = {
  localName: "listSymbols",
  name: "ListSymbols",
  kind: MethodKind.Unary,
  I: ListSymbolsRequest,
  O: ListSymbolsResponse,
  service: {
    typeName: "svc.query.v1.QueryService"
  }
} as const;
