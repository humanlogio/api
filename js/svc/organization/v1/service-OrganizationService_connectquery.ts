// @generated by protoc-gen-connect-query v1.4.1 with parameter "target=ts,import_extension=none"
// @generated from file svc/organization/v1/service.proto (package svc.organization.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { CreateAddonSubscriptionRequest, CreateAddonSubscriptionResponse, CreateEnvironmentRequest, CreateEnvironmentResponse, CreateStripeCustomerSessionRequest, CreateStripeCustomerSessionResponse, GetEnvironmentRequest, GetEnvironmentResponse, GetStripeBillingPortalRequest, GetStripeBillingPortalResponse, GetStripePublishableKeyRequest, GetStripePublishableKeyResponse, InviteUserRequest, InviteUserResponse, ListAddonSubscriptionRequest, ListAddonSubscriptionResponse, ListEnvironmentRequest, ListEnvironmentResponse, ListPaymentMethodRequest, ListPaymentMethodResponse, ListUserRequest, ListUserResponse, RemoveAddonSubscriptionRequest, RemoveAddonSubscriptionResponse, RevokeUserRequest, RevokeUserResponse } from "./service_pb";

/**
 * @generated from rpc svc.organization.v1.OrganizationService.CreateEnvironment
 */
export const createEnvironment = {
  localName: "createEnvironment",
  name: "CreateEnvironment",
  kind: MethodKind.Unary,
  I: CreateEnvironmentRequest,
  O: CreateEnvironmentResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.GetEnvironment
 */
export const getEnvironment = {
  localName: "getEnvironment",
  name: "GetEnvironment",
  kind: MethodKind.Unary,
  I: GetEnvironmentRequest,
  O: GetEnvironmentResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.ListEnvironment
 */
export const listEnvironment = {
  localName: "listEnvironment",
  name: "ListEnvironment",
  kind: MethodKind.Unary,
  I: ListEnvironmentRequest,
  O: ListEnvironmentResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.ListUser
 */
export const listUser = {
  localName: "listUser",
  name: "ListUser",
  kind: MethodKind.Unary,
  I: ListUserRequest,
  O: ListUserResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.InviteUser
 */
export const inviteUser = {
  localName: "inviteUser",
  name: "InviteUser",
  kind: MethodKind.Unary,
  I: InviteUserRequest,
  O: InviteUserResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.RevokeUser
 */
export const revokeUser = {
  localName: "revokeUser",
  name: "RevokeUser",
  kind: MethodKind.Unary,
  I: RevokeUserRequest,
  O: RevokeUserResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.CreateAddonSubscription
 */
export const createAddonSubscription = {
  localName: "createAddonSubscription",
  name: "CreateAddonSubscription",
  kind: MethodKind.Unary,
  I: CreateAddonSubscriptionRequest,
  O: CreateAddonSubscriptionResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.ListAddonSubscription
 */
export const listAddonSubscription = {
  localName: "listAddonSubscription",
  name: "ListAddonSubscription",
  kind: MethodKind.Unary,
  I: ListAddonSubscriptionRequest,
  O: ListAddonSubscriptionResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.RemoveAddonSubscription
 */
export const removeAddonSubscription = {
  localName: "removeAddonSubscription",
  name: "RemoveAddonSubscription",
  kind: MethodKind.Unary,
  I: RemoveAddonSubscriptionRequest,
  O: RemoveAddonSubscriptionResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * payment
 *
 * @generated from rpc svc.organization.v1.OrganizationService.GetStripePublishableKey
 */
export const getStripePublishableKey = {
  localName: "getStripePublishableKey",
  name: "GetStripePublishableKey",
  kind: MethodKind.Unary,
  I: GetStripePublishableKeyRequest,
  O: GetStripePublishableKeyResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.GetStripeBillingPortal
 */
export const getStripeBillingPortal = {
  localName: "getStripeBillingPortal",
  name: "GetStripeBillingPortal",
  kind: MethodKind.Unary,
  I: GetStripeBillingPortalRequest,
  O: GetStripeBillingPortalResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.CreateStripeCustomerSession
 */
export const createStripeCustomerSession = {
  localName: "createStripeCustomerSession",
  name: "CreateStripeCustomerSession",
  kind: MethodKind.Unary,
  I: CreateStripeCustomerSessionRequest,
  O: CreateStripeCustomerSessionResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;

/**
 * @generated from rpc svc.organization.v1.OrganizationService.ListPaymentMethod
 */
export const listPaymentMethod = {
  localName: "listPaymentMethod",
  name: "ListPaymentMethod",
  kind: MethodKind.Unary,
  I: ListPaymentMethodRequest,
  O: ListPaymentMethodResponse,
  service: {
    typeName: "svc.organization.v1.OrganizationService"
  }
} as const;
