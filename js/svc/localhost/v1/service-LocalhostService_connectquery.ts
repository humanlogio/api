// @generated by protoc-gen-connect-query v1.4.1 with parameter "target=ts,import_extension=none"
// @generated from file svc/localhost/v1/service.proto (package svc.localhost.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import { DoLoginRequest, DoLoginResponse, DoLogoutRequest, DoLogoutResponse, DoRestartRequest, DoRestartResponse, DoUpdateRequest, DoUpdateResponse, GetConfigRequest, GetConfigResponse, PingRequest, PingResponse, SetConfigRequest, SetConfigResponse } from "./service_pb";

/**
 * @generated from rpc svc.localhost.v1.LocalhostService.Ping
 */
export const ping = {
  localName: "ping",
  name: "Ping",
  kind: MethodKind.Unary,
  I: PingRequest,
  O: PingResponse,
  service: {
    typeName: "svc.localhost.v1.LocalhostService"
  }
} as const;

/**
 * @generated from rpc svc.localhost.v1.LocalhostService.DoLogin
 */
export const doLogin = {
  localName: "doLogin",
  name: "DoLogin",
  kind: MethodKind.Unary,
  I: DoLoginRequest,
  O: DoLoginResponse,
  service: {
    typeName: "svc.localhost.v1.LocalhostService"
  }
} as const;

/**
 * @generated from rpc svc.localhost.v1.LocalhostService.DoLogout
 */
export const doLogout = {
  localName: "doLogout",
  name: "DoLogout",
  kind: MethodKind.Unary,
  I: DoLogoutRequest,
  O: DoLogoutResponse,
  service: {
    typeName: "svc.localhost.v1.LocalhostService"
  }
} as const;

/**
 * @generated from rpc svc.localhost.v1.LocalhostService.DoUpdate
 */
export const doUpdate = {
  localName: "doUpdate",
  name: "DoUpdate",
  kind: MethodKind.Unary,
  I: DoUpdateRequest,
  O: DoUpdateResponse,
  service: {
    typeName: "svc.localhost.v1.LocalhostService"
  }
} as const;

/**
 * @generated from rpc svc.localhost.v1.LocalhostService.DoRestart
 */
export const doRestart = {
  localName: "doRestart",
  name: "DoRestart",
  kind: MethodKind.Unary,
  I: DoRestartRequest,
  O: DoRestartResponse,
  service: {
    typeName: "svc.localhost.v1.LocalhostService"
  }
} as const;

/**
 * @generated from rpc svc.localhost.v1.LocalhostService.GetConfig
 */
export const getConfig = {
  localName: "getConfig",
  name: "GetConfig",
  kind: MethodKind.Unary,
  I: GetConfigRequest,
  O: GetConfigResponse,
  service: {
    typeName: "svc.localhost.v1.LocalhostService"
  }
} as const;

/**
 * @generated from rpc svc.localhost.v1.LocalhostService.SetConfig
 */
export const setConfig = {
  localName: "setConfig",
  name: "SetConfig",
  kind: MethodKind.Unary,
  I: SetConfigRequest,
  O: SetConfigResponse,
  service: {
    typeName: "svc.localhost.v1.LocalhostService"
  }
} as const;
