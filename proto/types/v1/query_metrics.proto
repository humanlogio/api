syntax = "proto3";

package types.v1;

import "google/protobuf/duration.proto";
import "types/v1/types.proto";

option go_package = "types/v1;typesv1";

message QueryMetrics {
  string query_id = 1;
  string query_text = 2;

  // Time from query start to query returning. Measures query submission overhead
  // (network round-trip, connection setup).
  google.protobuf.Duration query_sent_latency = 300;
  // Time from query start to first row ready. Also known as "Time to First Row"
  // (TTFR) or "Time to First Byte" (TTFB). Measures query execution latency on
  // server.
  google.protobuf.Duration first_result_latency = 301;
  // Wall-clock time from first row to last row. Measures result fetching
  // duration (not cumulative time spent). Calculated as
  // `lastFetchTime - firstFetchTime`, so include serialization and
  // row-processing overhead.
  google.protobuf.Duration final_result_latency = 302;
  // Full end-to-end time from query start to close. Total duration
  // during which the server processed the request.
  google.protobuf.Duration total_latency = 3;

  int64 rows_returned = 4;
  int64 rows_scanned = 5;
  optional int64 bytes_returned = 6;
  optional int64 bytes_scanned = 7;

  message Detailed {
    bytes execution_plan = 1;
    google.protobuf.Duration cpu_time = 2;
    int64 memory_peak_bytes = 3;
  }
  Detailed detailed = 8;
}
