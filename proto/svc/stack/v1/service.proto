syntax = "proto3";

package svc.stack.v1;

import "types/v1/alert.proto";
import "types/v1/cursor.proto";
import "types/v1/dashboard.proto";
import "types/v1/stack.proto";

option go_package = "svc/stack/v1;stackv1";

service StackService {
  rpc CreateStack(CreateStackRequest) returns (CreateStackResponse);
  rpc GetStack(GetStackRequest) returns (GetStackResponse);
  rpc UpdateStack(UpdateStackRequest) returns (UpdateStackResponse);
  rpc DeleteStack(DeleteStackRequest) returns (DeleteStackResponse);
  rpc ListStack(ListStackRequest) returns (ListStackResponse);
}

message CreateStackRequest {
  int64 environment_id = 101;
  string name = 1;
  types.v1.StackPointer pointer = 2;
}

message CreateStackResponse {
  types.v1.Stack stack = 1;
}

message GetStackRequest {
  int64 environment_id = 101;
  string name = 1;
}

message GetStackResponse {
  types.v1.Stack stack = 1;
  repeated types.v1.Dashboard dashboards = 2;
  repeated types.v1.AlertGroup alert_groups = 3;
}

message UpdateStackRequest {
  message Mutation {
    oneof do {
      string set_name = 1;
      types.v1.StackPointer set_pointer = 2;
    }
  }
  int64 environment_id = 101;
  string name = 1;
  repeated Mutation mutations = 2;
}

message UpdateStackResponse {
  types.v1.Stack stack = 1;
}

message DeleteStackRequest {
  int64 environment_id = 101;
  string name = 1;
}

message DeleteStackResponse {}

message ListStackRequest {
  int64 environment_id = 101;
  types.v1.Cursor cursor = 1;
  int32 limit = 2;
}

message ListStackResponse {
  types.v1.Cursor next = 1;
  message ListItem {
    types.v1.Stack stack = 1;
  }
  repeated ListItem items = 2;
}
