// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: types/v1/stack.proto

package typesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StackPointer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Scheme:
	//
	//	*StackPointer_Remote
	//	*StackPointer_Localhost
	//	*StackPointer_Db
	Scheme        isStackPointer_Scheme `protobuf_oneof:"scheme"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StackPointer) Reset() {
	*x = StackPointer{}
	mi := &file_types_v1_stack_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StackPointer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackPointer) ProtoMessage() {}

func (x *StackPointer) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_stack_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackPointer.ProtoReflect.Descriptor instead.
func (*StackPointer) Descriptor() ([]byte, []int) {
	return file_types_v1_stack_proto_rawDescGZIP(), []int{0}
}

func (x *StackPointer) GetScheme() isStackPointer_Scheme {
	if x != nil {
		return x.Scheme
	}
	return nil
}

func (x *StackPointer) GetRemote() *StackPointer_RemoteGit {
	if x != nil {
		if x, ok := x.Scheme.(*StackPointer_Remote); ok {
			return x.Remote
		}
	}
	return nil
}

func (x *StackPointer) GetLocalhost() *StackPointer_LocalGit {
	if x != nil {
		if x, ok := x.Scheme.(*StackPointer_Localhost); ok {
			return x.Localhost
		}
	}
	return nil
}

func (x *StackPointer) GetDb() *StackPointer_Virtual {
	if x != nil {
		if x, ok := x.Scheme.(*StackPointer_Db); ok {
			return x.Db
		}
	}
	return nil
}

type isStackPointer_Scheme interface {
	isStackPointer_Scheme()
}

type StackPointer_Remote struct {
	Remote *StackPointer_RemoteGit `protobuf:"bytes,1,opt,name=remote,proto3,oneof"`
}

type StackPointer_Localhost struct {
	Localhost *StackPointer_LocalGit `protobuf:"bytes,2,opt,name=localhost,proto3,oneof"`
}

type StackPointer_Db struct {
	Db *StackPointer_Virtual `protobuf:"bytes,3,opt,name=db,proto3,oneof"`
}

func (*StackPointer_Remote) isStackPointer_Scheme() {}

func (*StackPointer_Localhost) isStackPointer_Scheme() {}

func (*StackPointer_Db) isStackPointer_Scheme() {}

type Stack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pointer       *StackPointer          `protobuf:"bytes,2,opt,name=pointer,proto3" json:"pointer,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,300,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,301,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stack) Reset() {
	*x = Stack{}
	mi := &file_types_v1_stack_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stack) ProtoMessage() {}

func (x *Stack) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_stack_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stack.ProtoReflect.Descriptor instead.
func (*Stack) Descriptor() ([]byte, []int) {
	return file_types_v1_stack_proto_rawDescGZIP(), []int{1}
}

func (x *Stack) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stack) GetPointer() *StackPointer {
	if x != nil {
		return x.Pointer
	}
	return nil
}

func (x *Stack) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Stack) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type StackPointer_RemoteGit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RemoteUrl     string                 `protobuf:"bytes,1,opt,name=remote_url,json=remoteUrl,proto3" json:"remote_url,omitempty"`
	Ref           string                 `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	DashboardDir  string                 `protobuf:"bytes,3,opt,name=dashboard_dir,json=dashboardDir,proto3" json:"dashboard_dir,omitempty"`
	AlertDir      string                 `protobuf:"bytes,4,opt,name=alert_dir,json=alertDir,proto3" json:"alert_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StackPointer_RemoteGit) Reset() {
	*x = StackPointer_RemoteGit{}
	mi := &file_types_v1_stack_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StackPointer_RemoteGit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackPointer_RemoteGit) ProtoMessage() {}

func (x *StackPointer_RemoteGit) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_stack_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackPointer_RemoteGit.ProtoReflect.Descriptor instead.
func (*StackPointer_RemoteGit) Descriptor() ([]byte, []int) {
	return file_types_v1_stack_proto_rawDescGZIP(), []int{0, 0}
}

func (x *StackPointer_RemoteGit) GetRemoteUrl() string {
	if x != nil {
		return x.RemoteUrl
	}
	return ""
}

func (x *StackPointer_RemoteGit) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *StackPointer_RemoteGit) GetDashboardDir() string {
	if x != nil {
		return x.DashboardDir
	}
	return ""
}

func (x *StackPointer_RemoteGit) GetAlertDir() string {
	if x != nil {
		return x.AlertDir
	}
	return ""
}

type StackPointer_LocalGit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	DashboardDir  string                 `protobuf:"bytes,2,opt,name=dashboard_dir,json=dashboardDir,proto3" json:"dashboard_dir,omitempty"`
	AlertDir      string                 `protobuf:"bytes,3,opt,name=alert_dir,json=alertDir,proto3" json:"alert_dir,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StackPointer_LocalGit) Reset() {
	*x = StackPointer_LocalGit{}
	mi := &file_types_v1_stack_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StackPointer_LocalGit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackPointer_LocalGit) ProtoMessage() {}

func (x *StackPointer_LocalGit) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_stack_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackPointer_LocalGit.ProtoReflect.Descriptor instead.
func (*StackPointer_LocalGit) Descriptor() ([]byte, []int) {
	return file_types_v1_stack_proto_rawDescGZIP(), []int{0, 1}
}

func (x *StackPointer_LocalGit) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StackPointer_LocalGit) GetDashboardDir() string {
	if x != nil {
		return x.DashboardDir
	}
	return ""
}

func (x *StackPointer_LocalGit) GetAlertDir() string {
	if x != nil {
		return x.AlertDir
	}
	return ""
}

type StackPointer_Virtual struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StackPointer_Virtual) Reset() {
	*x = StackPointer_Virtual{}
	mi := &file_types_v1_stack_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StackPointer_Virtual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StackPointer_Virtual) ProtoMessage() {}

func (x *StackPointer_Virtual) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_stack_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StackPointer_Virtual.ProtoReflect.Descriptor instead.
func (*StackPointer_Virtual) Descriptor() ([]byte, []int) {
	return file_types_v1_stack_proto_rawDescGZIP(), []int{0, 2}
}

func (x *StackPointer_Virtual) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

var File_types_v1_stack_proto protoreflect.FileDescriptor

const file_types_v1_stack_proto_rawDesc = "" +
	"\n" +
	"\x14types/v1/stack.proto\x12\btypes.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc6\x03\n" +
	"\fStackPointer\x12:\n" +
	"\x06remote\x18\x01 \x01(\v2 .types.v1.StackPointer.RemoteGitH\x00R\x06remote\x12?\n" +
	"\tlocalhost\x18\x02 \x01(\v2\x1f.types.v1.StackPointer.LocalGitH\x00R\tlocalhost\x120\n" +
	"\x02db\x18\x03 \x01(\v2\x1e.types.v1.StackPointer.VirtualH\x00R\x02db\x1a~\n" +
	"\tRemoteGit\x12\x1d\n" +
	"\n" +
	"remote_url\x18\x01 \x01(\tR\tremoteUrl\x12\x10\n" +
	"\x03ref\x18\x02 \x01(\tR\x03ref\x12#\n" +
	"\rdashboard_dir\x18\x03 \x01(\tR\fdashboardDir\x12\x1b\n" +
	"\talert_dir\x18\x04 \x01(\tR\balertDir\x1a`\n" +
	"\bLocalGit\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12#\n" +
	"\rdashboard_dir\x18\x02 \x01(\tR\fdashboardDir\x12\x1b\n" +
	"\talert_dir\x18\x03 \x01(\tR\balertDir\x1a\x1b\n" +
	"\aVirtual\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uriB\b\n" +
	"\x06scheme\"\xc5\x01\n" +
	"\x05Stack\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\apointer\x18\x02 \x01(\v2\x16.types.v1.StackPointerR\apointer\x12:\n" +
	"\n" +
	"created_at\x18\xac\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12:\n" +
	"\n" +
	"updated_at\x18\xad\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtB\x8a\x01\n" +
	"\fcom.types.v1B\n" +
	"StackProtoP\x01Z-github.com/humanlogio/api/go/types/v1;typesv1\xa2\x02\x03TXX\xaa\x02\bTypes.V1\xca\x02\bTypes\\V1\xe2\x02\x14Types\\V1\\GPBMetadata\xea\x02\tTypes::V1b\x06proto3"

var (
	file_types_v1_stack_proto_rawDescOnce sync.Once
	file_types_v1_stack_proto_rawDescData []byte
)

func file_types_v1_stack_proto_rawDescGZIP() []byte {
	file_types_v1_stack_proto_rawDescOnce.Do(func() {
		file_types_v1_stack_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_types_v1_stack_proto_rawDesc), len(file_types_v1_stack_proto_rawDesc)))
	})
	return file_types_v1_stack_proto_rawDescData
}

var file_types_v1_stack_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_types_v1_stack_proto_goTypes = []any{
	(*StackPointer)(nil),           // 0: types.v1.StackPointer
	(*Stack)(nil),                  // 1: types.v1.Stack
	(*StackPointer_RemoteGit)(nil), // 2: types.v1.StackPointer.RemoteGit
	(*StackPointer_LocalGit)(nil),  // 3: types.v1.StackPointer.LocalGit
	(*StackPointer_Virtual)(nil),   // 4: types.v1.StackPointer.Virtual
	(*timestamppb.Timestamp)(nil),  // 5: google.protobuf.Timestamp
}
var file_types_v1_stack_proto_depIdxs = []int32{
	2, // 0: types.v1.StackPointer.remote:type_name -> types.v1.StackPointer.RemoteGit
	3, // 1: types.v1.StackPointer.localhost:type_name -> types.v1.StackPointer.LocalGit
	4, // 2: types.v1.StackPointer.db:type_name -> types.v1.StackPointer.Virtual
	0, // 3: types.v1.Stack.pointer:type_name -> types.v1.StackPointer
	5, // 4: types.v1.Stack.created_at:type_name -> google.protobuf.Timestamp
	5, // 5: types.v1.Stack.updated_at:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_types_v1_stack_proto_init() }
func file_types_v1_stack_proto_init() {
	if File_types_v1_stack_proto != nil {
		return
	}
	file_types_v1_stack_proto_msgTypes[0].OneofWrappers = []any{
		(*StackPointer_Remote)(nil),
		(*StackPointer_Localhost)(nil),
		(*StackPointer_Db)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_types_v1_stack_proto_rawDesc), len(file_types_v1_stack_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_v1_stack_proto_goTypes,
		DependencyIndexes: file_types_v1_stack_proto_depIdxs,
		MessageInfos:      file_types_v1_stack_proto_msgTypes,
	}.Build()
	File_types_v1_stack_proto = out.File
	file_types_v1_stack_proto_goTypes = nil
	file_types_v1_stack_proto_depIdxs = nil
}
