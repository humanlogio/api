// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: types/v1/query.proto

package typesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchOperator_Kind int32

const (
	SearchOperator_Default         SearchOperator_Kind = 0
	SearchOperator_CaseInsensitive SearchOperator_Kind = 1
	SearchOperator_CaseSensitive   SearchOperator_Kind = 2
)

// Enum value maps for SearchOperator_Kind.
var (
	SearchOperator_Kind_name = map[int32]string{
		0: "Default",
		1: "CaseInsensitive",
		2: "CaseSensitive",
	}
	SearchOperator_Kind_value = map[string]int32{
		"Default":         0,
		"CaseInsensitive": 1,
		"CaseSensitive":   2,
	}
)

func (x SearchOperator_Kind) Enum() *SearchOperator_Kind {
	p := new(SearchOperator_Kind)
	*p = x
	return p
}

func (x SearchOperator_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchOperator_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_types_v1_query_proto_enumTypes[0].Descriptor()
}

func (SearchOperator_Kind) Type() protoreflect.EnumType {
	return &file_types_v1_query_proto_enumTypes[0]
}

func (x SearchOperator_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchOperator_Kind.Descriptor instead.
func (SearchOperator_Kind) EnumDescriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{14, 0}
}

type SortOperator_Order int32

const (
	SortOperator_Desc SortOperator_Order = 0
	SortOperator_Asc  SortOperator_Order = 1
)

// Enum value maps for SortOperator_Order.
var (
	SortOperator_Order_name = map[int32]string{
		0: "Desc",
		1: "Asc",
	}
	SortOperator_Order_value = map[string]int32{
		"Desc": 0,
		"Asc":  1,
	}
)

func (x SortOperator_Order) Enum() *SortOperator_Order {
	p := new(SortOperator_Order)
	*p = x
	return p
}

func (x SortOperator_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOperator_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_types_v1_query_proto_enumTypes[1].Descriptor()
}

func (SortOperator_Order) Type() protoreflect.EnumType {
	return &file_types_v1_query_proto_enumTypes[1]
}

func (x SortOperator_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOperator_Order.Descriptor instead.
func (SortOperator_Order) EnumDescriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{15, 0}
}

type TopOperator_Order int32

const (
	TopOperator_Desc TopOperator_Order = 0
	TopOperator_Asc  TopOperator_Order = 1
)

// Enum value maps for TopOperator_Order.
var (
	TopOperator_Order_name = map[int32]string{
		0: "Desc",
		1: "Asc",
	}
	TopOperator_Order_value = map[string]int32{
		"Desc": 0,
		"Asc":  1,
	}
)

func (x TopOperator_Order) Enum() *TopOperator_Order {
	p := new(TopOperator_Order)
	*p = x
	return p
}

func (x TopOperator_Order) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopOperator_Order) Descriptor() protoreflect.EnumDescriptor {
	return file_types_v1_query_proto_enumTypes[2].Descriptor()
}

func (TopOperator_Order) Type() protoreflect.EnumType {
	return &file_types_v1_query_proto_enumTypes[2]
}

func (x TopOperator_Order) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopOperator_Order.Descriptor instead.
func (TopOperator_Order) EnumDescriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{17, 0}
}

type UnaryOp_Operator int32

const (
	UnaryOp_INVALID UnaryOp_Operator = 0
	UnaryOp_NOT     UnaryOp_Operator = 1
	UnaryOp_NEG     UnaryOp_Operator = 2
)

// Enum value maps for UnaryOp_Operator.
var (
	UnaryOp_Operator_name = map[int32]string{
		0: "INVALID",
		1: "NOT",
		2: "NEG",
	}
	UnaryOp_Operator_value = map[string]int32{
		"INVALID": 0,
		"NOT":     1,
		"NEG":     2,
	}
)

func (x UnaryOp_Operator) Enum() *UnaryOp_Operator {
	p := new(UnaryOp_Operator)
	*p = x
	return p
}

func (x UnaryOp_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnaryOp_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_types_v1_query_proto_enumTypes[3].Descriptor()
}

func (UnaryOp_Operator) Type() protoreflect.EnumType {
	return &file_types_v1_query_proto_enumTypes[3]
}

func (x UnaryOp_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnaryOp_Operator.Descriptor instead.
func (UnaryOp_Operator) EnumDescriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{22, 0}
}

type BinaryOp_Operator int32

const (
	BinaryOp_INVALID               BinaryOp_Operator = 0
	BinaryOp_LOG_AND               BinaryOp_Operator = 101
	BinaryOp_LOG_OR                BinaryOp_Operator = 102
	BinaryOp_NUM_ADD               BinaryOp_Operator = 201
	BinaryOp_NUM_SUB               BinaryOp_Operator = 202
	BinaryOp_NUM_DIV               BinaryOp_Operator = 203
	BinaryOp_NUM_MUL               BinaryOp_Operator = 204
	BinaryOp_NUM_MOD               BinaryOp_Operator = 205
	BinaryOp_CMP_EQ                BinaryOp_Operator = 301
	BinaryOp_CMP_NOTEQ             BinaryOp_Operator = 302
	BinaryOp_CMP_GT                BinaryOp_Operator = 303
	BinaryOp_CMP_GTE               BinaryOp_Operator = 304
	BinaryOp_CMP_LT                BinaryOp_Operator = 305
	BinaryOp_CMP_LTE               BinaryOp_Operator = 306
	BinaryOp_SET_IN                BinaryOp_Operator = 401
	BinaryOp_SET_NOTIN             BinaryOp_Operator = 402
	BinaryOp_STR_EQ_NOCS           BinaryOp_Operator = 501
	BinaryOp_STR_NOTEQ_NOCS        BinaryOp_Operator = 502
	BinaryOp_STR_CONTAINS          BinaryOp_Operator = 503
	BinaryOp_STR_NOT_CONTAINS      BinaryOp_Operator = 504
	BinaryOp_STR_CONTAINS_CS       BinaryOp_Operator = 505
	BinaryOp_STR_NOT_CONTAINS_CS   BinaryOp_Operator = 506
	BinaryOp_STR_STARTSWITH        BinaryOp_Operator = 507
	BinaryOp_STR_NOT_STARTSWITH    BinaryOp_Operator = 508
	BinaryOp_STR_STARTSWITH_CS     BinaryOp_Operator = 509
	BinaryOp_STR_NOT_STARTSWITH_CS BinaryOp_Operator = 510
	BinaryOp_STR_ENDSWITH          BinaryOp_Operator = 511
	BinaryOp_STR_NOT_ENDSWITH      BinaryOp_Operator = 512
	BinaryOp_STR_ENDSWITH_CS       BinaryOp_Operator = 513
	BinaryOp_STR_NOT_ENDSWITH_CS   BinaryOp_Operator = 514
	BinaryOp_STR_IN_NOCS           BinaryOp_Operator = 515
	BinaryOp_STR_NOT_IN_NOCS       BinaryOp_Operator = 516
	BinaryOp_STR_NOT_MATCHES_REGEX BinaryOp_Operator = 517
	BinaryOp_STR_MATCHES_REGEX     BinaryOp_Operator = 518
	BinaryOp_STR_HAS               BinaryOp_Operator = 519
	BinaryOp_STR_HAS_CS            BinaryOp_Operator = 520
	BinaryOp_STR_HASSUFFIX         BinaryOp_Operator = 521
	BinaryOp_STR_HASSUFFIX_CS      BinaryOp_Operator = 522
	BinaryOp_STR_HASPREFIX         BinaryOp_Operator = 523
	BinaryOp_STR_HASPREFIX_CS      BinaryOp_Operator = 524
)

// Enum value maps for BinaryOp_Operator.
var (
	BinaryOp_Operator_name = map[int32]string{
		0:   "INVALID",
		101: "LOG_AND",
		102: "LOG_OR",
		201: "NUM_ADD",
		202: "NUM_SUB",
		203: "NUM_DIV",
		204: "NUM_MUL",
		205: "NUM_MOD",
		301: "CMP_EQ",
		302: "CMP_NOTEQ",
		303: "CMP_GT",
		304: "CMP_GTE",
		305: "CMP_LT",
		306: "CMP_LTE",
		401: "SET_IN",
		402: "SET_NOTIN",
		501: "STR_EQ_NOCS",
		502: "STR_NOTEQ_NOCS",
		503: "STR_CONTAINS",
		504: "STR_NOT_CONTAINS",
		505: "STR_CONTAINS_CS",
		506: "STR_NOT_CONTAINS_CS",
		507: "STR_STARTSWITH",
		508: "STR_NOT_STARTSWITH",
		509: "STR_STARTSWITH_CS",
		510: "STR_NOT_STARTSWITH_CS",
		511: "STR_ENDSWITH",
		512: "STR_NOT_ENDSWITH",
		513: "STR_ENDSWITH_CS",
		514: "STR_NOT_ENDSWITH_CS",
		515: "STR_IN_NOCS",
		516: "STR_NOT_IN_NOCS",
		517: "STR_NOT_MATCHES_REGEX",
		518: "STR_MATCHES_REGEX",
		519: "STR_HAS",
		520: "STR_HAS_CS",
		521: "STR_HASSUFFIX",
		522: "STR_HASSUFFIX_CS",
		523: "STR_HASPREFIX",
		524: "STR_HASPREFIX_CS",
	}
	BinaryOp_Operator_value = map[string]int32{
		"INVALID":               0,
		"LOG_AND":               101,
		"LOG_OR":                102,
		"NUM_ADD":               201,
		"NUM_SUB":               202,
		"NUM_DIV":               203,
		"NUM_MUL":               204,
		"NUM_MOD":               205,
		"CMP_EQ":                301,
		"CMP_NOTEQ":             302,
		"CMP_GT":                303,
		"CMP_GTE":               304,
		"CMP_LT":                305,
		"CMP_LTE":               306,
		"SET_IN":                401,
		"SET_NOTIN":             402,
		"STR_EQ_NOCS":           501,
		"STR_NOTEQ_NOCS":        502,
		"STR_CONTAINS":          503,
		"STR_NOT_CONTAINS":      504,
		"STR_CONTAINS_CS":       505,
		"STR_NOT_CONTAINS_CS":   506,
		"STR_STARTSWITH":        507,
		"STR_NOT_STARTSWITH":    508,
		"STR_STARTSWITH_CS":     509,
		"STR_NOT_STARTSWITH_CS": 510,
		"STR_ENDSWITH":          511,
		"STR_NOT_ENDSWITH":      512,
		"STR_ENDSWITH_CS":       513,
		"STR_NOT_ENDSWITH_CS":   514,
		"STR_IN_NOCS":           515,
		"STR_NOT_IN_NOCS":       516,
		"STR_NOT_MATCHES_REGEX": 517,
		"STR_MATCHES_REGEX":     518,
		"STR_HAS":               519,
		"STR_HAS_CS":            520,
		"STR_HASSUFFIX":         521,
		"STR_HASSUFFIX_CS":      522,
		"STR_HASPREFIX":         523,
		"STR_HASPREFIX_CS":      524,
	}
)

func (x BinaryOp_Operator) Enum() *BinaryOp_Operator {
	p := new(BinaryOp_Operator)
	*p = x
	return p
}

func (x BinaryOp_Operator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BinaryOp_Operator) Descriptor() protoreflect.EnumDescriptor {
	return file_types_v1_query_proto_enumTypes[4].Descriptor()
}

func (BinaryOp_Operator) Type() protoreflect.EnumType {
	return &file_types_v1_query_proto_enumTypes[4]
}

func (x BinaryOp_Operator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BinaryOp_Operator.Descriptor instead.
func (BinaryOp_Operator) EnumDescriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{23, 0}
}

type Query struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timerange     *Timerange             `protobuf:"bytes,1,opt,name=timerange,proto3" json:"timerange,omitempty"`
	Context       *Context               `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	Query         *Statements            `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_types_v1_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{0}
}

func (x *Query) GetTimerange() *Timerange {
	if x != nil {
		return x.Timerange
	}
	return nil
}

func (x *Query) GetContext() *Context {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Query) GetQuery() *Statements {
	if x != nil {
		return x.Query
	}
	return nil
}

type Timerange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *Expr                  `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            *Expr                  `protobuf:"bytes,2,opt,name=to,proto3,oneof" json:"to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timerange) Reset() {
	*x = Timerange{}
	mi := &file_types_v1_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timerange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timerange) ProtoMessage() {}

func (x *Timerange) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timerange.ProtoReflect.Descriptor instead.
func (*Timerange) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{1}
}

func (x *Timerange) GetFrom() *Expr {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Timerange) GetTo() *Expr {
	if x != nil {
		return x.To
	}
	return nil
}

type Context struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineId     *Expr                  `protobuf:"bytes,101,opt,name=machine_id,json=machineId,proto3,oneof" json:"machine_id,omitempty"`
	SessionId     *Expr                  `protobuf:"bytes,102,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"`
	Dataset       *Expr                  `protobuf:"bytes,103,opt,name=dataset,proto3,oneof" json:"dataset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Context) Reset() {
	*x = Context{}
	mi := &file_types_v1_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Context) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Context) ProtoMessage() {}

func (x *Context) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Context.ProtoReflect.Descriptor instead.
func (*Context) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{2}
}

func (x *Context) GetMachineId() *Expr {
	if x != nil {
		return x.MachineId
	}
	return nil
}

func (x *Context) GetSessionId() *Expr {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *Context) GetDataset() *Expr {
	if x != nil {
		return x.Dataset
	}
	return nil
}

type Statements struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// statements are `|` separated
	Statements    []*Statement     `protobuf:"bytes,1,rep,name=statements,proto3" json:"statements,omitempty"`
	Render        *RenderStatement `protobuf:"bytes,2,opt,name=render,proto3" json:"render,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Statements) Reset() {
	*x = Statements{}
	mi := &file_types_v1_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Statements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statements) ProtoMessage() {}

func (x *Statements) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statements.ProtoReflect.Descriptor instead.
func (*Statements) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{3}
}

func (x *Statements) GetStatements() []*Statement {
	if x != nil {
		return x.Statements
	}
	return nil
}

func (x *Statements) GetRender() *RenderStatement {
	if x != nil {
		return x.Render
	}
	return nil
}

type Statement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Stmt:
	//
	//	*Statement_Filter
	//	*Statement_Summarize
	//	*Statement_Project
	//	*Statement_ProjectAway
	//	*Statement_ProjectKeep
	//	*Statement_Extend
	//	*Statement_Count
	//	*Statement_Distinct
	//	*Statement_Sample
	//	*Statement_Search
	//	*Statement_Sort
	//	*Statement_Take
	//	*Statement_Top
	//	*Statement_GetSchema
	Stmt          isStatement_Stmt `protobuf_oneof:"stmt"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Statement) Reset() {
	*x = Statement{}
	mi := &file_types_v1_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Statement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statement) ProtoMessage() {}

func (x *Statement) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statement.ProtoReflect.Descriptor instead.
func (*Statement) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{4}
}

func (x *Statement) GetStmt() isStatement_Stmt {
	if x != nil {
		return x.Stmt
	}
	return nil
}

func (x *Statement) GetFilter() *FilterOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_Filter); ok {
			return x.Filter
		}
	}
	return nil
}

func (x *Statement) GetSummarize() *SummarizeOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_Summarize); ok {
			return x.Summarize
		}
	}
	return nil
}

func (x *Statement) GetProject() *ProjectOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_Project); ok {
			return x.Project
		}
	}
	return nil
}

func (x *Statement) GetProjectAway() *ProjectAwayOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_ProjectAway); ok {
			return x.ProjectAway
		}
	}
	return nil
}

func (x *Statement) GetProjectKeep() *ProjectKeepOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_ProjectKeep); ok {
			return x.ProjectKeep
		}
	}
	return nil
}

func (x *Statement) GetExtend() *ExtendOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_Extend); ok {
			return x.Extend
		}
	}
	return nil
}

func (x *Statement) GetCount() *CountOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_Count); ok {
			return x.Count
		}
	}
	return nil
}

func (x *Statement) GetDistinct() *DistinctOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_Distinct); ok {
			return x.Distinct
		}
	}
	return nil
}

func (x *Statement) GetSample() *SampleOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_Sample); ok {
			return x.Sample
		}
	}
	return nil
}

func (x *Statement) GetSearch() *SearchOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_Search); ok {
			return x.Search
		}
	}
	return nil
}

func (x *Statement) GetSort() *SortOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_Sort); ok {
			return x.Sort
		}
	}
	return nil
}

func (x *Statement) GetTake() *TakeOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_Take); ok {
			return x.Take
		}
	}
	return nil
}

func (x *Statement) GetTop() *TopOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_Top); ok {
			return x.Top
		}
	}
	return nil
}

func (x *Statement) GetGetSchema() *GetSchemaOperator {
	if x != nil {
		if x, ok := x.Stmt.(*Statement_GetSchema); ok {
			return x.GetSchema
		}
	}
	return nil
}

type isStatement_Stmt interface {
	isStatement_Stmt()
}

type Statement_Filter struct {
	Filter *FilterOperator `protobuf:"bytes,1,opt,name=filter,proto3,oneof"`
}

type Statement_Summarize struct {
	Summarize *SummarizeOperator `protobuf:"bytes,2,opt,name=summarize,proto3,oneof"`
}

type Statement_Project struct {
	Project *ProjectOperator `protobuf:"bytes,300,opt,name=project,proto3,oneof"`
}

type Statement_ProjectAway struct {
	ProjectAway *ProjectAwayOperator `protobuf:"bytes,301,opt,name=project_away,json=projectAway,proto3,oneof"`
}

type Statement_ProjectKeep struct {
	ProjectKeep *ProjectKeepOperator `protobuf:"bytes,302,opt,name=project_keep,json=projectKeep,proto3,oneof"`
}

type Statement_Extend struct {
	Extend *ExtendOperator `protobuf:"bytes,4,opt,name=extend,proto3,oneof"`
}

type Statement_Count struct {
	Count *CountOperator `protobuf:"bytes,5,opt,name=count,proto3,oneof"`
}

type Statement_Distinct struct {
	Distinct *DistinctOperator `protobuf:"bytes,6,opt,name=distinct,proto3,oneof"`
}

type Statement_Sample struct {
	Sample *SampleOperator `protobuf:"bytes,7,opt,name=sample,proto3,oneof"`
}

type Statement_Search struct {
	Search *SearchOperator `protobuf:"bytes,8,opt,name=search,proto3,oneof"`
}

type Statement_Sort struct {
	Sort *SortOperator `protobuf:"bytes,9,opt,name=sort,proto3,oneof"`
}

type Statement_Take struct {
	Take *TakeOperator `protobuf:"bytes,10,opt,name=take,proto3,oneof"`
}

type Statement_Top struct {
	Top *TopOperator `protobuf:"bytes,11,opt,name=top,proto3,oneof"`
}

type Statement_GetSchema struct {
	GetSchema *GetSchemaOperator `protobuf:"bytes,12,opt,name=get_schema,json=getSchema,proto3,oneof"`
}

func (*Statement_Filter) isStatement_Stmt() {}

func (*Statement_Summarize) isStatement_Stmt() {}

func (*Statement_Project) isStatement_Stmt() {}

func (*Statement_ProjectAway) isStatement_Stmt() {}

func (*Statement_ProjectKeep) isStatement_Stmt() {}

func (*Statement_Extend) isStatement_Stmt() {}

func (*Statement_Count) isStatement_Stmt() {}

func (*Statement_Distinct) isStatement_Stmt() {}

func (*Statement_Sample) isStatement_Stmt() {}

func (*Statement_Search) isStatement_Stmt() {}

func (*Statement_Sort) isStatement_Stmt() {}

func (*Statement_Take) isStatement_Stmt() {}

func (*Statement_Top) isStatement_Stmt() {}

func (*Statement_GetSchema) isStatement_Stmt() {}

type FilterOperator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expr          *Expr                  `protobuf:"bytes,1,opt,name=expr,proto3" json:"expr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterOperator) Reset() {
	*x = FilterOperator{}
	mi := &file_types_v1_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterOperator) ProtoMessage() {}

func (x *FilterOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterOperator.ProtoReflect.Descriptor instead.
func (*FilterOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{5}
}

func (x *FilterOperator) GetExpr() *Expr {
	if x != nil {
		return x.Expr
	}
	return nil
}

type SummarizeOperator struct {
	state              protoimpl.MessageState                `protogen:"open.v1"`
	Parameters         *SummarizeOperator_Parameters         `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	ByGroupExpressions *SummarizeOperator_ByGroupExpressions `protobuf:"bytes,2,opt,name=by_group_expressions,json=byGroupExpressions,proto3,oneof" json:"by_group_expressions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SummarizeOperator) Reset() {
	*x = SummarizeOperator{}
	mi := &file_types_v1_query_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeOperator) ProtoMessage() {}

func (x *SummarizeOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeOperator.ProtoReflect.Descriptor instead.
func (*SummarizeOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{6}
}

func (x *SummarizeOperator) GetParameters() *SummarizeOperator_Parameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *SummarizeOperator) GetByGroupExpressions() *SummarizeOperator_ByGroupExpressions {
	if x != nil {
		return x.ByGroupExpressions
	}
	return nil
}

type ProjectOperator struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Projections   []*ProjectOperator_Projection `protobuf:"bytes,1,rep,name=projections,proto3" json:"projections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectOperator) Reset() {
	*x = ProjectOperator{}
	mi := &file_types_v1_query_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectOperator) ProtoMessage() {}

func (x *ProjectOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectOperator.ProtoReflect.Descriptor instead.
func (*ProjectOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{7}
}

func (x *ProjectOperator) GetProjections() []*ProjectOperator_Projection {
	if x != nil {
		return x.Projections
	}
	return nil
}

type ProjectAwayOperator struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Projections   []*ProjectAwayOperator_Projection `protobuf:"bytes,1,rep,name=projections,proto3" json:"projections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectAwayOperator) Reset() {
	*x = ProjectAwayOperator{}
	mi := &file_types_v1_query_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectAwayOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectAwayOperator) ProtoMessage() {}

func (x *ProjectAwayOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectAwayOperator.ProtoReflect.Descriptor instead.
func (*ProjectAwayOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectAwayOperator) GetProjections() []*ProjectAwayOperator_Projection {
	if x != nil {
		return x.Projections
	}
	return nil
}

type ProjectKeepOperator struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Projections   []*ProjectKeepOperator_Projection `protobuf:"bytes,1,rep,name=projections,proto3" json:"projections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectKeepOperator) Reset() {
	*x = ProjectKeepOperator{}
	mi := &file_types_v1_query_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectKeepOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectKeepOperator) ProtoMessage() {}

func (x *ProjectKeepOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectKeepOperator.ProtoReflect.Descriptor instead.
func (*ProjectKeepOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectKeepOperator) GetProjections() []*ProjectKeepOperator_Projection {
	if x != nil {
		return x.Projections
	}
	return nil
}

type ExtendOperator struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Projections   []*ExtendOperator_Projection `protobuf:"bytes,1,rep,name=projections,proto3" json:"projections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtendOperator) Reset() {
	*x = ExtendOperator{}
	mi := &file_types_v1_query_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendOperator) ProtoMessage() {}

func (x *ExtendOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendOperator.ProtoReflect.Descriptor instead.
func (*ExtendOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{10}
}

func (x *ExtendOperator) GetProjections() []*ExtendOperator_Projection {
	if x != nil {
		return x.Projections
	}
	return nil
}

type CountOperator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountOperator) Reset() {
	*x = CountOperator{}
	mi := &file_types_v1_query_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountOperator) ProtoMessage() {}

func (x *CountOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountOperator.ProtoReflect.Descriptor instead.
func (*CountOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{11}
}

type DistinctOperator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []*Identifier          `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DistinctOperator) Reset() {
	*x = DistinctOperator{}
	mi := &file_types_v1_query_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DistinctOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistinctOperator) ProtoMessage() {}

func (x *DistinctOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistinctOperator.ProtoReflect.Descriptor instead.
func (*DistinctOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{12}
}

func (x *DistinctOperator) GetFields() []*Identifier {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SampleOperator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SampleOperator) Reset() {
	*x = SampleOperator{}
	mi := &file_types_v1_query_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SampleOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleOperator) ProtoMessage() {}

func (x *SampleOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleOperator.ProtoReflect.Descriptor instead.
func (*SampleOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{13}
}

func (x *SampleOperator) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SearchOperator struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Predicate:
	//
	//	*SearchOperator_Literal_
	//	*SearchOperator_Field
	//	*SearchOperator_Exact
	//	*SearchOperator_Regex
	Predicate     isSearchOperator_Predicate `protobuf_oneof:"predicate"`
	Kind          *SearchOperator_Kind       `protobuf:"varint,2,opt,name=kind,proto3,enum=types.v1.SearchOperator_Kind,oneof" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchOperator) Reset() {
	*x = SearchOperator{}
	mi := &file_types_v1_query_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOperator) ProtoMessage() {}

func (x *SearchOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOperator.ProtoReflect.Descriptor instead.
func (*SearchOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{14}
}

func (x *SearchOperator) GetPredicate() isSearchOperator_Predicate {
	if x != nil {
		return x.Predicate
	}
	return nil
}

func (x *SearchOperator) GetLiteral() string {
	if x != nil {
		if x, ok := x.Predicate.(*SearchOperator_Literal_); ok {
			return x.Literal
		}
	}
	return ""
}

func (x *SearchOperator) GetField() *SearchOperator_FieldSearch {
	if x != nil {
		if x, ok := x.Predicate.(*SearchOperator_Field); ok {
			return x.Field
		}
	}
	return nil
}

func (x *SearchOperator) GetExact() *SearchOperator_ExactSearch {
	if x != nil {
		if x, ok := x.Predicate.(*SearchOperator_Exact); ok {
			return x.Exact
		}
	}
	return nil
}

func (x *SearchOperator) GetRegex() *SearchOperator_RegexSearch {
	if x != nil {
		if x, ok := x.Predicate.(*SearchOperator_Regex); ok {
			return x.Regex
		}
	}
	return nil
}

func (x *SearchOperator) GetKind() SearchOperator_Kind {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return SearchOperator_Default
}

type isSearchOperator_Predicate interface {
	isSearchOperator_Predicate()
}

type SearchOperator_Literal_ struct {
	Literal string `protobuf:"bytes,101,opt,name=literal,proto3,oneof"`
}

type SearchOperator_Field struct {
	Field *SearchOperator_FieldSearch `protobuf:"bytes,102,opt,name=field,proto3,oneof"`
}

type SearchOperator_Exact struct {
	Exact *SearchOperator_ExactSearch `protobuf:"bytes,103,opt,name=exact,proto3,oneof"`
}

type SearchOperator_Regex struct {
	Regex *SearchOperator_RegexSearch `protobuf:"bytes,104,opt,name=regex,proto3,oneof"`
}

func (*SearchOperator_Literal_) isSearchOperator_Predicate() {}

func (*SearchOperator_Field) isSearchOperator_Predicate() {}

func (*SearchOperator_Exact) isSearchOperator_Predicate() {}

func (*SearchOperator_Regex) isSearchOperator_Predicate() {}

type SortOperator struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ByColumns     []*SortOperator_ByColumn `protobuf:"bytes,1,rep,name=by_columns,json=byColumns,proto3" json:"by_columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortOperator) Reset() {
	*x = SortOperator{}
	mi := &file_types_v1_query_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOperator) ProtoMessage() {}

func (x *SortOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOperator.ProtoReflect.Descriptor instead.
func (*SortOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{15}
}

func (x *SortOperator) GetByColumns() []*SortOperator_ByColumn {
	if x != nil {
		return x.ByColumns
	}
	return nil
}

type TakeOperator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TakeOperator) Reset() {
	*x = TakeOperator{}
	mi := &file_types_v1_query_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TakeOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeOperator) ProtoMessage() {}

func (x *TakeOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeOperator.ProtoReflect.Descriptor instead.
func (*TakeOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{16}
}

func (x *TakeOperator) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TopOperator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	ByColumn      *TopOperator_ByColumn  `protobuf:"bytes,2,opt,name=by_column,json=byColumn,proto3,oneof" json:"by_column,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopOperator) Reset() {
	*x = TopOperator{}
	mi := &file_types_v1_query_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopOperator) ProtoMessage() {}

func (x *TopOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopOperator.ProtoReflect.Descriptor instead.
func (*TopOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{17}
}

func (x *TopOperator) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TopOperator) GetByColumn() *TopOperator_ByColumn {
	if x != nil {
		return x.ByColumn
	}
	return nil
}

type GetSchemaOperator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchemaOperator) Reset() {
	*x = GetSchemaOperator{}
	mi := &file_types_v1_query_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaOperator) ProtoMessage() {}

func (x *GetSchemaOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaOperator.ProtoReflect.Descriptor instead.
func (*GetSchemaOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{18}
}

type RenderStatement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Stmt:
	//
	//	*RenderStatement_Split
	Stmt          isRenderStatement_Stmt `protobuf_oneof:"stmt"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RenderStatement) Reset() {
	*x = RenderStatement{}
	mi := &file_types_v1_query_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenderStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenderStatement) ProtoMessage() {}

func (x *RenderStatement) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenderStatement.ProtoReflect.Descriptor instead.
func (*RenderStatement) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{19}
}

func (x *RenderStatement) GetStmt() isRenderStatement_Stmt {
	if x != nil {
		return x.Stmt
	}
	return nil
}

func (x *RenderStatement) GetSplit() *SplitOperator {
	if x != nil {
		if x, ok := x.Stmt.(*RenderStatement_Split); ok {
			return x.Split
		}
	}
	return nil
}

type isRenderStatement_Stmt interface {
	isRenderStatement_Stmt()
}

type RenderStatement_Split struct {
	Split *SplitOperator `protobuf:"bytes,1,opt,name=split,proto3,oneof"`
}

func (*RenderStatement_Split) isRenderStatement_Stmt() {}

type SplitOperator struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	By            *SplitOperator_ByOperator `protobuf:"bytes,2,opt,name=by,proto3" json:"by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SplitOperator) Reset() {
	*x = SplitOperator{}
	mi := &file_types_v1_query_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SplitOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitOperator) ProtoMessage() {}

func (x *SplitOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitOperator.ProtoReflect.Descriptor instead.
func (*SplitOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{20}
}

func (x *SplitOperator) GetBy() *SplitOperator_ByOperator {
	if x != nil {
		return x.By
	}
	return nil
}

type Expr struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Expr:
	//
	//	*Expr_Literal
	//	*Expr_Unary
	//	*Expr_Binary
	//	*Expr_FuncCall
	//	*Expr_Identifier
	//	*Expr_Indexor
	Expr          isExpr_Expr `protobuf_oneof:"expr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Expr) Reset() {
	*x = Expr{}
	mi := &file_types_v1_query_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Expr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expr) ProtoMessage() {}

func (x *Expr) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expr.ProtoReflect.Descriptor instead.
func (*Expr) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{21}
}

func (x *Expr) GetExpr() isExpr_Expr {
	if x != nil {
		return x.Expr
	}
	return nil
}

func (x *Expr) GetLiteral() *Val {
	if x != nil {
		if x, ok := x.Expr.(*Expr_Literal); ok {
			return x.Literal
		}
	}
	return nil
}

func (x *Expr) GetUnary() *UnaryOp {
	if x != nil {
		if x, ok := x.Expr.(*Expr_Unary); ok {
			return x.Unary
		}
	}
	return nil
}

func (x *Expr) GetBinary() *BinaryOp {
	if x != nil {
		if x, ok := x.Expr.(*Expr_Binary); ok {
			return x.Binary
		}
	}
	return nil
}

func (x *Expr) GetFuncCall() *FuncCall {
	if x != nil {
		if x, ok := x.Expr.(*Expr_FuncCall); ok {
			return x.FuncCall
		}
	}
	return nil
}

func (x *Expr) GetIdentifier() *Identifier {
	if x != nil {
		if x, ok := x.Expr.(*Expr_Identifier); ok {
			return x.Identifier
		}
	}
	return nil
}

func (x *Expr) GetIndexor() *Indexor {
	if x != nil {
		if x, ok := x.Expr.(*Expr_Indexor); ok {
			return x.Indexor
		}
	}
	return nil
}

type isExpr_Expr interface {
	isExpr_Expr()
}

type Expr_Literal struct {
	Literal *Val `protobuf:"bytes,101,opt,name=literal,proto3,oneof"`
}

type Expr_Unary struct {
	Unary *UnaryOp `protobuf:"bytes,102,opt,name=unary,proto3,oneof"`
}

type Expr_Binary struct {
	Binary *BinaryOp `protobuf:"bytes,103,opt,name=binary,proto3,oneof"`
}

type Expr_FuncCall struct {
	FuncCall *FuncCall `protobuf:"bytes,104,opt,name=func_call,json=funcCall,proto3,oneof"`
}

type Expr_Identifier struct {
	Identifier *Identifier `protobuf:"bytes,105,opt,name=identifier,proto3,oneof"`
}

type Expr_Indexor struct {
	Indexor *Indexor `protobuf:"bytes,106,opt,name=indexor,proto3,oneof"` // kvs['hello']
}

func (*Expr_Literal) isExpr_Expr() {}

func (*Expr_Unary) isExpr_Expr() {}

func (*Expr_Binary) isExpr_Expr() {}

func (*Expr_FuncCall) isExpr_Expr() {}

func (*Expr_Identifier) isExpr_Expr() {}

func (*Expr_Indexor) isExpr_Expr() {}

type UnaryOp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Op            UnaryOp_Operator       `protobuf:"varint,1,opt,name=op,proto3,enum=types.v1.UnaryOp_Operator" json:"op,omitempty"`
	Arg           *Expr                  `protobuf:"bytes,2,opt,name=arg,proto3" json:"arg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnaryOp) Reset() {
	*x = UnaryOp{}
	mi := &file_types_v1_query_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnaryOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnaryOp) ProtoMessage() {}

func (x *UnaryOp) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnaryOp.ProtoReflect.Descriptor instead.
func (*UnaryOp) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{22}
}

func (x *UnaryOp) GetOp() UnaryOp_Operator {
	if x != nil {
		return x.Op
	}
	return UnaryOp_INVALID
}

func (x *UnaryOp) GetArg() *Expr {
	if x != nil {
		return x.Arg
	}
	return nil
}

type BinaryOp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lhs           *Expr                  `protobuf:"bytes,1,opt,name=lhs,proto3" json:"lhs,omitempty"`
	Op            BinaryOp_Operator      `protobuf:"varint,2,opt,name=op,proto3,enum=types.v1.BinaryOp_Operator" json:"op,omitempty"`
	Rhs           *Expr                  `protobuf:"bytes,3,opt,name=rhs,proto3" json:"rhs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BinaryOp) Reset() {
	*x = BinaryOp{}
	mi := &file_types_v1_query_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BinaryOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryOp) ProtoMessage() {}

func (x *BinaryOp) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryOp.ProtoReflect.Descriptor instead.
func (*BinaryOp) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{23}
}

func (x *BinaryOp) GetLhs() *Expr {
	if x != nil {
		return x.Lhs
	}
	return nil
}

func (x *BinaryOp) GetOp() BinaryOp_Operator {
	if x != nil {
		return x.Op
	}
	return BinaryOp_INVALID
}

func (x *BinaryOp) GetRhs() *Expr {
	if x != nil {
		return x.Rhs
	}
	return nil
}

type FuncCall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Args          []*Expr                `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FuncCall) Reset() {
	*x = FuncCall{}
	mi := &file_types_v1_query_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FuncCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncCall) ProtoMessage() {}

func (x *FuncCall) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncCall.ProtoReflect.Descriptor instead.
func (*FuncCall) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{24}
}

func (x *FuncCall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FuncCall) GetArgs() []*Expr {
	if x != nil {
		return x.Args
	}
	return nil
}

type Identifier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Identifier) Reset() {
	*x = Identifier{}
	mi := &file_types_v1_query_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Identifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identifier) ProtoMessage() {}

func (x *Identifier) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identifier.ProtoReflect.Descriptor instead.
func (*Identifier) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{25}
}

func (x *Identifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Indexor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             *Expr                  `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Index         *Expr                  `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Indexor) Reset() {
	*x = Indexor{}
	mi := &file_types_v1_query_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Indexor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Indexor) ProtoMessage() {}

func (x *Indexor) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Indexor.ProtoReflect.Descriptor instead.
func (*Indexor) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{26}
}

func (x *Indexor) GetX() *Expr {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *Indexor) GetIndex() *Expr {
	if x != nil {
		return x.Index
	}
	return nil
}

type SummarizeOperator_Parameters struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Parameters    []*SummarizeOperator_Parameter `protobuf:"bytes,1,rep,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizeOperator_Parameters) Reset() {
	*x = SummarizeOperator_Parameters{}
	mi := &file_types_v1_query_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeOperator_Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeOperator_Parameters) ProtoMessage() {}

func (x *SummarizeOperator_Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeOperator_Parameters.ProtoReflect.Descriptor instead.
func (*SummarizeOperator_Parameters) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{6, 0}
}

func (x *SummarizeOperator_Parameters) GetParameters() []*SummarizeOperator_Parameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type SummarizeOperator_Parameter struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Column            *Identifier            `protobuf:"bytes,1,opt,name=column,proto3,oneof" json:"column,omitempty"`
	AggregateFunction *FuncCall              `protobuf:"bytes,2,opt,name=aggregate_function,json=aggregateFunction,proto3" json:"aggregate_function,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SummarizeOperator_Parameter) Reset() {
	*x = SummarizeOperator_Parameter{}
	mi := &file_types_v1_query_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeOperator_Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeOperator_Parameter) ProtoMessage() {}

func (x *SummarizeOperator_Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeOperator_Parameter.ProtoReflect.Descriptor instead.
func (*SummarizeOperator_Parameter) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{6, 1}
}

func (x *SummarizeOperator_Parameter) GetColumn() *Identifier {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *SummarizeOperator_Parameter) GetAggregateFunction() *FuncCall {
	if x != nil {
		return x.AggregateFunction
	}
	return nil
}

type SummarizeOperator_ByGroupExpressions struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Groups        []*SummarizeOperator_ByGroupExpression `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizeOperator_ByGroupExpressions) Reset() {
	*x = SummarizeOperator_ByGroupExpressions{}
	mi := &file_types_v1_query_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeOperator_ByGroupExpressions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeOperator_ByGroupExpressions) ProtoMessage() {}

func (x *SummarizeOperator_ByGroupExpressions) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeOperator_ByGroupExpressions.ProtoReflect.Descriptor instead.
func (*SummarizeOperator_ByGroupExpressions) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{6, 2}
}

func (x *SummarizeOperator_ByGroupExpressions) GetGroups() []*SummarizeOperator_ByGroupExpression {
	if x != nil {
		return x.Groups
	}
	return nil
}

type SummarizeOperator_ByGroupExpression struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Column        *Identifier            `protobuf:"bytes,1,opt,name=column,proto3,oneof" json:"column,omitempty"`
	Scalar        *Expr                  `protobuf:"bytes,2,opt,name=scalar,proto3" json:"scalar,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummarizeOperator_ByGroupExpression) Reset() {
	*x = SummarizeOperator_ByGroupExpression{}
	mi := &file_types_v1_query_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummarizeOperator_ByGroupExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummarizeOperator_ByGroupExpression) ProtoMessage() {}

func (x *SummarizeOperator_ByGroupExpression) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummarizeOperator_ByGroupExpression.ProtoReflect.Descriptor instead.
func (*SummarizeOperator_ByGroupExpression) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{6, 3}
}

func (x *SummarizeOperator_ByGroupExpression) GetColumn() *Identifier {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *SummarizeOperator_ByGroupExpression) GetScalar() *Expr {
	if x != nil {
		return x.Scalar
	}
	return nil
}

type ProjectOperator_Projection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Column        *Identifier            `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Value         *Expr                  `protobuf:"bytes,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectOperator_Projection) Reset() {
	*x = ProjectOperator_Projection{}
	mi := &file_types_v1_query_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectOperator_Projection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectOperator_Projection) ProtoMessage() {}

func (x *ProjectOperator_Projection) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectOperator_Projection.ProtoReflect.Descriptor instead.
func (*ProjectOperator_Projection) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ProjectOperator_Projection) GetColumn() *Identifier {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *ProjectOperator_Projection) GetValue() *Expr {
	if x != nil {
		return x.Value
	}
	return nil
}

type ProjectAwayOperator_Projection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Column        *Identifier            `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectAwayOperator_Projection) Reset() {
	*x = ProjectAwayOperator_Projection{}
	mi := &file_types_v1_query_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectAwayOperator_Projection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectAwayOperator_Projection) ProtoMessage() {}

func (x *ProjectAwayOperator_Projection) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectAwayOperator_Projection.ProtoReflect.Descriptor instead.
func (*ProjectAwayOperator_Projection) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ProjectAwayOperator_Projection) GetColumn() *Identifier {
	if x != nil {
		return x.Column
	}
	return nil
}

type ProjectKeepOperator_Projection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Column        *Identifier            `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectKeepOperator_Projection) Reset() {
	*x = ProjectKeepOperator_Projection{}
	mi := &file_types_v1_query_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectKeepOperator_Projection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectKeepOperator_Projection) ProtoMessage() {}

func (x *ProjectKeepOperator_Projection) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectKeepOperator_Projection.ProtoReflect.Descriptor instead.
func (*ProjectKeepOperator_Projection) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ProjectKeepOperator_Projection) GetColumn() *Identifier {
	if x != nil {
		return x.Column
	}
	return nil
}

type ExtendOperator_Projection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Column        *Identifier            `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Value         *Expr                  `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtendOperator_Projection) Reset() {
	*x = ExtendOperator_Projection{}
	mi := &file_types_v1_query_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtendOperator_Projection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendOperator_Projection) ProtoMessage() {}

func (x *ExtendOperator_Projection) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendOperator_Projection.ProtoReflect.Descriptor instead.
func (*ExtendOperator_Projection) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ExtendOperator_Projection) GetColumn() *Identifier {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *ExtendOperator_Projection) GetValue() *Expr {
	if x != nil {
		return x.Value
	}
	return nil
}

type SearchOperator_Literal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Literal       string                 `protobuf:"bytes,1,opt,name=literal,proto3" json:"literal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchOperator_Literal) Reset() {
	*x = SearchOperator_Literal{}
	mi := &file_types_v1_query_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchOperator_Literal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOperator_Literal) ProtoMessage() {}

func (x *SearchOperator_Literal) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOperator_Literal.ProtoReflect.Descriptor instead.
func (*SearchOperator_Literal) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{14, 0}
}

func (x *SearchOperator_Literal) GetLiteral() string {
	if x != nil {
		return x.Literal
	}
	return ""
}

type SearchOperator_FieldSearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Column        string                 `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Literal       string                 `protobuf:"bytes,2,opt,name=literal,proto3" json:"literal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchOperator_FieldSearch) Reset() {
	*x = SearchOperator_FieldSearch{}
	mi := &file_types_v1_query_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchOperator_FieldSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOperator_FieldSearch) ProtoMessage() {}

func (x *SearchOperator_FieldSearch) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOperator_FieldSearch.ProtoReflect.Descriptor instead.
func (*SearchOperator_FieldSearch) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{14, 1}
}

func (x *SearchOperator_FieldSearch) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *SearchOperator_FieldSearch) GetLiteral() string {
	if x != nil {
		return x.Literal
	}
	return ""
}

type SearchOperator_ExactSearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Column        string                 `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Literal       string                 `protobuf:"bytes,2,opt,name=literal,proto3" json:"literal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchOperator_ExactSearch) Reset() {
	*x = SearchOperator_ExactSearch{}
	mi := &file_types_v1_query_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchOperator_ExactSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOperator_ExactSearch) ProtoMessage() {}

func (x *SearchOperator_ExactSearch) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOperator_ExactSearch.ProtoReflect.Descriptor instead.
func (*SearchOperator_ExactSearch) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{14, 2}
}

func (x *SearchOperator_ExactSearch) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *SearchOperator_ExactSearch) GetLiteral() string {
	if x != nil {
		return x.Literal
	}
	return ""
}

type SearchOperator_RegexSearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Column        string                 `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Regex         string                 `protobuf:"bytes,2,opt,name=regex,proto3" json:"regex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchOperator_RegexSearch) Reset() {
	*x = SearchOperator_RegexSearch{}
	mi := &file_types_v1_query_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchOperator_RegexSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOperator_RegexSearch) ProtoMessage() {}

func (x *SearchOperator_RegexSearch) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOperator_RegexSearch.ProtoReflect.Descriptor instead.
func (*SearchOperator_RegexSearch) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{14, 3}
}

func (x *SearchOperator_RegexSearch) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

func (x *SearchOperator_RegexSearch) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

type SortOperator_ByColumn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Column        *Identifier            `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Order         *SortOperator_Order    `protobuf:"varint,2,opt,name=order,proto3,enum=types.v1.SortOperator_Order,oneof" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortOperator_ByColumn) Reset() {
	*x = SortOperator_ByColumn{}
	mi := &file_types_v1_query_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortOperator_ByColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOperator_ByColumn) ProtoMessage() {}

func (x *SortOperator_ByColumn) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOperator_ByColumn.ProtoReflect.Descriptor instead.
func (*SortOperator_ByColumn) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{15, 0}
}

func (x *SortOperator_ByColumn) GetColumn() *Identifier {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *SortOperator_ByColumn) GetOrder() SortOperator_Order {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return SortOperator_Desc
}

type TopOperator_ByColumn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scalar        *Expr                  `protobuf:"bytes,1,opt,name=scalar,proto3" json:"scalar,omitempty"`
	Order         *TopOperator_Order     `protobuf:"varint,2,opt,name=order,proto3,enum=types.v1.TopOperator_Order,oneof" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopOperator_ByColumn) Reset() {
	*x = TopOperator_ByColumn{}
	mi := &file_types_v1_query_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopOperator_ByColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopOperator_ByColumn) ProtoMessage() {}

func (x *TopOperator_ByColumn) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopOperator_ByColumn.ProtoReflect.Descriptor instead.
func (*TopOperator_ByColumn) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{17, 0}
}

func (x *TopOperator_ByColumn) GetScalar() *Expr {
	if x != nil {
		return x.Scalar
	}
	return nil
}

func (x *TopOperator_ByColumn) GetOrder() TopOperator_Order {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return TopOperator_Desc
}

type SplitOperator_ByOperator struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scalars       []*Expr                `protobuf:"bytes,1,rep,name=scalars,proto3" json:"scalars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SplitOperator_ByOperator) Reset() {
	*x = SplitOperator_ByOperator{}
	mi := &file_types_v1_query_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SplitOperator_ByOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitOperator_ByOperator) ProtoMessage() {}

func (x *SplitOperator_ByOperator) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_query_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitOperator_ByOperator.ProtoReflect.Descriptor instead.
func (*SplitOperator_ByOperator) Descriptor() ([]byte, []int) {
	return file_types_v1_query_proto_rawDescGZIP(), []int{20, 0}
}

func (x *SplitOperator_ByOperator) GetScalars() []*Expr {
	if x != nil {
		return x.Scalars
	}
	return nil
}

var File_types_v1_query_proto protoreflect.FileDescriptor

const file_types_v1_query_proto_rawDesc = "" +
	"\n" +
	"\x14types/v1/query.proto\x12\btypes.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x14types/v1/types.proto\"\x93\x01\n" +
	"\x05Query\x121\n" +
	"\ttimerange\x18\x01 \x01(\v2\x13.types.v1.TimerangeR\ttimerange\x12+\n" +
	"\acontext\x18\x02 \x01(\v2\x11.types.v1.ContextR\acontext\x12*\n" +
	"\x05query\x18\x03 \x01(\v2\x14.types.v1.StatementsR\x05query\"[\n" +
	"\tTimerange\x12\"\n" +
	"\x04from\x18\x01 \x01(\v2\x0e.types.v1.ExprR\x04from\x12#\n" +
	"\x02to\x18\x02 \x01(\v2\x0e.types.v1.ExprH\x00R\x02to\x88\x01\x01B\x05\n" +
	"\x03_to\"\xca\x01\n" +
	"\aContext\x122\n" +
	"\n" +
	"machine_id\x18e \x01(\v2\x0e.types.v1.ExprH\x00R\tmachineId\x88\x01\x01\x122\n" +
	"\n" +
	"session_id\x18f \x01(\v2\x0e.types.v1.ExprH\x01R\tsessionId\x88\x01\x01\x12-\n" +
	"\adataset\x18g \x01(\v2\x0e.types.v1.ExprH\x02R\adataset\x88\x01\x01B\r\n" +
	"\v_machine_idB\r\n" +
	"\v_session_idB\n" +
	"\n" +
	"\b_dataset\"t\n" +
	"\n" +
	"Statements\x123\n" +
	"\n" +
	"statements\x18\x01 \x03(\v2\x13.types.v1.StatementR\n" +
	"statements\x121\n" +
	"\x06render\x18\x02 \x01(\v2\x19.types.v1.RenderStatementR\x06render\"\x92\x06\n" +
	"\tStatement\x122\n" +
	"\x06filter\x18\x01 \x01(\v2\x18.types.v1.FilterOperatorH\x00R\x06filter\x12;\n" +
	"\tsummarize\x18\x02 \x01(\v2\x1b.types.v1.SummarizeOperatorH\x00R\tsummarize\x126\n" +
	"\aproject\x18\xac\x02 \x01(\v2\x19.types.v1.ProjectOperatorH\x00R\aproject\x12C\n" +
	"\fproject_away\x18\xad\x02 \x01(\v2\x1d.types.v1.ProjectAwayOperatorH\x00R\vprojectAway\x12C\n" +
	"\fproject_keep\x18\xae\x02 \x01(\v2\x1d.types.v1.ProjectKeepOperatorH\x00R\vprojectKeep\x122\n" +
	"\x06extend\x18\x04 \x01(\v2\x18.types.v1.ExtendOperatorH\x00R\x06extend\x12/\n" +
	"\x05count\x18\x05 \x01(\v2\x17.types.v1.CountOperatorH\x00R\x05count\x128\n" +
	"\bdistinct\x18\x06 \x01(\v2\x1a.types.v1.DistinctOperatorH\x00R\bdistinct\x122\n" +
	"\x06sample\x18\a \x01(\v2\x18.types.v1.SampleOperatorH\x00R\x06sample\x122\n" +
	"\x06search\x18\b \x01(\v2\x18.types.v1.SearchOperatorH\x00R\x06search\x12,\n" +
	"\x04sort\x18\t \x01(\v2\x16.types.v1.SortOperatorH\x00R\x04sort\x12,\n" +
	"\x04take\x18\n" +
	" \x01(\v2\x16.types.v1.TakeOperatorH\x00R\x04take\x12)\n" +
	"\x03top\x18\v \x01(\v2\x15.types.v1.TopOperatorH\x00R\x03top\x12<\n" +
	"\n" +
	"get_schema\x18\f \x01(\v2\x1b.types.v1.GetSchemaOperatorH\x00R\tgetSchemaB\x06\n" +
	"\x04stmt\"4\n" +
	"\x0eFilterOperator\x12\"\n" +
	"\x04expr\x18\x01 \x01(\v2\x0e.types.v1.ExprR\x04expr\"\x97\x05\n" +
	"\x11SummarizeOperator\x12F\n" +
	"\n" +
	"parameters\x18\x01 \x01(\v2&.types.v1.SummarizeOperator.ParametersR\n" +
	"parameters\x12e\n" +
	"\x14by_group_expressions\x18\x02 \x01(\v2..types.v1.SummarizeOperator.ByGroupExpressionsH\x00R\x12byGroupExpressions\x88\x01\x01\x1aS\n" +
	"\n" +
	"Parameters\x12E\n" +
	"\n" +
	"parameters\x18\x01 \x03(\v2%.types.v1.SummarizeOperator.ParameterR\n" +
	"parameters\x1a\x8c\x01\n" +
	"\tParameter\x121\n" +
	"\x06column\x18\x01 \x01(\v2\x14.types.v1.IdentifierH\x00R\x06column\x88\x01\x01\x12A\n" +
	"\x12aggregate_function\x18\x02 \x01(\v2\x12.types.v1.FuncCallR\x11aggregateFunctionB\t\n" +
	"\a_column\x1a[\n" +
	"\x12ByGroupExpressions\x12E\n" +
	"\x06groups\x18\x02 \x03(\v2-.types.v1.SummarizeOperator.ByGroupExpressionR\x06groups\x1ay\n" +
	"\x11ByGroupExpression\x121\n" +
	"\x06column\x18\x01 \x01(\v2\x14.types.v1.IdentifierH\x00R\x06column\x88\x01\x01\x12&\n" +
	"\x06scalar\x18\x02 \x01(\v2\x0e.types.v1.ExprR\x06scalarB\t\n" +
	"\a_columnB\x17\n" +
	"\x15_by_group_expressions\"\xca\x01\n" +
	"\x0fProjectOperator\x12F\n" +
	"\vprojections\x18\x01 \x03(\v2$.types.v1.ProjectOperator.ProjectionR\vprojections\x1ao\n" +
	"\n" +
	"Projection\x12,\n" +
	"\x06column\x18\x01 \x01(\v2\x14.types.v1.IdentifierR\x06column\x12)\n" +
	"\x05value\x18\x02 \x01(\v2\x0e.types.v1.ExprH\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\"\x9d\x01\n" +
	"\x13ProjectAwayOperator\x12J\n" +
	"\vprojections\x18\x01 \x03(\v2(.types.v1.ProjectAwayOperator.ProjectionR\vprojections\x1a:\n" +
	"\n" +
	"Projection\x12,\n" +
	"\x06column\x18\x01 \x01(\v2\x14.types.v1.IdentifierR\x06column\"\x9d\x01\n" +
	"\x13ProjectKeepOperator\x12J\n" +
	"\vprojections\x18\x01 \x03(\v2(.types.v1.ProjectKeepOperator.ProjectionR\vprojections\x1a:\n" +
	"\n" +
	"Projection\x12,\n" +
	"\x06column\x18\x01 \x01(\v2\x14.types.v1.IdentifierR\x06column\"\xb9\x01\n" +
	"\x0eExtendOperator\x12E\n" +
	"\vprojections\x18\x01 \x03(\v2#.types.v1.ExtendOperator.ProjectionR\vprojections\x1a`\n" +
	"\n" +
	"Projection\x12,\n" +
	"\x06column\x18\x01 \x01(\v2\x14.types.v1.IdentifierR\x06column\x12$\n" +
	"\x05value\x18\x02 \x01(\v2\x0e.types.v1.ExprR\x05value\"\x0f\n" +
	"\rCountOperator\"@\n" +
	"\x10DistinctOperator\x12,\n" +
	"\x06fields\x18\x01 \x03(\v2\x14.types.v1.IdentifierR\x06fields\"&\n" +
	"\x0eSampleOperator\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\"\xd5\x04\n" +
	"\x0eSearchOperator\x12\x1a\n" +
	"\aliteral\x18e \x01(\tH\x00R\aliteral\x12<\n" +
	"\x05field\x18f \x01(\v2$.types.v1.SearchOperator.FieldSearchH\x00R\x05field\x12<\n" +
	"\x05exact\x18g \x01(\v2$.types.v1.SearchOperator.ExactSearchH\x00R\x05exact\x12<\n" +
	"\x05regex\x18h \x01(\v2$.types.v1.SearchOperator.RegexSearchH\x00R\x05regex\x126\n" +
	"\x04kind\x18\x02 \x01(\x0e2\x1d.types.v1.SearchOperator.KindH\x01R\x04kind\x88\x01\x01\x1a#\n" +
	"\aLiteral\x12\x18\n" +
	"\aliteral\x18\x01 \x01(\tR\aliteral\x1a?\n" +
	"\vFieldSearch\x12\x16\n" +
	"\x06column\x18\x01 \x01(\tR\x06column\x12\x18\n" +
	"\aliteral\x18\x02 \x01(\tR\aliteral\x1a?\n" +
	"\vExactSearch\x12\x16\n" +
	"\x06column\x18\x01 \x01(\tR\x06column\x12\x18\n" +
	"\aliteral\x18\x02 \x01(\tR\aliteral\x1a;\n" +
	"\vRegexSearch\x12\x16\n" +
	"\x06column\x18\x01 \x01(\tR\x06column\x12\x14\n" +
	"\x05regex\x18\x02 \x01(\tR\x05regex\";\n" +
	"\x04Kind\x12\v\n" +
	"\aDefault\x10\x00\x12\x13\n" +
	"\x0fCaseInsensitive\x10\x01\x12\x11\n" +
	"\rCaseSensitive\x10\x02B\v\n" +
	"\tpredicateB\a\n" +
	"\x05_kind\"\xe7\x01\n" +
	"\fSortOperator\x12>\n" +
	"\n" +
	"by_columns\x18\x01 \x03(\v2\x1f.types.v1.SortOperator.ByColumnR\tbyColumns\x1a{\n" +
	"\bByColumn\x12,\n" +
	"\x06column\x18\x01 \x01(\v2\x14.types.v1.IdentifierR\x06column\x127\n" +
	"\x05order\x18\x02 \x01(\x0e2\x1c.types.v1.SortOperator.OrderH\x00R\x05order\x88\x01\x01B\b\n" +
	"\x06_order\"\x1a\n" +
	"\x05Order\x12\b\n" +
	"\x04Desc\x10\x00\x12\a\n" +
	"\x03Asc\x10\x01\"$\n" +
	"\fTakeOperator\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\"\x85\x02\n" +
	"\vTopOperator\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\x12@\n" +
	"\tby_column\x18\x02 \x01(\v2\x1e.types.v1.TopOperator.ByColumnH\x00R\bbyColumn\x88\x01\x01\x1at\n" +
	"\bByColumn\x12&\n" +
	"\x06scalar\x18\x01 \x01(\v2\x0e.types.v1.ExprR\x06scalar\x126\n" +
	"\x05order\x18\x02 \x01(\x0e2\x1b.types.v1.TopOperator.OrderH\x00R\x05order\x88\x01\x01B\b\n" +
	"\x06_order\"\x1a\n" +
	"\x05Order\x12\b\n" +
	"\x04Desc\x10\x00\x12\a\n" +
	"\x03Asc\x10\x01B\f\n" +
	"\n" +
	"_by_column\"\x13\n" +
	"\x11GetSchemaOperator\"J\n" +
	"\x0fRenderStatement\x12/\n" +
	"\x05split\x18\x01 \x01(\v2\x17.types.v1.SplitOperatorH\x00R\x05splitB\x06\n" +
	"\x04stmt\"{\n" +
	"\rSplitOperator\x122\n" +
	"\x02by\x18\x02 \x01(\v2\".types.v1.SplitOperator.ByOperatorR\x02by\x1a6\n" +
	"\n" +
	"ByOperator\x12(\n" +
	"\ascalars\x18\x01 \x03(\v2\x0e.types.v1.ExprR\ascalars\"\xac\x02\n" +
	"\x04Expr\x12)\n" +
	"\aliteral\x18e \x01(\v2\r.types.v1.ValH\x00R\aliteral\x12)\n" +
	"\x05unary\x18f \x01(\v2\x11.types.v1.UnaryOpH\x00R\x05unary\x12,\n" +
	"\x06binary\x18g \x01(\v2\x12.types.v1.BinaryOpH\x00R\x06binary\x121\n" +
	"\tfunc_call\x18h \x01(\v2\x12.types.v1.FuncCallH\x00R\bfuncCall\x126\n" +
	"\n" +
	"identifier\x18i \x01(\v2\x14.types.v1.IdentifierH\x00R\n" +
	"identifier\x12-\n" +
	"\aindexor\x18j \x01(\v2\x11.types.v1.IndexorH\x00R\aindexorB\x06\n" +
	"\x04expr\"\x82\x01\n" +
	"\aUnaryOp\x12*\n" +
	"\x02op\x18\x01 \x01(\x0e2\x1a.types.v1.UnaryOp.OperatorR\x02op\x12 \n" +
	"\x03arg\x18\x02 \x01(\v2\x0e.types.v1.ExprR\x03arg\")\n" +
	"\bOperator\x12\v\n" +
	"\aINVALID\x10\x00\x12\a\n" +
	"\x03NOT\x10\x01\x12\a\n" +
	"\x03NEG\x10\x02\"\xf2\x06\n" +
	"\bBinaryOp\x12 \n" +
	"\x03lhs\x18\x01 \x01(\v2\x0e.types.v1.ExprR\x03lhs\x12+\n" +
	"\x02op\x18\x02 \x01(\x0e2\x1b.types.v1.BinaryOp.OperatorR\x02op\x12 \n" +
	"\x03rhs\x18\x03 \x01(\v2\x0e.types.v1.ExprR\x03rhs\"\xf4\x05\n" +
	"\bOperator\x12\v\n" +
	"\aINVALID\x10\x00\x12\v\n" +
	"\aLOG_AND\x10e\x12\n" +
	"\n" +
	"\x06LOG_OR\x10f\x12\f\n" +
	"\aNUM_ADD\x10\xc9\x01\x12\f\n" +
	"\aNUM_SUB\x10\xca\x01\x12\f\n" +
	"\aNUM_DIV\x10\xcb\x01\x12\f\n" +
	"\aNUM_MUL\x10\xcc\x01\x12\f\n" +
	"\aNUM_MOD\x10\xcd\x01\x12\v\n" +
	"\x06CMP_EQ\x10\xad\x02\x12\x0e\n" +
	"\tCMP_NOTEQ\x10\xae\x02\x12\v\n" +
	"\x06CMP_GT\x10\xaf\x02\x12\f\n" +
	"\aCMP_GTE\x10\xb0\x02\x12\v\n" +
	"\x06CMP_LT\x10\xb1\x02\x12\f\n" +
	"\aCMP_LTE\x10\xb2\x02\x12\v\n" +
	"\x06SET_IN\x10\x91\x03\x12\x0e\n" +
	"\tSET_NOTIN\x10\x92\x03\x12\x10\n" +
	"\vSTR_EQ_NOCS\x10\xf5\x03\x12\x13\n" +
	"\x0eSTR_NOTEQ_NOCS\x10\xf6\x03\x12\x11\n" +
	"\fSTR_CONTAINS\x10\xf7\x03\x12\x15\n" +
	"\x10STR_NOT_CONTAINS\x10\xf8\x03\x12\x14\n" +
	"\x0fSTR_CONTAINS_CS\x10\xf9\x03\x12\x18\n" +
	"\x13STR_NOT_CONTAINS_CS\x10\xfa\x03\x12\x13\n" +
	"\x0eSTR_STARTSWITH\x10\xfb\x03\x12\x17\n" +
	"\x12STR_NOT_STARTSWITH\x10\xfc\x03\x12\x16\n" +
	"\x11STR_STARTSWITH_CS\x10\xfd\x03\x12\x1a\n" +
	"\x15STR_NOT_STARTSWITH_CS\x10\xfe\x03\x12\x11\n" +
	"\fSTR_ENDSWITH\x10\xff\x03\x12\x15\n" +
	"\x10STR_NOT_ENDSWITH\x10\x80\x04\x12\x14\n" +
	"\x0fSTR_ENDSWITH_CS\x10\x81\x04\x12\x18\n" +
	"\x13STR_NOT_ENDSWITH_CS\x10\x82\x04\x12\x10\n" +
	"\vSTR_IN_NOCS\x10\x83\x04\x12\x14\n" +
	"\x0fSTR_NOT_IN_NOCS\x10\x84\x04\x12\x1a\n" +
	"\x15STR_NOT_MATCHES_REGEX\x10\x85\x04\x12\x16\n" +
	"\x11STR_MATCHES_REGEX\x10\x86\x04\x12\f\n" +
	"\aSTR_HAS\x10\x87\x04\x12\x0f\n" +
	"\n" +
	"STR_HAS_CS\x10\x88\x04\x12\x12\n" +
	"\rSTR_HASSUFFIX\x10\x89\x04\x12\x15\n" +
	"\x10STR_HASSUFFIX_CS\x10\x8a\x04\x12\x12\n" +
	"\rSTR_HASPREFIX\x10\x8b\x04\x12\x15\n" +
	"\x10STR_HASPREFIX_CS\x10\x8c\x04\"B\n" +
	"\bFuncCall\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\"\n" +
	"\x04args\x18\x02 \x03(\v2\x0e.types.v1.ExprR\x04args\" \n" +
	"\n" +
	"Identifier\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"M\n" +
	"\aIndexor\x12\x1c\n" +
	"\x01x\x18\x01 \x01(\v2\x0e.types.v1.ExprR\x01x\x12$\n" +
	"\x05index\x18\x02 \x01(\v2\x0e.types.v1.ExprR\x05indexB\x8a\x01\n" +
	"\fcom.types.v1B\n" +
	"QueryProtoP\x01Z-github.com/humanlogio/api/go/types/v1;typesv1\xa2\x02\x03TXX\xaa\x02\bTypes.V1\xca\x02\bTypes\\V1\xe2\x02\x14Types\\V1\\GPBMetadata\xea\x02\tTypes::V1b\x06proto3"

var (
	file_types_v1_query_proto_rawDescOnce sync.Once
	file_types_v1_query_proto_rawDescData []byte
)

func file_types_v1_query_proto_rawDescGZIP() []byte {
	file_types_v1_query_proto_rawDescOnce.Do(func() {
		file_types_v1_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_types_v1_query_proto_rawDesc), len(file_types_v1_query_proto_rawDesc)))
	})
	return file_types_v1_query_proto_rawDescData
}

var file_types_v1_query_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_types_v1_query_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_types_v1_query_proto_goTypes = []any{
	(SearchOperator_Kind)(0),                     // 0: types.v1.SearchOperator.Kind
	(SortOperator_Order)(0),                      // 1: types.v1.SortOperator.Order
	(TopOperator_Order)(0),                       // 2: types.v1.TopOperator.Order
	(UnaryOp_Operator)(0),                        // 3: types.v1.UnaryOp.Operator
	(BinaryOp_Operator)(0),                       // 4: types.v1.BinaryOp.Operator
	(*Query)(nil),                                // 5: types.v1.Query
	(*Timerange)(nil),                            // 6: types.v1.Timerange
	(*Context)(nil),                              // 7: types.v1.Context
	(*Statements)(nil),                           // 8: types.v1.Statements
	(*Statement)(nil),                            // 9: types.v1.Statement
	(*FilterOperator)(nil),                       // 10: types.v1.FilterOperator
	(*SummarizeOperator)(nil),                    // 11: types.v1.SummarizeOperator
	(*ProjectOperator)(nil),                      // 12: types.v1.ProjectOperator
	(*ProjectAwayOperator)(nil),                  // 13: types.v1.ProjectAwayOperator
	(*ProjectKeepOperator)(nil),                  // 14: types.v1.ProjectKeepOperator
	(*ExtendOperator)(nil),                       // 15: types.v1.ExtendOperator
	(*CountOperator)(nil),                        // 16: types.v1.CountOperator
	(*DistinctOperator)(nil),                     // 17: types.v1.DistinctOperator
	(*SampleOperator)(nil),                       // 18: types.v1.SampleOperator
	(*SearchOperator)(nil),                       // 19: types.v1.SearchOperator
	(*SortOperator)(nil),                         // 20: types.v1.SortOperator
	(*TakeOperator)(nil),                         // 21: types.v1.TakeOperator
	(*TopOperator)(nil),                          // 22: types.v1.TopOperator
	(*GetSchemaOperator)(nil),                    // 23: types.v1.GetSchemaOperator
	(*RenderStatement)(nil),                      // 24: types.v1.RenderStatement
	(*SplitOperator)(nil),                        // 25: types.v1.SplitOperator
	(*Expr)(nil),                                 // 26: types.v1.Expr
	(*UnaryOp)(nil),                              // 27: types.v1.UnaryOp
	(*BinaryOp)(nil),                             // 28: types.v1.BinaryOp
	(*FuncCall)(nil),                             // 29: types.v1.FuncCall
	(*Identifier)(nil),                           // 30: types.v1.Identifier
	(*Indexor)(nil),                              // 31: types.v1.Indexor
	(*SummarizeOperator_Parameters)(nil),         // 32: types.v1.SummarizeOperator.Parameters
	(*SummarizeOperator_Parameter)(nil),          // 33: types.v1.SummarizeOperator.Parameter
	(*SummarizeOperator_ByGroupExpressions)(nil), // 34: types.v1.SummarizeOperator.ByGroupExpressions
	(*SummarizeOperator_ByGroupExpression)(nil),  // 35: types.v1.SummarizeOperator.ByGroupExpression
	(*ProjectOperator_Projection)(nil),           // 36: types.v1.ProjectOperator.Projection
	(*ProjectAwayOperator_Projection)(nil),       // 37: types.v1.ProjectAwayOperator.Projection
	(*ProjectKeepOperator_Projection)(nil),       // 38: types.v1.ProjectKeepOperator.Projection
	(*ExtendOperator_Projection)(nil),            // 39: types.v1.ExtendOperator.Projection
	(*SearchOperator_Literal)(nil),               // 40: types.v1.SearchOperator.Literal
	(*SearchOperator_FieldSearch)(nil),           // 41: types.v1.SearchOperator.FieldSearch
	(*SearchOperator_ExactSearch)(nil),           // 42: types.v1.SearchOperator.ExactSearch
	(*SearchOperator_RegexSearch)(nil),           // 43: types.v1.SearchOperator.RegexSearch
	(*SortOperator_ByColumn)(nil),                // 44: types.v1.SortOperator.ByColumn
	(*TopOperator_ByColumn)(nil),                 // 45: types.v1.TopOperator.ByColumn
	(*SplitOperator_ByOperator)(nil),             // 46: types.v1.SplitOperator.ByOperator
	(*Val)(nil),                                  // 47: types.v1.Val
}
var file_types_v1_query_proto_depIdxs = []int32{
	6,  // 0: types.v1.Query.timerange:type_name -> types.v1.Timerange
	7,  // 1: types.v1.Query.context:type_name -> types.v1.Context
	8,  // 2: types.v1.Query.query:type_name -> types.v1.Statements
	26, // 3: types.v1.Timerange.from:type_name -> types.v1.Expr
	26, // 4: types.v1.Timerange.to:type_name -> types.v1.Expr
	26, // 5: types.v1.Context.machine_id:type_name -> types.v1.Expr
	26, // 6: types.v1.Context.session_id:type_name -> types.v1.Expr
	26, // 7: types.v1.Context.dataset:type_name -> types.v1.Expr
	9,  // 8: types.v1.Statements.statements:type_name -> types.v1.Statement
	24, // 9: types.v1.Statements.render:type_name -> types.v1.RenderStatement
	10, // 10: types.v1.Statement.filter:type_name -> types.v1.FilterOperator
	11, // 11: types.v1.Statement.summarize:type_name -> types.v1.SummarizeOperator
	12, // 12: types.v1.Statement.project:type_name -> types.v1.ProjectOperator
	13, // 13: types.v1.Statement.project_away:type_name -> types.v1.ProjectAwayOperator
	14, // 14: types.v1.Statement.project_keep:type_name -> types.v1.ProjectKeepOperator
	15, // 15: types.v1.Statement.extend:type_name -> types.v1.ExtendOperator
	16, // 16: types.v1.Statement.count:type_name -> types.v1.CountOperator
	17, // 17: types.v1.Statement.distinct:type_name -> types.v1.DistinctOperator
	18, // 18: types.v1.Statement.sample:type_name -> types.v1.SampleOperator
	19, // 19: types.v1.Statement.search:type_name -> types.v1.SearchOperator
	20, // 20: types.v1.Statement.sort:type_name -> types.v1.SortOperator
	21, // 21: types.v1.Statement.take:type_name -> types.v1.TakeOperator
	22, // 22: types.v1.Statement.top:type_name -> types.v1.TopOperator
	23, // 23: types.v1.Statement.get_schema:type_name -> types.v1.GetSchemaOperator
	26, // 24: types.v1.FilterOperator.expr:type_name -> types.v1.Expr
	32, // 25: types.v1.SummarizeOperator.parameters:type_name -> types.v1.SummarizeOperator.Parameters
	34, // 26: types.v1.SummarizeOperator.by_group_expressions:type_name -> types.v1.SummarizeOperator.ByGroupExpressions
	36, // 27: types.v1.ProjectOperator.projections:type_name -> types.v1.ProjectOperator.Projection
	37, // 28: types.v1.ProjectAwayOperator.projections:type_name -> types.v1.ProjectAwayOperator.Projection
	38, // 29: types.v1.ProjectKeepOperator.projections:type_name -> types.v1.ProjectKeepOperator.Projection
	39, // 30: types.v1.ExtendOperator.projections:type_name -> types.v1.ExtendOperator.Projection
	30, // 31: types.v1.DistinctOperator.fields:type_name -> types.v1.Identifier
	41, // 32: types.v1.SearchOperator.field:type_name -> types.v1.SearchOperator.FieldSearch
	42, // 33: types.v1.SearchOperator.exact:type_name -> types.v1.SearchOperator.ExactSearch
	43, // 34: types.v1.SearchOperator.regex:type_name -> types.v1.SearchOperator.RegexSearch
	0,  // 35: types.v1.SearchOperator.kind:type_name -> types.v1.SearchOperator.Kind
	44, // 36: types.v1.SortOperator.by_columns:type_name -> types.v1.SortOperator.ByColumn
	45, // 37: types.v1.TopOperator.by_column:type_name -> types.v1.TopOperator.ByColumn
	25, // 38: types.v1.RenderStatement.split:type_name -> types.v1.SplitOperator
	46, // 39: types.v1.SplitOperator.by:type_name -> types.v1.SplitOperator.ByOperator
	47, // 40: types.v1.Expr.literal:type_name -> types.v1.Val
	27, // 41: types.v1.Expr.unary:type_name -> types.v1.UnaryOp
	28, // 42: types.v1.Expr.binary:type_name -> types.v1.BinaryOp
	29, // 43: types.v1.Expr.func_call:type_name -> types.v1.FuncCall
	30, // 44: types.v1.Expr.identifier:type_name -> types.v1.Identifier
	31, // 45: types.v1.Expr.indexor:type_name -> types.v1.Indexor
	3,  // 46: types.v1.UnaryOp.op:type_name -> types.v1.UnaryOp.Operator
	26, // 47: types.v1.UnaryOp.arg:type_name -> types.v1.Expr
	26, // 48: types.v1.BinaryOp.lhs:type_name -> types.v1.Expr
	4,  // 49: types.v1.BinaryOp.op:type_name -> types.v1.BinaryOp.Operator
	26, // 50: types.v1.BinaryOp.rhs:type_name -> types.v1.Expr
	26, // 51: types.v1.FuncCall.args:type_name -> types.v1.Expr
	26, // 52: types.v1.Indexor.x:type_name -> types.v1.Expr
	26, // 53: types.v1.Indexor.index:type_name -> types.v1.Expr
	33, // 54: types.v1.SummarizeOperator.Parameters.parameters:type_name -> types.v1.SummarizeOperator.Parameter
	30, // 55: types.v1.SummarizeOperator.Parameter.column:type_name -> types.v1.Identifier
	29, // 56: types.v1.SummarizeOperator.Parameter.aggregate_function:type_name -> types.v1.FuncCall
	35, // 57: types.v1.SummarizeOperator.ByGroupExpressions.groups:type_name -> types.v1.SummarizeOperator.ByGroupExpression
	30, // 58: types.v1.SummarizeOperator.ByGroupExpression.column:type_name -> types.v1.Identifier
	26, // 59: types.v1.SummarizeOperator.ByGroupExpression.scalar:type_name -> types.v1.Expr
	30, // 60: types.v1.ProjectOperator.Projection.column:type_name -> types.v1.Identifier
	26, // 61: types.v1.ProjectOperator.Projection.value:type_name -> types.v1.Expr
	30, // 62: types.v1.ProjectAwayOperator.Projection.column:type_name -> types.v1.Identifier
	30, // 63: types.v1.ProjectKeepOperator.Projection.column:type_name -> types.v1.Identifier
	30, // 64: types.v1.ExtendOperator.Projection.column:type_name -> types.v1.Identifier
	26, // 65: types.v1.ExtendOperator.Projection.value:type_name -> types.v1.Expr
	30, // 66: types.v1.SortOperator.ByColumn.column:type_name -> types.v1.Identifier
	1,  // 67: types.v1.SortOperator.ByColumn.order:type_name -> types.v1.SortOperator.Order
	26, // 68: types.v1.TopOperator.ByColumn.scalar:type_name -> types.v1.Expr
	2,  // 69: types.v1.TopOperator.ByColumn.order:type_name -> types.v1.TopOperator.Order
	26, // 70: types.v1.SplitOperator.ByOperator.scalars:type_name -> types.v1.Expr
	71, // [71:71] is the sub-list for method output_type
	71, // [71:71] is the sub-list for method input_type
	71, // [71:71] is the sub-list for extension type_name
	71, // [71:71] is the sub-list for extension extendee
	0,  // [0:71] is the sub-list for field type_name
}

func init() { file_types_v1_query_proto_init() }
func file_types_v1_query_proto_init() {
	if File_types_v1_query_proto != nil {
		return
	}
	file_types_v1_types_proto_init()
	file_types_v1_query_proto_msgTypes[1].OneofWrappers = []any{}
	file_types_v1_query_proto_msgTypes[2].OneofWrappers = []any{}
	file_types_v1_query_proto_msgTypes[4].OneofWrappers = []any{
		(*Statement_Filter)(nil),
		(*Statement_Summarize)(nil),
		(*Statement_Project)(nil),
		(*Statement_ProjectAway)(nil),
		(*Statement_ProjectKeep)(nil),
		(*Statement_Extend)(nil),
		(*Statement_Count)(nil),
		(*Statement_Distinct)(nil),
		(*Statement_Sample)(nil),
		(*Statement_Search)(nil),
		(*Statement_Sort)(nil),
		(*Statement_Take)(nil),
		(*Statement_Top)(nil),
		(*Statement_GetSchema)(nil),
	}
	file_types_v1_query_proto_msgTypes[6].OneofWrappers = []any{}
	file_types_v1_query_proto_msgTypes[14].OneofWrappers = []any{
		(*SearchOperator_Literal_)(nil),
		(*SearchOperator_Field)(nil),
		(*SearchOperator_Exact)(nil),
		(*SearchOperator_Regex)(nil),
	}
	file_types_v1_query_proto_msgTypes[17].OneofWrappers = []any{}
	file_types_v1_query_proto_msgTypes[19].OneofWrappers = []any{
		(*RenderStatement_Split)(nil),
	}
	file_types_v1_query_proto_msgTypes[21].OneofWrappers = []any{
		(*Expr_Literal)(nil),
		(*Expr_Unary)(nil),
		(*Expr_Binary)(nil),
		(*Expr_FuncCall)(nil),
		(*Expr_Identifier)(nil),
		(*Expr_Indexor)(nil),
	}
	file_types_v1_query_proto_msgTypes[28].OneofWrappers = []any{}
	file_types_v1_query_proto_msgTypes[30].OneofWrappers = []any{}
	file_types_v1_query_proto_msgTypes[31].OneofWrappers = []any{}
	file_types_v1_query_proto_msgTypes[39].OneofWrappers = []any{}
	file_types_v1_query_proto_msgTypes[40].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_types_v1_query_proto_rawDesc), len(file_types_v1_query_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_v1_query_proto_goTypes,
		DependencyIndexes: file_types_v1_query_proto_depIdxs,
		EnumInfos:         file_types_v1_query_proto_enumTypes,
		MessageInfos:      file_types_v1_query_proto_msgTypes,
	}.Build()
	File_types_v1_query_proto = out.File
	file_types_v1_query_proto_goTypes = nil
	file_types_v1_query_proto_depIdxs = nil
}
