// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: types/v1/data.proto

package typesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Data struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Shape:
	//
	//	*Data_Subqueries
	//	*Data_FreeForm
	//	*Data_Logs
	//	*Data_Spans
	Shape         isData_Shape `protobuf_oneof:"shape"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Data) Reset() {
	*x = Data{}
	mi := &file_types_v1_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_types_v1_data_proto_rawDescGZIP(), []int{0}
}

func (x *Data) GetShape() isData_Shape {
	if x != nil {
		return x.Shape
	}
	return nil
}

func (x *Data) GetSubqueries() *Subqueries {
	if x != nil {
		if x, ok := x.Shape.(*Data_Subqueries); ok {
			return x.Subqueries
		}
	}
	return nil
}

func (x *Data) GetFreeForm() *Table {
	if x != nil {
		if x, ok := x.Shape.(*Data_FreeForm); ok {
			return x.FreeForm
		}
	}
	return nil
}

func (x *Data) GetLogs() *Logs {
	if x != nil {
		if x, ok := x.Shape.(*Data_Logs); ok {
			return x.Logs
		}
	}
	return nil
}

func (x *Data) GetSpans() *Spans {
	if x != nil {
		if x, ok := x.Shape.(*Data_Spans); ok {
			return x.Spans
		}
	}
	return nil
}

type isData_Shape interface {
	isData_Shape()
}

type Data_Subqueries struct {
	Subqueries *Subqueries `protobuf:"bytes,100,opt,name=subqueries,proto3,oneof"`
}

type Data_FreeForm struct {
	FreeForm *Table `protobuf:"bytes,101,opt,name=free_form,json=freeForm,proto3,oneof"`
}

type Data_Logs struct {
	Logs *Logs `protobuf:"bytes,102,opt,name=logs,proto3,oneof"`
}

type Data_Spans struct {
	Spans *Spans `protobuf:"bytes,103,opt,name=spans,proto3,oneof"`
}

func (*Data_Subqueries) isData_Shape() {}

func (*Data_FreeForm) isData_Shape() {}

func (*Data_Logs) isData_Shape() {}

func (*Data_Spans) isData_Shape() {}

type Subqueries struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queries       []*Query               `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subqueries) Reset() {
	*x = Subqueries{}
	mi := &file_types_v1_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subqueries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subqueries) ProtoMessage() {}

func (x *Subqueries) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subqueries.ProtoReflect.Descriptor instead.
func (*Subqueries) Descriptor() ([]byte, []int) {
	return file_types_v1_data_proto_rawDescGZIP(), []int{1}
}

func (x *Subqueries) GetQueries() []*Query {
	if x != nil {
		return x.Queries
	}
	return nil
}

type Logs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*Log                 `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logs) Reset() {
	*x = Logs{}
	mi := &file_types_v1_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logs) ProtoMessage() {}

func (x *Logs) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logs.ProtoReflect.Descriptor instead.
func (*Logs) Descriptor() ([]byte, []int) {
	return file_types_v1_data_proto_rawDescGZIP(), []int{2}
}

func (x *Logs) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

type Spans struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Spans         []*Span                `protobuf:"bytes,1,rep,name=spans,proto3" json:"spans,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Spans) Reset() {
	*x = Spans{}
	mi := &file_types_v1_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Spans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spans) ProtoMessage() {}

func (x *Spans) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spans.ProtoReflect.Descriptor instead.
func (*Spans) Descriptor() ([]byte, []int) {
	return file_types_v1_data_proto_rawDescGZIP(), []int{3}
}

func (x *Spans) GetSpans() []*Span {
	if x != nil {
		return x.Spans
	}
	return nil
}

var File_types_v1_data_proto protoreflect.FileDescriptor

const file_types_v1_data_proto_rawDesc = "" +
	"\n" +
	"\x13types/v1/data.proto\x12\btypes.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1btypes/v1/otel_logging.proto\x1a\x1btypes/v1/otel_tracing.proto\x1a\x14types/v1/query.proto\x1a\x14types/v1/types.proto\"\xc6\x01\n" +
	"\x04Data\x126\n" +
	"\n" +
	"subqueries\x18d \x01(\v2\x14.types.v1.SubqueriesH\x00R\n" +
	"subqueries\x12.\n" +
	"\tfree_form\x18e \x01(\v2\x0f.types.v1.TableH\x00R\bfreeForm\x12$\n" +
	"\x04logs\x18f \x01(\v2\x0e.types.v1.LogsH\x00R\x04logs\x12'\n" +
	"\x05spans\x18g \x01(\v2\x0f.types.v1.SpansH\x00R\x05spansB\a\n" +
	"\x05shape\"7\n" +
	"\n" +
	"Subqueries\x12)\n" +
	"\aqueries\x18\x01 \x03(\v2\x0f.types.v1.QueryR\aqueries\")\n" +
	"\x04Logs\x12!\n" +
	"\x04logs\x18\x01 \x03(\v2\r.types.v1.LogR\x04logs\"-\n" +
	"\x05Spans\x12$\n" +
	"\x05spans\x18\x01 \x03(\v2\x0e.types.v1.SpanR\x05spansB\x89\x01\n" +
	"\fcom.types.v1B\tDataProtoP\x01Z-github.com/humanlogio/api/go/types/v1;typesv1\xa2\x02\x03TXX\xaa\x02\bTypes.V1\xca\x02\bTypes\\V1\xe2\x02\x14Types\\V1\\GPBMetadata\xea\x02\tTypes::V1b\x06proto3"

var (
	file_types_v1_data_proto_rawDescOnce sync.Once
	file_types_v1_data_proto_rawDescData []byte
)

func file_types_v1_data_proto_rawDescGZIP() []byte {
	file_types_v1_data_proto_rawDescOnce.Do(func() {
		file_types_v1_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_types_v1_data_proto_rawDesc), len(file_types_v1_data_proto_rawDesc)))
	})
	return file_types_v1_data_proto_rawDescData
}

var file_types_v1_data_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_types_v1_data_proto_goTypes = []any{
	(*Data)(nil),       // 0: types.v1.Data
	(*Subqueries)(nil), // 1: types.v1.Subqueries
	(*Logs)(nil),       // 2: types.v1.Logs
	(*Spans)(nil),      // 3: types.v1.Spans
	(*Table)(nil),      // 4: types.v1.Table
	(*Query)(nil),      // 5: types.v1.Query
	(*Log)(nil),        // 6: types.v1.Log
	(*Span)(nil),       // 7: types.v1.Span
}
var file_types_v1_data_proto_depIdxs = []int32{
	1, // 0: types.v1.Data.subqueries:type_name -> types.v1.Subqueries
	4, // 1: types.v1.Data.free_form:type_name -> types.v1.Table
	2, // 2: types.v1.Data.logs:type_name -> types.v1.Logs
	3, // 3: types.v1.Data.spans:type_name -> types.v1.Spans
	5, // 4: types.v1.Subqueries.queries:type_name -> types.v1.Query
	6, // 5: types.v1.Logs.logs:type_name -> types.v1.Log
	7, // 6: types.v1.Spans.spans:type_name -> types.v1.Span
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_types_v1_data_proto_init() }
func file_types_v1_data_proto_init() {
	if File_types_v1_data_proto != nil {
		return
	}
	file_types_v1_otel_logging_proto_init()
	file_types_v1_otel_tracing_proto_init()
	file_types_v1_query_proto_init()
	file_types_v1_types_proto_init()
	file_types_v1_data_proto_msgTypes[0].OneofWrappers = []any{
		(*Data_Subqueries)(nil),
		(*Data_FreeForm)(nil),
		(*Data_Logs)(nil),
		(*Data_Spans)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_types_v1_data_proto_rawDesc), len(file_types_v1_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_v1_data_proto_goTypes,
		DependencyIndexes: file_types_v1_data_proto_depIdxs,
		MessageInfos:      file_types_v1_data_proto_msgTypes,
	}.Build()
	File_types_v1_data_proto = out.File
	file_types_v1_data_proto_goTypes = nil
	file_types_v1_data_proto_depIdxs = nil
}
