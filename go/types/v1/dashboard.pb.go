// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: types/v1/dashboard.proto

package typesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Dashboard struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,100,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,200,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,201,opt,name=description,proto3" json:"description,omitempty"`
	IsReadonly  bool                   `protobuf:"varint,202,opt,name=is_readonly,json=isReadonly,proto3" json:"is_readonly,omitempty"`
	// Types that are valid to be assigned to Source:
	//
	//	*Dashboard_File
	Source        isDashboard_Source     `protobuf_oneof:"source"`
	PersesJson    []byte                 `protobuf:"bytes,300,opt,name=perses_json,json=persesJson,proto3" json:"perses_json,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,400,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,401,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dashboard) Reset() {
	*x = Dashboard{}
	mi := &file_types_v1_dashboard_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dashboard) ProtoMessage() {}

func (x *Dashboard) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_dashboard_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dashboard.ProtoReflect.Descriptor instead.
func (*Dashboard) Descriptor() ([]byte, []int) {
	return file_types_v1_dashboard_proto_rawDescGZIP(), []int{0}
}

func (x *Dashboard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Dashboard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dashboard) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Dashboard) GetIsReadonly() bool {
	if x != nil {
		return x.IsReadonly
	}
	return false
}

func (x *Dashboard) GetSource() isDashboard_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Dashboard) GetFile() string {
	if x != nil {
		if x, ok := x.Source.(*Dashboard_File); ok {
			return x.File
		}
	}
	return ""
}

func (x *Dashboard) GetPersesJson() []byte {
	if x != nil {
		return x.PersesJson
	}
	return nil
}

func (x *Dashboard) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Dashboard) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type isDashboard_Source interface {
	isDashboard_Source()
}

type Dashboard_File struct {
	File string `protobuf:"bytes,203,opt,name=file,proto3,oneof"`
}

func (*Dashboard_File) isDashboard_Source() {}

var File_types_v1_dashboard_proto protoreflect.FileDescriptor

const file_types_v1_dashboard_proto_rawDesc = "" +
	"\n" +
	"\x18types/v1/dashboard.proto\x12\btypes.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb0\x02\n" +
	"\tDashboard\x12\x0e\n" +
	"\x02id\x18d \x01(\tR\x02id\x12\x13\n" +
	"\x04name\x18\xc8\x01 \x01(\tR\x04name\x12!\n" +
	"\vdescription\x18\xc9\x01 \x01(\tR\vdescription\x12 \n" +
	"\vis_readonly\x18\xca\x01 \x01(\bR\n" +
	"isReadonly\x12\x15\n" +
	"\x04file\x18\xcb\x01 \x01(\tH\x00R\x04file\x12 \n" +
	"\vperses_json\x18\xac\x02 \x01(\fR\n" +
	"persesJson\x12:\n" +
	"\n" +
	"created_at\x18\x90\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12:\n" +
	"\n" +
	"updated_at\x18\x91\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtB\b\n" +
	"\x06sourceB\x8e\x01\n" +
	"\fcom.types.v1B\x0eDashboardProtoP\x01Z-github.com/humanlogio/api/go/types/v1;typesv1\xa2\x02\x03TXX\xaa\x02\bTypes.V1\xca\x02\bTypes\\V1\xe2\x02\x14Types\\V1\\GPBMetadata\xea\x02\tTypes::V1b\x06proto3"

var (
	file_types_v1_dashboard_proto_rawDescOnce sync.Once
	file_types_v1_dashboard_proto_rawDescData []byte
)

func file_types_v1_dashboard_proto_rawDescGZIP() []byte {
	file_types_v1_dashboard_proto_rawDescOnce.Do(func() {
		file_types_v1_dashboard_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_types_v1_dashboard_proto_rawDesc), len(file_types_v1_dashboard_proto_rawDesc)))
	})
	return file_types_v1_dashboard_proto_rawDescData
}

var file_types_v1_dashboard_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_types_v1_dashboard_proto_goTypes = []any{
	(*Dashboard)(nil),             // 0: types.v1.Dashboard
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_types_v1_dashboard_proto_depIdxs = []int32{
	1, // 0: types.v1.Dashboard.created_at:type_name -> google.protobuf.Timestamp
	1, // 1: types.v1.Dashboard.updated_at:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_types_v1_dashboard_proto_init() }
func file_types_v1_dashboard_proto_init() {
	if File_types_v1_dashboard_proto != nil {
		return
	}
	file_types_v1_dashboard_proto_msgTypes[0].OneofWrappers = []any{
		(*Dashboard_File)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_types_v1_dashboard_proto_rawDesc), len(file_types_v1_dashboard_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_v1_dashboard_proto_goTypes,
		DependencyIndexes: file_types_v1_dashboard_proto_depIdxs,
		MessageInfos:      file_types_v1_dashboard_proto_msgTypes,
	}.Build()
	File_types_v1_dashboard_proto = out.File
	file_types_v1_dashboard_proto_goTypes = nil
	file_types_v1_dashboard_proto_depIdxs = nil
}
