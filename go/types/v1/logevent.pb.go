// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: types/v1/logevent.proto

package typesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogEventGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineId     int64                  `protobuf:"varint,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	SessionId     int64                  `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Logs          []*LogEvent            `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEventGroup) Reset() {
	*x = LogEventGroup{}
	mi := &file_types_v1_logevent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEventGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEventGroup) ProtoMessage() {}

func (x *LogEventGroup) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_logevent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEventGroup.ProtoReflect.Descriptor instead.
func (*LogEventGroup) Descriptor() ([]byte, []int) {
	return file_types_v1_logevent_proto_rawDescGZIP(), []int{0}
}

func (x *LogEventGroup) GetMachineId() int64 {
	if x != nil {
		return x.MachineId
	}
	return 0
}

func (x *LogEventGroup) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *LogEventGroup) GetLogs() []*LogEvent {
	if x != nil {
		return x.Logs
	}
	return nil
}

type IngestedLogEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineId     int64                  `protobuf:"varint,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	SessionId     int64                  `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	EventId       int64                  `protobuf:"varint,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	ParsedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=parsed_at,json=parsedAt,proto3" json:"parsed_at,omitempty"`
	Raw           []byte                 `protobuf:"bytes,5,opt,name=raw,proto3" json:"raw,omitempty"`
	Structured    *StructuredLogEvent    `protobuf:"bytes,6,opt,name=structured,proto3" json:"structured,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestedLogEvent) Reset() {
	*x = IngestedLogEvent{}
	mi := &file_types_v1_logevent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestedLogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestedLogEvent) ProtoMessage() {}

func (x *IngestedLogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_logevent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestedLogEvent.ProtoReflect.Descriptor instead.
func (*IngestedLogEvent) Descriptor() ([]byte, []int) {
	return file_types_v1_logevent_proto_rawDescGZIP(), []int{1}
}

func (x *IngestedLogEvent) GetMachineId() int64 {
	if x != nil {
		return x.MachineId
	}
	return 0
}

func (x *IngestedLogEvent) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *IngestedLogEvent) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *IngestedLogEvent) GetParsedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ParsedAt
	}
	return nil
}

func (x *IngestedLogEvent) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *IngestedLogEvent) GetStructured() *StructuredLogEvent {
	if x != nil {
		return x.Structured
	}
	return nil
}

type LogEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParsedAt      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=parsed_at,json=parsedAt,proto3" json:"parsed_at,omitempty"`
	Raw           []byte                 `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
	Structured    *StructuredLogEvent    `protobuf:"bytes,3,opt,name=structured,proto3" json:"structured,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEvent) Reset() {
	*x = LogEvent{}
	mi := &file_types_v1_logevent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEvent) ProtoMessage() {}

func (x *LogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_logevent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEvent.ProtoReflect.Descriptor instead.
func (*LogEvent) Descriptor() ([]byte, []int) {
	return file_types_v1_logevent_proto_rawDescGZIP(), []int{2}
}

func (x *LogEvent) GetParsedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ParsedAt
	}
	return nil
}

func (x *LogEvent) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

func (x *LogEvent) GetStructured() *StructuredLogEvent {
	if x != nil {
		return x.Structured
	}
	return nil
}

type StructuredLogEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Lvl           string                 `protobuf:"bytes,2,opt,name=lvl,proto3" json:"lvl,omitempty"`
	LvlNumber     int32                  `protobuf:"varint,201,opt,name=lvl_number,json=lvlNumber,proto3" json:"lvl_number,omitempty"`
	Msg           string                 `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Kvs           []*KV                  `protobuf:"bytes,4,rep,name=kvs,proto3" json:"kvs,omitempty"`
	TraceId       []byte                 `protobuf:"bytes,500,opt,name=trace_id,json=traceId,proto3,oneof" json:"trace_id,omitempty"`
	SpanId        []byte                 `protobuf:"bytes,501,opt,name=span_id,json=spanId,proto3,oneof" json:"span_id,omitempty"`
	OtlpFlags     *uint32                `protobuf:"varint,502,opt,name=otlp_flags,json=otlpFlags,proto3,oneof" json:"otlp_flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StructuredLogEvent) Reset() {
	*x = StructuredLogEvent{}
	mi := &file_types_v1_logevent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StructuredLogEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructuredLogEvent) ProtoMessage() {}

func (x *StructuredLogEvent) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_logevent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructuredLogEvent.ProtoReflect.Descriptor instead.
func (*StructuredLogEvent) Descriptor() ([]byte, []int) {
	return file_types_v1_logevent_proto_rawDescGZIP(), []int{3}
}

func (x *StructuredLogEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StructuredLogEvent) GetLvl() string {
	if x != nil {
		return x.Lvl
	}
	return ""
}

func (x *StructuredLogEvent) GetLvlNumber() int32 {
	if x != nil {
		return x.LvlNumber
	}
	return 0
}

func (x *StructuredLogEvent) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StructuredLogEvent) GetKvs() []*KV {
	if x != nil {
		return x.Kvs
	}
	return nil
}

func (x *StructuredLogEvent) GetTraceId() []byte {
	if x != nil {
		return x.TraceId
	}
	return nil
}

func (x *StructuredLogEvent) GetSpanId() []byte {
	if x != nil {
		return x.SpanId
	}
	return nil
}

func (x *StructuredLogEvent) GetOtlpFlags() uint32 {
	if x != nil && x.OtlpFlags != nil {
		return *x.OtlpFlags
	}
	return 0
}

var File_types_v1_logevent_proto protoreflect.FileDescriptor

const file_types_v1_logevent_proto_rawDesc = "" +
	"\n" +
	"\x17types/v1/logevent.proto\x12\btypes.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x14types/v1/types.proto\"u\n" +
	"\rLogEventGroup\x12\x1d\n" +
	"\n" +
	"machine_id\x18\x01 \x01(\x03R\tmachineId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\x03R\tsessionId\x12&\n" +
	"\x04logs\x18\x03 \x03(\v2\x12.types.v1.LogEventR\x04logs\"\xf4\x01\n" +
	"\x10IngestedLogEvent\x12\x1d\n" +
	"\n" +
	"machine_id\x18\x01 \x01(\x03R\tmachineId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\x03R\tsessionId\x12\x19\n" +
	"\bevent_id\x18\x03 \x01(\x03R\aeventId\x127\n" +
	"\tparsed_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bparsedAt\x12\x10\n" +
	"\x03raw\x18\x05 \x01(\fR\x03raw\x12<\n" +
	"\n" +
	"structured\x18\x06 \x01(\v2\x1c.types.v1.StructuredLogEventR\n" +
	"structured\"\x93\x01\n" +
	"\bLogEvent\x127\n" +
	"\tparsed_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bparsedAt\x12\x10\n" +
	"\x03raw\x18\x02 \x01(\fR\x03raw\x12<\n" +
	"\n" +
	"structured\x18\x03 \x01(\v2\x1c.types.v1.StructuredLogEventR\n" +
	"structured\"\xbf\x02\n" +
	"\x12StructuredLogEvent\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x10\n" +
	"\x03lvl\x18\x02 \x01(\tR\x03lvl\x12\x1e\n" +
	"\n" +
	"lvl_number\x18\xc9\x01 \x01(\x05R\tlvlNumber\x12\x10\n" +
	"\x03msg\x18\x03 \x01(\tR\x03msg\x12\x1e\n" +
	"\x03kvs\x18\x04 \x03(\v2\f.types.v1.KVR\x03kvs\x12\x1f\n" +
	"\btrace_id\x18\xf4\x03 \x01(\fH\x00R\atraceId\x88\x01\x01\x12\x1d\n" +
	"\aspan_id\x18\xf5\x03 \x01(\fH\x01R\x06spanId\x88\x01\x01\x12#\n" +
	"\n" +
	"otlp_flags\x18\xf6\x03 \x01(\rH\x02R\totlpFlags\x88\x01\x01B\v\n" +
	"\t_trace_idB\n" +
	"\n" +
	"\b_span_idB\r\n" +
	"\v_otlp_flagsB\x8d\x01\n" +
	"\fcom.types.v1B\rLogeventProtoP\x01Z-github.com/humanlogio/api/go/types/v1;typesv1\xa2\x02\x03TXX\xaa\x02\bTypes.V1\xca\x02\bTypes\\V1\xe2\x02\x14Types\\V1\\GPBMetadata\xea\x02\tTypes::V1b\x06proto3"

var (
	file_types_v1_logevent_proto_rawDescOnce sync.Once
	file_types_v1_logevent_proto_rawDescData []byte
)

func file_types_v1_logevent_proto_rawDescGZIP() []byte {
	file_types_v1_logevent_proto_rawDescOnce.Do(func() {
		file_types_v1_logevent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_types_v1_logevent_proto_rawDesc), len(file_types_v1_logevent_proto_rawDesc)))
	})
	return file_types_v1_logevent_proto_rawDescData
}

var file_types_v1_logevent_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_types_v1_logevent_proto_goTypes = []any{
	(*LogEventGroup)(nil),         // 0: types.v1.LogEventGroup
	(*IngestedLogEvent)(nil),      // 1: types.v1.IngestedLogEvent
	(*LogEvent)(nil),              // 2: types.v1.LogEvent
	(*StructuredLogEvent)(nil),    // 3: types.v1.StructuredLogEvent
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*KV)(nil),                    // 5: types.v1.KV
}
var file_types_v1_logevent_proto_depIdxs = []int32{
	2, // 0: types.v1.LogEventGroup.logs:type_name -> types.v1.LogEvent
	4, // 1: types.v1.IngestedLogEvent.parsed_at:type_name -> google.protobuf.Timestamp
	3, // 2: types.v1.IngestedLogEvent.structured:type_name -> types.v1.StructuredLogEvent
	4, // 3: types.v1.LogEvent.parsed_at:type_name -> google.protobuf.Timestamp
	3, // 4: types.v1.LogEvent.structured:type_name -> types.v1.StructuredLogEvent
	4, // 5: types.v1.StructuredLogEvent.timestamp:type_name -> google.protobuf.Timestamp
	5, // 6: types.v1.StructuredLogEvent.kvs:type_name -> types.v1.KV
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_types_v1_logevent_proto_init() }
func file_types_v1_logevent_proto_init() {
	if File_types_v1_logevent_proto != nil {
		return
	}
	file_types_v1_types_proto_init()
	file_types_v1_logevent_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_types_v1_logevent_proto_rawDesc), len(file_types_v1_logevent_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_v1_logevent_proto_goTypes,
		DependencyIndexes: file_types_v1_logevent_proto_depIdxs,
		MessageInfos:      file_types_v1_logevent_proto_msgTypes,
	}.Build()
	File_types_v1_logevent_proto = out.File
	file_types_v1_logevent_proto_goTypes = nil
	file_types_v1_logevent_proto_depIdxs = nil
}
