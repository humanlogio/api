// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: types/v1/otel_tracing.proto

package typesv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Span_SpanKind int32

const (
	Span_UNSPECIFIED Span_SpanKind = 0
	Span_INTERNAL    Span_SpanKind = 1
	Span_SERVER      Span_SpanKind = 2
	Span_CLIENT      Span_SpanKind = 3
	Span_PRODUCER    Span_SpanKind = 4
	Span_CONSUMER    Span_SpanKind = 5
)

// Enum value maps for Span_SpanKind.
var (
	Span_SpanKind_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "INTERNAL",
		2: "SERVER",
		3: "CLIENT",
		4: "PRODUCER",
		5: "CONSUMER",
	}
	Span_SpanKind_value = map[string]int32{
		"UNSPECIFIED": 0,
		"INTERNAL":    1,
		"SERVER":      2,
		"CLIENT":      3,
		"PRODUCER":    4,
		"CONSUMER":    5,
	}
)

func (x Span_SpanKind) Enum() *Span_SpanKind {
	p := new(Span_SpanKind)
	*p = x
	return p
}

func (x Span_SpanKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Span_SpanKind) Descriptor() protoreflect.EnumDescriptor {
	return file_types_v1_otel_tracing_proto_enumTypes[0].Descriptor()
}

func (Span_SpanKind) Type() protoreflect.EnumType {
	return &file_types_v1_otel_tracing_proto_enumTypes[0]
}

func (x Span_SpanKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Span_SpanKind.Descriptor instead.
func (Span_SpanKind) EnumDescriptor() ([]byte, []int) {
	return file_types_v1_otel_tracing_proto_rawDescGZIP(), []int{1, 0}
}

type Span_Status_Code int32

const (
	Span_Status_UNSET Span_Status_Code = 0
	Span_Status_OK    Span_Status_Code = 1
	Span_Status_ERROR Span_Status_Code = 2
)

// Enum value maps for Span_Status_Code.
var (
	Span_Status_Code_name = map[int32]string{
		0: "UNSET",
		1: "OK",
		2: "ERROR",
	}
	Span_Status_Code_value = map[string]int32{
		"UNSET": 0,
		"OK":    1,
		"ERROR": 2,
	}
)

func (x Span_Status_Code) Enum() *Span_Status_Code {
	p := new(Span_Status_Code)
	*p = x
	return p
}

func (x Span_Status_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Span_Status_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_types_v1_otel_tracing_proto_enumTypes[1].Descriptor()
}

func (Span_Status_Code) Type() protoreflect.EnumType {
	return &file_types_v1_otel_tracing_proto_enumTypes[1]
}

func (x Span_Status_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Span_Status_Code.Descriptor instead.
func (Span_Status_Code) EnumDescriptor() ([]byte, []int) {
	return file_types_v1_otel_tracing_proto_rawDescGZIP(), []int{1, 2, 0}
}

type Trace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TraceId       *TraceID               `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	Spans         []*Span                `protobuf:"bytes,2,rep,name=spans,proto3" json:"spans,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trace) Reset() {
	*x = Trace{}
	mi := &file_types_v1_otel_tracing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trace) ProtoMessage() {}

func (x *Trace) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_otel_tracing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trace.ProtoReflect.Descriptor instead.
func (*Trace) Descriptor() ([]byte, []int) {
	return file_types_v1_otel_tracing_proto_rawDescGZIP(), []int{0}
}

func (x *Trace) GetTraceId() *TraceID {
	if x != nil {
		return x.TraceId
	}
	return nil
}

func (x *Trace) GetSpans() []*Span {
	if x != nil {
		return x.Spans
	}
	return nil
}

type Span struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ulid          *ULID                  `protobuf:"bytes,100,opt,name=ulid,proto3" json:"ulid,omitempty"`
	Indextime     *timestamppb.Timestamp `protobuf:"bytes,101,opt,name=indextime,proto3" json:"indextime,omitempty"`
	TraceId       *TraceID               `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId        *SpanID                `protobuf:"bytes,2,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	TraceState    string                 `protobuf:"bytes,3,opt,name=trace_state,json=traceState,proto3" json:"trace_state,omitempty"`
	ParentSpanId  *SpanID                `protobuf:"bytes,4,opt,name=parent_span_id,json=parentSpanId,proto3" json:"parent_span_id,omitempty"`
	Flags         uint32                 `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
	Name          string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Kind          Span_SpanKind          `protobuf:"varint,7,opt,name=kind,proto3,enum=types.v1.Span_SpanKind" json:"kind,omitempty"`
	ServiceName   string                 `protobuf:"bytes,8,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=time,proto3" json:"time,omitempty"`
	Duration      *durationpb.Duration   `protobuf:"bytes,10,opt,name=duration,proto3" json:"duration,omitempty"`
	Resource      *Resource              `protobuf:"bytes,11,opt,name=resource,proto3" json:"resource,omitempty"`
	Scope         *Scope                 `protobuf:"bytes,12,opt,name=scope,proto3" json:"scope,omitempty"`
	Attributes    []*KV                  `protobuf:"bytes,13,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Events        []*Span_Event          `protobuf:"bytes,14,rep,name=events,proto3" json:"events,omitempty"`
	Links         []*Span_Link           `protobuf:"bytes,15,rep,name=links,proto3" json:"links,omitempty"`
	Status        *Span_Status           `protobuf:"bytes,16,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Span) Reset() {
	*x = Span{}
	mi := &file_types_v1_otel_tracing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span) ProtoMessage() {}

func (x *Span) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_otel_tracing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span.ProtoReflect.Descriptor instead.
func (*Span) Descriptor() ([]byte, []int) {
	return file_types_v1_otel_tracing_proto_rawDescGZIP(), []int{1}
}

func (x *Span) GetUlid() *ULID {
	if x != nil {
		return x.Ulid
	}
	return nil
}

func (x *Span) GetIndextime() *timestamppb.Timestamp {
	if x != nil {
		return x.Indextime
	}
	return nil
}

func (x *Span) GetTraceId() *TraceID {
	if x != nil {
		return x.TraceId
	}
	return nil
}

func (x *Span) GetSpanId() *SpanID {
	if x != nil {
		return x.SpanId
	}
	return nil
}

func (x *Span) GetTraceState() string {
	if x != nil {
		return x.TraceState
	}
	return ""
}

func (x *Span) GetParentSpanId() *SpanID {
	if x != nil {
		return x.ParentSpanId
	}
	return nil
}

func (x *Span) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Span) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Span) GetKind() Span_SpanKind {
	if x != nil {
		return x.Kind
	}
	return Span_UNSPECIFIED
}

func (x *Span) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Span) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Span) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Span) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Span) GetScope() *Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *Span) GetAttributes() []*KV {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Span) GetEvents() []*Span_Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Span) GetLinks() []*Span_Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *Span) GetStatus() *Span_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type Span_Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Kvs           []*KV                  `protobuf:"bytes,3,rep,name=kvs,proto3" json:"kvs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Span_Event) Reset() {
	*x = Span_Event{}
	mi := &file_types_v1_otel_tracing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Span_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span_Event) ProtoMessage() {}

func (x *Span_Event) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_otel_tracing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span_Event.ProtoReflect.Descriptor instead.
func (*Span_Event) Descriptor() ([]byte, []int) {
	return file_types_v1_otel_tracing_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Span_Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Span_Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Span_Event) GetKvs() []*KV {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type Span_Link struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TraceId       *TraceID               `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId        *SpanID                `protobuf:"bytes,2,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	TraceState    string                 `protobuf:"bytes,3,opt,name=trace_state,json=traceState,proto3" json:"trace_state,omitempty"`
	Kvs           []*KV                  `protobuf:"bytes,4,rep,name=kvs,proto3" json:"kvs,omitempty"`
	Flags         uint32                 `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Span_Link) Reset() {
	*x = Span_Link{}
	mi := &file_types_v1_otel_tracing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Span_Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span_Link) ProtoMessage() {}

func (x *Span_Link) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_otel_tracing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span_Link.ProtoReflect.Descriptor instead.
func (*Span_Link) Descriptor() ([]byte, []int) {
	return file_types_v1_otel_tracing_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Span_Link) GetTraceId() *TraceID {
	if x != nil {
		return x.TraceId
	}
	return nil
}

func (x *Span_Link) GetSpanId() *SpanID {
	if x != nil {
		return x.SpanId
	}
	return nil
}

func (x *Span_Link) GetTraceState() string {
	if x != nil {
		return x.TraceState
	}
	return ""
}

func (x *Span_Link) GetKvs() []*KV {
	if x != nil {
		return x.Kvs
	}
	return nil
}

func (x *Span_Link) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type Span_Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code          Span_Status_Code       `protobuf:"varint,2,opt,name=code,proto3,enum=types.v1.Span_Status_Code" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Span_Status) Reset() {
	*x = Span_Status{}
	mi := &file_types_v1_otel_tracing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Span_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span_Status) ProtoMessage() {}

func (x *Span_Status) ProtoReflect() protoreflect.Message {
	mi := &file_types_v1_otel_tracing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span_Status.ProtoReflect.Descriptor instead.
func (*Span_Status) Descriptor() ([]byte, []int) {
	return file_types_v1_otel_tracing_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Span_Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Span_Status) GetCode() Span_Status_Code {
	if x != nil {
		return x.Code
	}
	return Span_Status_UNSET
}

var File_types_v1_otel_tracing_proto protoreflect.FileDescriptor

const file_types_v1_otel_tracing_proto_rawDesc = "" +
	"\n" +
	"\x1btypes/v1/otel_tracing.proto\x12\btypes.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1ctypes/v1/otel_resource.proto\x1a\x19types/v1/otel_scope.proto\x1a\x14types/v1/types.proto\x1a\x13types/v1/ulid.proto\"[\n" +
	"\x05Trace\x12,\n" +
	"\btrace_id\x18\x01 \x01(\v2\x11.types.v1.TraceIDR\atraceId\x12$\n" +
	"\x05spans\x18\x02 \x03(\v2\x0e.types.v1.SpanR\x05spans\"\x8d\n" +
	"\n" +
	"\x04Span\x12\"\n" +
	"\x04ulid\x18d \x01(\v2\x0e.types.v1.ULIDR\x04ulid\x128\n" +
	"\tindextime\x18e \x01(\v2\x1a.google.protobuf.TimestampR\tindextime\x12,\n" +
	"\btrace_id\x18\x01 \x01(\v2\x11.types.v1.TraceIDR\atraceId\x12)\n" +
	"\aspan_id\x18\x02 \x01(\v2\x10.types.v1.SpanIDR\x06spanId\x12\x1f\n" +
	"\vtrace_state\x18\x03 \x01(\tR\n" +
	"traceState\x126\n" +
	"\x0eparent_span_id\x18\x04 \x01(\v2\x10.types.v1.SpanIDR\fparentSpanId\x12\x14\n" +
	"\x05flags\x18\x05 \x01(\rR\x05flags\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12+\n" +
	"\x04kind\x18\a \x01(\x0e2\x17.types.v1.Span.SpanKindR\x04kind\x12!\n" +
	"\fservice_name\x18\b \x01(\tR\vserviceName\x12.\n" +
	"\x04time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x125\n" +
	"\bduration\x18\n" +
	" \x01(\v2\x19.google.protobuf.DurationR\bduration\x12.\n" +
	"\bresource\x18\v \x01(\v2\x12.types.v1.ResourceR\bresource\x12%\n" +
	"\x05scope\x18\f \x01(\v2\x0f.types.v1.ScopeR\x05scope\x12,\n" +
	"\n" +
	"attributes\x18\r \x03(\v2\f.types.v1.KVR\n" +
	"attributes\x12,\n" +
	"\x06events\x18\x0e \x03(\v2\x14.types.v1.Span.EventR\x06events\x12)\n" +
	"\x05links\x18\x0f \x03(\v2\x13.types.v1.Span.LinkR\x05links\x12-\n" +
	"\x06status\x18\x10 \x01(\v2\x15.types.v1.Span.StatusR\x06status\x1au\n" +
	"\x05Event\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1e\n" +
	"\x03kvs\x18\x03 \x03(\v2\f.types.v1.KVR\x03kvs\x1a\xb6\x01\n" +
	"\x04Link\x12,\n" +
	"\btrace_id\x18\x01 \x01(\v2\x11.types.v1.TraceIDR\atraceId\x12)\n" +
	"\aspan_id\x18\x02 \x01(\v2\x10.types.v1.SpanIDR\x06spanId\x12\x1f\n" +
	"\vtrace_state\x18\x03 \x01(\tR\n" +
	"traceState\x12\x1e\n" +
	"\x03kvs\x18\x04 \x03(\v2\f.types.v1.KVR\x03kvs\x12\x14\n" +
	"\x05flags\x18\x05 \x01(\rR\x05flags\x1ax\n" +
	"\x06Status\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12.\n" +
	"\x04code\x18\x02 \x01(\x0e2\x1a.types.v1.Span.Status.CodeR\x04code\"$\n" +
	"\x04Code\x12\t\n" +
	"\x05UNSET\x10\x00\x12\x06\n" +
	"\x02OK\x10\x01\x12\t\n" +
	"\x05ERROR\x10\x02\"]\n" +
	"\bSpanKind\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\f\n" +
	"\bINTERNAL\x10\x01\x12\n" +
	"\n" +
	"\x06SERVER\x10\x02\x12\n" +
	"\n" +
	"\x06CLIENT\x10\x03\x12\f\n" +
	"\bPRODUCER\x10\x04\x12\f\n" +
	"\bCONSUMER\x10\x05B\x90\x01\n" +
	"\fcom.types.v1B\x10OtelTracingProtoP\x01Z-github.com/humanlogio/api/go/types/v1;typesv1\xa2\x02\x03TXX\xaa\x02\bTypes.V1\xca\x02\bTypes\\V1\xe2\x02\x14Types\\V1\\GPBMetadata\xea\x02\tTypes::V1b\x06proto3"

var (
	file_types_v1_otel_tracing_proto_rawDescOnce sync.Once
	file_types_v1_otel_tracing_proto_rawDescData []byte
)

func file_types_v1_otel_tracing_proto_rawDescGZIP() []byte {
	file_types_v1_otel_tracing_proto_rawDescOnce.Do(func() {
		file_types_v1_otel_tracing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_types_v1_otel_tracing_proto_rawDesc), len(file_types_v1_otel_tracing_proto_rawDesc)))
	})
	return file_types_v1_otel_tracing_proto_rawDescData
}

var file_types_v1_otel_tracing_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_types_v1_otel_tracing_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_types_v1_otel_tracing_proto_goTypes = []any{
	(Span_SpanKind)(0),            // 0: types.v1.Span.SpanKind
	(Span_Status_Code)(0),         // 1: types.v1.Span.Status.Code
	(*Trace)(nil),                 // 2: types.v1.Trace
	(*Span)(nil),                  // 3: types.v1.Span
	(*Span_Event)(nil),            // 4: types.v1.Span.Event
	(*Span_Link)(nil),             // 5: types.v1.Span.Link
	(*Span_Status)(nil),           // 6: types.v1.Span.Status
	(*TraceID)(nil),               // 7: types.v1.TraceID
	(*ULID)(nil),                  // 8: types.v1.ULID
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*SpanID)(nil),                // 10: types.v1.SpanID
	(*durationpb.Duration)(nil),   // 11: google.protobuf.Duration
	(*Resource)(nil),              // 12: types.v1.Resource
	(*Scope)(nil),                 // 13: types.v1.Scope
	(*KV)(nil),                    // 14: types.v1.KV
}
var file_types_v1_otel_tracing_proto_depIdxs = []int32{
	7,  // 0: types.v1.Trace.trace_id:type_name -> types.v1.TraceID
	3,  // 1: types.v1.Trace.spans:type_name -> types.v1.Span
	8,  // 2: types.v1.Span.ulid:type_name -> types.v1.ULID
	9,  // 3: types.v1.Span.indextime:type_name -> google.protobuf.Timestamp
	7,  // 4: types.v1.Span.trace_id:type_name -> types.v1.TraceID
	10, // 5: types.v1.Span.span_id:type_name -> types.v1.SpanID
	10, // 6: types.v1.Span.parent_span_id:type_name -> types.v1.SpanID
	0,  // 7: types.v1.Span.kind:type_name -> types.v1.Span.SpanKind
	9,  // 8: types.v1.Span.time:type_name -> google.protobuf.Timestamp
	11, // 9: types.v1.Span.duration:type_name -> google.protobuf.Duration
	12, // 10: types.v1.Span.resource:type_name -> types.v1.Resource
	13, // 11: types.v1.Span.scope:type_name -> types.v1.Scope
	14, // 12: types.v1.Span.attributes:type_name -> types.v1.KV
	4,  // 13: types.v1.Span.events:type_name -> types.v1.Span.Event
	5,  // 14: types.v1.Span.links:type_name -> types.v1.Span.Link
	6,  // 15: types.v1.Span.status:type_name -> types.v1.Span.Status
	9,  // 16: types.v1.Span.Event.timestamp:type_name -> google.protobuf.Timestamp
	14, // 17: types.v1.Span.Event.kvs:type_name -> types.v1.KV
	7,  // 18: types.v1.Span.Link.trace_id:type_name -> types.v1.TraceID
	10, // 19: types.v1.Span.Link.span_id:type_name -> types.v1.SpanID
	14, // 20: types.v1.Span.Link.kvs:type_name -> types.v1.KV
	1,  // 21: types.v1.Span.Status.code:type_name -> types.v1.Span.Status.Code
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_types_v1_otel_tracing_proto_init() }
func file_types_v1_otel_tracing_proto_init() {
	if File_types_v1_otel_tracing_proto != nil {
		return
	}
	file_types_v1_otel_resource_proto_init()
	file_types_v1_otel_scope_proto_init()
	file_types_v1_types_proto_init()
	file_types_v1_ulid_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_types_v1_otel_tracing_proto_rawDesc), len(file_types_v1_otel_tracing_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_v1_otel_tracing_proto_goTypes,
		DependencyIndexes: file_types_v1_otel_tracing_proto_depIdxs,
		EnumInfos:         file_types_v1_otel_tracing_proto_enumTypes,
		MessageInfos:      file_types_v1_otel_tracing_proto_msgTypes,
	}.Build()
	File_types_v1_otel_tracing_proto = out.File
	file_types_v1_otel_tracing_proto_goTypes = nil
	file_types_v1_otel_tracing_proto_depIdxs = nil
}
