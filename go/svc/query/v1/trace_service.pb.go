// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: svc/query/v1/trace_service.proto

package queryv1

import (
	v1 "github.com/humanlogio/api/go/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTraceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to By:
	//
	//	*GetTraceRequest_TraceId
	//	*GetTraceRequest_SpanId
	By            isGetTraceRequest_By `protobuf_oneof:"by"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTraceRequest) Reset() {
	*x = GetTraceRequest{}
	mi := &file_svc_query_v1_trace_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTraceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTraceRequest) ProtoMessage() {}

func (x *GetTraceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_query_v1_trace_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTraceRequest.ProtoReflect.Descriptor instead.
func (*GetTraceRequest) Descriptor() ([]byte, []int) {
	return file_svc_query_v1_trace_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetTraceRequest) GetBy() isGetTraceRequest_By {
	if x != nil {
		return x.By
	}
	return nil
}

func (x *GetTraceRequest) GetTraceId() string {
	if x != nil {
		if x, ok := x.By.(*GetTraceRequest_TraceId); ok {
			return x.TraceId
		}
	}
	return ""
}

func (x *GetTraceRequest) GetSpanId() string {
	if x != nil {
		if x, ok := x.By.(*GetTraceRequest_SpanId); ok {
			return x.SpanId
		}
	}
	return ""
}

type isGetTraceRequest_By interface {
	isGetTraceRequest_By()
}

type GetTraceRequest_TraceId struct {
	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3,oneof"`
}

type GetTraceRequest_SpanId struct {
	SpanId string `protobuf:"bytes,2,opt,name=span_id,json=spanId,proto3,oneof"`
}

func (*GetTraceRequest_TraceId) isGetTraceRequest_By() {}

func (*GetTraceRequest_SpanId) isGetTraceRequest_By() {}

type GetTraceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trace         *v1.Trace              `protobuf:"bytes,1,opt,name=trace,proto3" json:"trace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTraceResponse) Reset() {
	*x = GetTraceResponse{}
	mi := &file_svc_query_v1_trace_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTraceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTraceResponse) ProtoMessage() {}

func (x *GetTraceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_query_v1_trace_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTraceResponse.ProtoReflect.Descriptor instead.
func (*GetTraceResponse) Descriptor() ([]byte, []int) {
	return file_svc_query_v1_trace_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetTraceResponse) GetTrace() *v1.Trace {
	if x != nil {
		return x.Trace
	}
	return nil
}

type GetSpanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpanId        string                 `protobuf:"bytes,1,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpanRequest) Reset() {
	*x = GetSpanRequest{}
	mi := &file_svc_query_v1_trace_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpanRequest) ProtoMessage() {}

func (x *GetSpanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_query_v1_trace_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpanRequest.ProtoReflect.Descriptor instead.
func (*GetSpanRequest) Descriptor() ([]byte, []int) {
	return file_svc_query_v1_trace_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetSpanRequest) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

type GetSpanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Span          *v1.Span               `protobuf:"bytes,1,opt,name=span,proto3" json:"span,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpanResponse) Reset() {
	*x = GetSpanResponse{}
	mi := &file_svc_query_v1_trace_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpanResponse) ProtoMessage() {}

func (x *GetSpanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_query_v1_trace_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpanResponse.ProtoReflect.Descriptor instead.
func (*GetSpanResponse) Descriptor() ([]byte, []int) {
	return file_svc_query_v1_trace_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetSpanResponse) GetSpan() *v1.Span {
	if x != nil {
		return x.Span
	}
	return nil
}

var File_svc_query_v1_trace_service_proto protoreflect.FileDescriptor

var file_svc_query_v1_trace_service_proto_rawDesc = string([]byte{
	0x0a, 0x20, 0x73, 0x76, 0x63, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x73, 0x76, 0x63, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31,
	0x1a, 0x16, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x70, 0x61,
	0x6e, 0x49, 0x64, 0x42, 0x04, 0x0a, 0x02, 0x62, 0x79, 0x22, 0x39, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x05, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x61, 0x6e, 0x49, 0x64, 0x22,
	0x35, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x6e,
	0x52, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x32, 0xa1, 0x01, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x1c, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x70, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x76,
	0x63, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xaa, 0x01, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x76, 0x31, 0x42,
	0x11, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x6c, 0x6f, 0x67, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x6f, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x3b,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x51, 0x58, 0xaa, 0x02, 0x0c,
	0x53, 0x76, 0x63, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x53,
	0x76, 0x63, 0x5c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18, 0x53, 0x76,
	0x63, 0x5c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x53, 0x76, 0x63, 0x3a, 0x3a, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_svc_query_v1_trace_service_proto_rawDescOnce sync.Once
	file_svc_query_v1_trace_service_proto_rawDescData []byte
)

func file_svc_query_v1_trace_service_proto_rawDescGZIP() []byte {
	file_svc_query_v1_trace_service_proto_rawDescOnce.Do(func() {
		file_svc_query_v1_trace_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svc_query_v1_trace_service_proto_rawDesc), len(file_svc_query_v1_trace_service_proto_rawDesc)))
	})
	return file_svc_query_v1_trace_service_proto_rawDescData
}

var file_svc_query_v1_trace_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_svc_query_v1_trace_service_proto_goTypes = []any{
	(*GetTraceRequest)(nil),  // 0: svc.query.v1.GetTraceRequest
	(*GetTraceResponse)(nil), // 1: svc.query.v1.GetTraceResponse
	(*GetSpanRequest)(nil),   // 2: svc.query.v1.GetSpanRequest
	(*GetSpanResponse)(nil),  // 3: svc.query.v1.GetSpanResponse
	(*v1.Trace)(nil),         // 4: types.v1.Trace
	(*v1.Span)(nil),          // 5: types.v1.Span
}
var file_svc_query_v1_trace_service_proto_depIdxs = []int32{
	4, // 0: svc.query.v1.GetTraceResponse.trace:type_name -> types.v1.Trace
	5, // 1: svc.query.v1.GetSpanResponse.span:type_name -> types.v1.Span
	0, // 2: svc.query.v1.TraceService.GetTrace:input_type -> svc.query.v1.GetTraceRequest
	2, // 3: svc.query.v1.TraceService.GetSpan:input_type -> svc.query.v1.GetSpanRequest
	1, // 4: svc.query.v1.TraceService.GetTrace:output_type -> svc.query.v1.GetTraceResponse
	3, // 5: svc.query.v1.TraceService.GetSpan:output_type -> svc.query.v1.GetSpanResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_svc_query_v1_trace_service_proto_init() }
func file_svc_query_v1_trace_service_proto_init() {
	if File_svc_query_v1_trace_service_proto != nil {
		return
	}
	file_svc_query_v1_trace_service_proto_msgTypes[0].OneofWrappers = []any{
		(*GetTraceRequest_TraceId)(nil),
		(*GetTraceRequest_SpanId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svc_query_v1_trace_service_proto_rawDesc), len(file_svc_query_v1_trace_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_query_v1_trace_service_proto_goTypes,
		DependencyIndexes: file_svc_query_v1_trace_service_proto_depIdxs,
		MessageInfos:      file_svc_query_v1_trace_service_proto_msgTypes,
	}.Build()
	File_svc_query_v1_trace_service_proto = out.File
	file_svc_query_v1_trace_service_proto_goTypes = nil
	file_svc_query_v1_trace_service_proto_depIdxs = nil
}
