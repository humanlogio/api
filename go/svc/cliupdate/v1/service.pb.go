// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: svc/cliupdate/v1/service.proto

package cliupdatev1

import (
	v1 "github.com/humanlogio/api/go/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNextUpdateRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ProjectName            string                 `protobuf:"bytes,1,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	CurrentVersion         *v1.Version            `protobuf:"bytes,2,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	MachineArchitecture    string                 `protobuf:"bytes,3,opt,name=machine_architecture,json=machineArchitecture,proto3" json:"machine_architecture,omitempty"`
	MachineOperatingSystem string                 `protobuf:"bytes,4,opt,name=machine_operating_system,json=machineOperatingSystem,proto3" json:"machine_operating_system,omitempty"`
	ReleaseChannelName     *string                `protobuf:"bytes,5,opt,name=release_channel_name,json=releaseChannelName,proto3,oneof" json:"release_channel_name,omitempty"`
	Meta                   *v1.ReqMeta            `protobuf:"bytes,1000,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetNextUpdateRequest) Reset() {
	*x = GetNextUpdateRequest{}
	mi := &file_svc_cliupdate_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNextUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextUpdateRequest) ProtoMessage() {}

func (x *GetNextUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svc_cliupdate_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextUpdateRequest.ProtoReflect.Descriptor instead.
func (*GetNextUpdateRequest) Descriptor() ([]byte, []int) {
	return file_svc_cliupdate_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetNextUpdateRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *GetNextUpdateRequest) GetCurrentVersion() *v1.Version {
	if x != nil {
		return x.CurrentVersion
	}
	return nil
}

func (x *GetNextUpdateRequest) GetMachineArchitecture() string {
	if x != nil {
		return x.MachineArchitecture
	}
	return ""
}

func (x *GetNextUpdateRequest) GetMachineOperatingSystem() string {
	if x != nil {
		return x.MachineOperatingSystem
	}
	return ""
}

func (x *GetNextUpdateRequest) GetReleaseChannelName() string {
	if x != nil && x.ReleaseChannelName != nil {
		return *x.ReleaseChannelName
	}
	return ""
}

func (x *GetNextUpdateRequest) GetMeta() *v1.ReqMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type GetNextUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NextVersion   *v1.Version            `protobuf:"bytes,1,opt,name=next_version,json=nextVersion,proto3" json:"next_version,omitempty"`
	NextArtifact  *v1.VersionArtifact    `protobuf:"bytes,2,opt,name=next_artifact,json=nextArtifact,proto3" json:"next_artifact,omitempty"`
	Meta          *v1.ResMeta            `protobuf:"bytes,1000,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNextUpdateResponse) Reset() {
	*x = GetNextUpdateResponse{}
	mi := &file_svc_cliupdate_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNextUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextUpdateResponse) ProtoMessage() {}

func (x *GetNextUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svc_cliupdate_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextUpdateResponse.ProtoReflect.Descriptor instead.
func (*GetNextUpdateResponse) Descriptor() ([]byte, []int) {
	return file_svc_cliupdate_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetNextUpdateResponse) GetNextVersion() *v1.Version {
	if x != nil {
		return x.NextVersion
	}
	return nil
}

func (x *GetNextUpdateResponse) GetNextArtifact() *v1.VersionArtifact {
	if x != nil {
		return x.NextArtifact
	}
	return nil
}

func (x *GetNextUpdateResponse) GetMeta() *v1.ResMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

var File_svc_cliupdate_v1_service_proto protoreflect.FileDescriptor

const file_svc_cliupdate_v1_service_proto_rawDesc = "" +
	"\n" +
	"\x1esvc/cliupdate/v1/service.proto\x12\x10svc.cliupdate.v1\x1a\x13types/v1/meta.proto\x1a\x16types/v1/version.proto\x1a\x1ftypes/v1/version_artifact.proto\"\xda\x02\n" +
	"\x14GetNextUpdateRequest\x12!\n" +
	"\fproject_name\x18\x01 \x01(\tR\vprojectName\x12:\n" +
	"\x0fcurrent_version\x18\x02 \x01(\v2\x11.types.v1.VersionR\x0ecurrentVersion\x121\n" +
	"\x14machine_architecture\x18\x03 \x01(\tR\x13machineArchitecture\x128\n" +
	"\x18machine_operating_system\x18\x04 \x01(\tR\x16machineOperatingSystem\x125\n" +
	"\x14release_channel_name\x18\x05 \x01(\tH\x00R\x12releaseChannelName\x88\x01\x01\x12&\n" +
	"\x04meta\x18\xe8\a \x01(\v2\x11.types.v1.ReqMetaR\x04metaB\x17\n" +
	"\x15_release_channel_name\"\xb5\x01\n" +
	"\x15GetNextUpdateResponse\x124\n" +
	"\fnext_version\x18\x01 \x01(\v2\x11.types.v1.VersionR\vnextVersion\x12>\n" +
	"\rnext_artifact\x18\x02 \x01(\v2\x19.types.v1.VersionArtifactR\fnextArtifact\x12&\n" +
	"\x04meta\x18\xe8\a \x01(\v2\x11.types.v1.ResMetaR\x04meta2s\n" +
	"\rUpdateService\x12b\n" +
	"\rGetNextUpdate\x12&.svc.cliupdate.v1.GetNextUpdateRequest\x1a'.svc.cliupdate.v1.GetNextUpdateResponse\"\x00B\xc1\x01\n" +
	"\x14com.svc.cliupdate.v1B\fServiceProtoP\x01Z9github.com/humanlogio/api/go/svc/cliupdate/v1;cliupdatev1\xa2\x02\x03SCX\xaa\x02\x10Svc.Cliupdate.V1\xca\x02\x10Svc\\Cliupdate\\V1\xe2\x02\x1cSvc\\Cliupdate\\V1\\GPBMetadata\xea\x02\x12Svc::Cliupdate::V1b\x06proto3"

var (
	file_svc_cliupdate_v1_service_proto_rawDescOnce sync.Once
	file_svc_cliupdate_v1_service_proto_rawDescData []byte
)

func file_svc_cliupdate_v1_service_proto_rawDescGZIP() []byte {
	file_svc_cliupdate_v1_service_proto_rawDescOnce.Do(func() {
		file_svc_cliupdate_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svc_cliupdate_v1_service_proto_rawDesc), len(file_svc_cliupdate_v1_service_proto_rawDesc)))
	})
	return file_svc_cliupdate_v1_service_proto_rawDescData
}

var file_svc_cliupdate_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_svc_cliupdate_v1_service_proto_goTypes = []any{
	(*GetNextUpdateRequest)(nil),  // 0: svc.cliupdate.v1.GetNextUpdateRequest
	(*GetNextUpdateResponse)(nil), // 1: svc.cliupdate.v1.GetNextUpdateResponse
	(*v1.Version)(nil),            // 2: types.v1.Version
	(*v1.ReqMeta)(nil),            // 3: types.v1.ReqMeta
	(*v1.VersionArtifact)(nil),    // 4: types.v1.VersionArtifact
	(*v1.ResMeta)(nil),            // 5: types.v1.ResMeta
}
var file_svc_cliupdate_v1_service_proto_depIdxs = []int32{
	2, // 0: svc.cliupdate.v1.GetNextUpdateRequest.current_version:type_name -> types.v1.Version
	3, // 1: svc.cliupdate.v1.GetNextUpdateRequest.meta:type_name -> types.v1.ReqMeta
	2, // 2: svc.cliupdate.v1.GetNextUpdateResponse.next_version:type_name -> types.v1.Version
	4, // 3: svc.cliupdate.v1.GetNextUpdateResponse.next_artifact:type_name -> types.v1.VersionArtifact
	5, // 4: svc.cliupdate.v1.GetNextUpdateResponse.meta:type_name -> types.v1.ResMeta
	0, // 5: svc.cliupdate.v1.UpdateService.GetNextUpdate:input_type -> svc.cliupdate.v1.GetNextUpdateRequest
	1, // 6: svc.cliupdate.v1.UpdateService.GetNextUpdate:output_type -> svc.cliupdate.v1.GetNextUpdateResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_svc_cliupdate_v1_service_proto_init() }
func file_svc_cliupdate_v1_service_proto_init() {
	if File_svc_cliupdate_v1_service_proto != nil {
		return
	}
	file_svc_cliupdate_v1_service_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svc_cliupdate_v1_service_proto_rawDesc), len(file_svc_cliupdate_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svc_cliupdate_v1_service_proto_goTypes,
		DependencyIndexes: file_svc_cliupdate_v1_service_proto_depIdxs,
		MessageInfos:      file_svc_cliupdate_v1_service_proto_msgTypes,
	}.Build()
	File_svc_cliupdate_v1_service_proto = out.File
	file_svc_cliupdate_v1_service_proto_goTypes = nil
	file_svc_cliupdate_v1_service_proto_depIdxs = nil
}
